2025-08-28 13:01:13 [main] INFO  c.l.m.LibraryManagementApplication - Starting LibraryManagementApplication using Java 24.0.2 with PID 4404 (C:\Users\c6-std14\Desktop\LMS 25\lms-backened-23\target\classes started by c6-std14 in C:\Users\c6-std14\Desktop\LMS 25\lms-backened-23)
2025-08-28 13:01:13 [main] DEBUG c.l.m.LibraryManagementApplication - Running with Spring Boot v3.5.4, Spring v6.2.9
2025-08-28 13:01:13 [main] INFO  c.l.m.LibraryManagementApplication - No active profile set, falling back to 1 default profile: "default"
2025-08-28 13:01:19 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Bootstrapping Spring Data JPA repositories in DEFAULT mode.
2025-08-28 13:01:19 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 223 ms. Found 9 JPA repository interfaces.
2025-08-28 13:01:21 [main] INFO  o.s.b.w.e.tomcat.TomcatWebServer - Tomcat initialized with port 8080 (http)
2025-08-28 13:01:22 [main] INFO  o.a.catalina.core.StandardService - Starting service [Tomcat]
2025-08-28 13:01:22 [main] INFO  o.a.catalina.core.StandardEngine - Starting Servlet engine: [Apache Tomcat/10.1.43]
2025-08-28 13:01:22 [main] INFO  o.a.c.c.C.[Tomcat].[localhost].[/] - Initializing Spring embedded WebApplicationContext
2025-08-28 13:01:22 [main] INFO  o.s.b.w.s.c.ServletWebServerApplicationContext - Root WebApplicationContext: initialization completed in 8322 ms
2025-08-28 13:01:23 [main] INFO  o.h.jpa.internal.util.LogHelper - HHH000204: Processing PersistenceUnitInfo [name: default]
2025-08-28 13:01:23 [main] INFO  org.hibernate.Version - HHH000412: Hibernate ORM core version 6.6.22.Final
2025-08-28 13:01:23 [main] INFO  o.h.c.i.RegionFactoryInitiator - HHH000026: Second-level cache disabled
2025-08-28 13:01:25 [main] INFO  o.s.o.j.p.SpringPersistenceUnitInfo - No LoadTimeWeaver setup: ignoring JPA class transformer
2025-08-28 13:01:25 [main] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Starting...
2025-08-28 13:01:26 [main] INFO  com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Added connection conn0: url=jdbc:h2:mem:testdb user=SA
2025-08-28 13:01:26 [main] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Start completed.
2025-08-28 13:01:26 [main] WARN  org.hibernate.orm.deprecation - HHH90000025: H2Dialect does not need to be specified explicitly using 'hibernate.dialect' (remove the property setting and it will be selected by default)
2025-08-28 13:01:26 [main] INFO  o.hibernate.orm.connections.pooling - HHH10001005: Database info:
	Database JDBC URL [Connecting through datasource 'HikariDataSource (HikariPool-1)']
	Database driver: undefined/unknown
	Database version: 2.3.232
	Autocommit mode: undefined/unknown
	Isolation level: undefined/unknown
	Minimum pool size: undefined/unknown
	Maximum pool size: undefined/unknown
2025-08-28 13:01:29 [main] INFO  o.h.e.t.j.p.i.JtaPlatformInitiator - HHH000489: No JTA platform available (set 'hibernate.transaction.jta.platform' to enable JTA platform integration)
2025-08-28 13:01:30 [main] DEBUG org.hibernate.SQL - 
    drop table if exists admin_settings cascade 
2025-08-28 13:01:30 [main] DEBUG org.hibernate.SQL - 
    drop table if exists bookings cascade 
2025-08-28 13:01:30 [main] DEBUG org.hibernate.SQL - 
    drop table if exists books cascade 
2025-08-28 13:01:30 [main] DEBUG org.hibernate.SQL - 
    drop table if exists borrows cascade 
2025-08-28 13:01:30 [main] DEBUG org.hibernate.SQL - 
    drop table if exists categories cascade 
2025-08-28 13:01:30 [main] DEBUG org.hibernate.SQL - 
    drop table if exists donation_requests cascade 
2025-08-28 13:01:30 [main] DEBUG org.hibernate.SQL - 
    drop table if exists notifications cascade 
2025-08-28 13:01:30 [main] DEBUG org.hibernate.SQL - 
    drop table if exists reviews cascade 
2025-08-28 13:01:30 [main] DEBUG org.hibernate.SQL - 
    drop table if exists users cascade 
2025-08-28 13:01:30 [main] DEBUG org.hibernate.SQL - 
    create table admin_settings (
        booking_days_limit integer,
        borrow_book_limit integer,
        borrow_day_limit integer,
        borrow_extend_limit integer,
        created_at timestamp(6),
        id bigint generated by default as identity,
        updated_at timestamp(6),
        primary key (id)
    )
2025-08-28 13:01:30 [main] DEBUG org.hibernate.SQL - 
    create table bookings (
        booking_date date not null,
        expected_available_date date not null,
        book_id bigint not null,
        created_at timestamp(6),
        id bigint generated by default as identity,
        updated_at timestamp(6),
        user_id bigint not null,
        status enum ('CANCELLED','EXPIRED','FULFILLED','PENDING') not null,
        primary key (id)
    )
2025-08-28 13:01:30 [main] DEBUG org.hibernate.SQL - 
    create table books (
        available_copies integer not null,
        publication_year integer,
        total_copies integer not null,
        category_id bigint not null,
        created_at timestamp(6),
        id bigint generated by default as identity,
        updated_at timestamp(6),
        about TEXT,
        audio_file_url varchar(255),
        author varchar(255) not null,
        book_cover_url varchar(255),
        isbn varchar(255) unique,
        name varchar(255) not null,
        pdf_file_url varchar(255),
        short_details varchar(255),
        format enum ('AUDIO_BOOK','E_BOOK','HARD_COPY') not null,
        primary key (id)
    )
2025-08-28 13:01:30 [main] DEBUG org.hibernate.SQL - 
    create table borrows (
        borrow_date date not null,
        due_date date not null,
        extension_count integer,
        return_date date,
        book_id bigint not null,
        created_at timestamp(6),
        id bigint generated by default as identity,
        updated_at timestamp(6),
        user_id bigint not null,
        status enum ('ACCEPTED','ACTIVE','OVERDUE','REJECTED','REQUESTED','RETURNED') not null,
        primary key (id)
    )
2025-08-28 13:01:30 [main] DEBUG org.hibernate.SQL - 
    create table categories (
        created_at timestamp(6),
        id bigint generated by default as identity,
        updated_at timestamp(6),
        description varchar(255),
        name varchar(255) not null unique,
        primary key (id)
    )
2025-08-28 13:01:30 [main] DEBUG org.hibernate.SQL - 
    create table donation_requests (
        created_at timestamp(6),
        id bigint generated by default as identity,
        updated_at timestamp(6),
        user_id bigint not null,
        admin_notes TEXT,
        author varchar(255) not null,
        book_title varchar(255) not null,
        description TEXT,
        isbn varchar(255),
        status enum ('APPROVED','PENDING','RECEIVED','REJECTED') not null,
        primary key (id)
    )
2025-08-28 13:01:30 [main] DEBUG org.hibernate.SQL - 
    create table notifications (
        read boolean not null,
        id bigint generated by default as identity,
        timestamp timestamp(6),
        message varchar(255),
        recipient varchar(255),
        primary key (id)
    )
2025-08-28 13:01:30 [main] DEBUG org.hibernate.SQL - 
    create table reviews (
        rating integer not null,
        book_id bigint not null,
        created_at timestamp(6),
        id bigint generated by default as identity,
        updated_at timestamp(6),
        user_id bigint not null,
        comment TEXT,
        primary key (id)
    )
2025-08-28 13:01:30 [main] DEBUG org.hibernate.SQL - 
    create table users (
        date_of_birth date,
        is_active boolean not null,
        created_at timestamp(6),
        id bigint generated by default as identity,
        updated_at timestamp(6),
        address varchar(255),
        email varchar(255) not null unique,
        name varchar(255) not null,
        password_hash varchar(255) not null,
        role varchar(255) not null,
        username varchar(255) not null unique,
        primary key (id)
    )
2025-08-28 13:01:30 [main] DEBUG org.hibernate.SQL - 
    alter table if exists bookings 
       add constraint FKm827phjjfy5m6q8vsjmi1gybv 
       foreign key (book_id) 
       references books
2025-08-28 13:01:30 [main] DEBUG org.hibernate.SQL - 
    alter table if exists bookings 
       add constraint FKeyog2oic85xg7hsu2je2lx3s6 
       foreign key (user_id) 
       references users
2025-08-28 13:01:30 [main] DEBUG org.hibernate.SQL - 
    alter table if exists books 
       add constraint FKleqa3hhc0uhfvurq6mil47xk0 
       foreign key (category_id) 
       references categories
2025-08-28 13:01:30 [main] DEBUG org.hibernate.SQL - 
    alter table if exists borrows 
       add constraint FK8789wjikihu9ocbhamiw789y9 
       foreign key (book_id) 
       references books
2025-08-28 13:01:30 [main] DEBUG org.hibernate.SQL - 
    alter table if exists borrows 
       add constraint FKd64ttskt7j96v1nqtpry3pp2a 
       foreign key (user_id) 
       references users
2025-08-28 13:01:30 [main] DEBUG org.hibernate.SQL - 
    alter table if exists donation_requests 
       add constraint FK42i2vj0hduc4jwntg1ute8v4g 
       foreign key (user_id) 
       references users
2025-08-28 13:01:30 [main] DEBUG org.hibernate.SQL - 
    alter table if exists reviews 
       add constraint FK6a9k6xvev80se5rreqvuqr7f9 
       foreign key (book_id) 
       references books
2025-08-28 13:01:30 [main] DEBUG org.hibernate.SQL - 
    alter table if exists reviews 
       add constraint FKcgy7qjc1r99dp117y9en6lxye 
       foreign key (user_id) 
       references users
2025-08-28 13:01:30 [main] INFO  o.s.o.j.LocalContainerEntityManagerFactoryBean - Initialized JPA EntityManagerFactory for persistence unit 'default'
2025-08-28 13:01:31 [main] INFO  o.s.d.j.r.query.QueryEnhancerFactory - Hibernate is in classpath; If applicable, HQL parser will be used.
2025-08-28 13:01:33 [main] DEBUG c.l.m.s.JwtAuthenticationFilter - Filter 'jwtAuthenticationFilter' configured for use
2025-08-28 13:01:33 [main] INFO  o.s.s.c.a.a.c.InitializeAuthenticationProviderBeanManagerConfigurer$InitializeAuthenticationProviderManagerConfigurer - Global AuthenticationManager configured with AuthenticationProvider bean with name authenticationProvider
2025-08-28 13:01:33 [main] WARN  o.s.s.c.a.a.c.InitializeUserDetailsBeanManagerConfigurer$InitializeUserDetailsManagerConfigurer - Global AuthenticationManager configured with an AuthenticationProvider bean. UserDetailsService beans will not be used by Spring Security for automatically configuring username/password login. Consider removing the AuthenticationProvider bean. Alternatively, consider using the UserDetailsService in a manually instantiated DaoAuthenticationProvider. If the current configuration is intentional, to turn off this warning, increase the logging level of 'org.springframework.security.config.annotation.authentication.configuration.InitializeUserDetailsBeanManagerConfigurer' to ERROR
2025-08-28 13:01:35 [main] INFO  o.s.b.a.e.web.EndpointLinksResolver - Exposing 2 endpoints beneath base path '/actuator'
2025-08-28 13:01:35 [main] WARN  o.s.b.a.o.j.JpaBaseConfiguration$JpaWebConfiguration - spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
2025-08-28 13:01:36 [main] INFO  o.s.b.a.h.H2ConsoleAutoConfiguration - H2 console available at '/h2-console'. Database available at 'jdbc:h2:mem:testdb'
2025-08-28 13:01:37 [main] INFO  o.s.b.w.e.tomcat.TomcatWebServer - Tomcat started on port 8080 (http) with context path '/'
2025-08-28 13:01:37 [main] INFO  c.l.m.LibraryManagementApplication - Started LibraryManagementApplication in 26.151 seconds (process running for 27.983)
2025-08-28 13:01:38 [http-nio-8080-exec-4] INFO  o.a.c.c.C.[Tomcat].[localhost].[/] - Initializing Spring DispatcherServlet 'dispatcherServlet'
2025-08-28 13:01:38 [http-nio-8080-exec-4] INFO  o.s.web.servlet.DispatcherServlet - Initializing Servlet 'dispatcherServlet'
2025-08-28 13:01:38 [http-nio-8080-exec-4] INFO  o.s.web.servlet.DispatcherServlet - Completed initialization in 2 ms
2025-08-28 13:01:46 [http-nio-8080-exec-9] INFO  o.s.api.AbstractOpenApiResource - Init duration for springdoc-openapi is: 7270 ms
2025-08-28 13:01:53 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.address,
        u1_0.created_at,
        u1_0.date_of_birth,
        u1_0.email,
        u1_0.is_active,
        u1_0.name,
        u1_0.password_hash,
        u1_0.role,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.email=?
2025-08-28 13:01:53 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.address,
        u1_0.created_at,
        u1_0.date_of_birth,
        u1_0.email,
        u1_0.is_active,
        u1_0.name,
        u1_0.password_hash,
        u1_0.role,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.username=?
2025-08-28 13:01:53 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL - 
    insert 
    into
        users
        (address, created_at, date_of_birth, email, is_active, name, password_hash, role, updated_at, username, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, default)
2025-08-28 13:02:20 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.address,
        u1_0.created_at,
        u1_0.date_of_birth,
        u1_0.email,
        u1_0.is_active,
        u1_0.name,
        u1_0.password_hash,
        u1_0.role,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.username=?
2025-08-28 13:02:20 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.address,
        u1_0.created_at,
        u1_0.date_of_birth,
        u1_0.email,
        u1_0.is_active,
        u1_0.name,
        u1_0.password_hash,
        u1_0.role,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.id=?
2025-08-28 13:02:20 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    select
        b1_0.id,
        b1_0.about,
        b1_0.audio_file_url,
        b1_0.author,
        b1_0.available_copies,
        b1_0.book_cover_url,
        b1_0.category_id,
        b1_0.created_at,
        b1_0.format,
        b1_0.isbn,
        b1_0.name,
        b1_0.pdf_file_url,
        b1_0.publication_year,
        b1_0.short_details,
        b1_0.total_copies,
        b1_0.updated_at 
    from
        books b1_0 
    where
        b1_0.id=?
2025-08-28 13:02:20 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    select
        count(b1_0.id) 
    from
        borrows b1_0 
    where
        b1_0.user_id=? 
        and b1_0.return_date is null
2025-08-28 13:02:20 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    select
        b1_0.id,
        b1_0.book_id,
        b1_0.borrow_date,
        b1_0.created_at,
        b1_0.due_date,
        b1_0.extension_count,
        b1_0.return_date,
        b1_0.status,
        b1_0.updated_at,
        b1_0.user_id 
    from
        borrows b1_0 
    where
        b1_0.user_id=? 
        and b1_0.status=?
2025-08-28 13:02:20 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    select
        b1_0.id,
        b1_0.book_id,
        b1_0.borrow_date,
        b1_0.created_at,
        b1_0.due_date,
        b1_0.extension_count,
        b1_0.return_date,
        b1_0.status,
        b1_0.updated_at,
        b1_0.user_id 
    from
        borrows b1_0 
    where
        b1_0.user_id=? 
        and b1_0.book_id=? 
        and b1_0.return_date is null
2025-08-28 13:02:20 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    insert 
    into
        borrows
        (book_id, borrow_date, created_at, due_date, extension_count, return_date, status, updated_at, user_id, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, ?, default)
2025-08-28 13:02:20 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    select
        r1_0.book_id,
        r1_0.id,
        r1_0.comment,
        r1_0.created_at,
        r1_0.rating,
        r1_0.updated_at,
        r1_0.user_id 
    from
        reviews r1_0 
    where
        r1_0.book_id=?
2025-08-28 13:02:20 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    update
        books 
    set
        about=?,
        audio_file_url=?,
        author=?,
        available_copies=?,
        book_cover_url=?,
        category_id=?,
        format=?,
        isbn=?,
        name=?,
        pdf_file_url=?,
        publication_year=?,
        short_details=?,
        total_copies=?,
        updated_at=? 
    where
        id=?
2025-08-28 13:43:30 [SpringApplicationShutdownHook] INFO  o.s.b.w.e.tomcat.GracefulShutdown - Commencing graceful shutdown. Waiting for active requests to complete
2025-08-28 13:43:30 [tomcat-shutdown] INFO  o.s.b.w.e.tomcat.GracefulShutdown - Graceful shutdown complete
2025-08-28 13:43:30 [SpringApplicationShutdownHook] INFO  o.s.o.j.LocalContainerEntityManagerFactoryBean - Closing JPA EntityManagerFactory for persistence unit 'default'
2025-08-28 13:43:30 [SpringApplicationShutdownHook] DEBUG org.hibernate.SQL - 
    drop table if exists admin_settings cascade 
2025-08-28 13:43:30 [SpringApplicationShutdownHook] DEBUG org.hibernate.SQL - 
    drop table if exists bookings cascade 
2025-08-28 13:43:30 [SpringApplicationShutdownHook] DEBUG org.hibernate.SQL - 
    drop table if exists books cascade 
2025-08-28 13:43:30 [SpringApplicationShutdownHook] DEBUG org.hibernate.SQL - 
    drop table if exists borrows cascade 
2025-08-28 13:43:30 [SpringApplicationShutdownHook] DEBUG org.hibernate.SQL - 
    drop table if exists categories cascade 
2025-08-28 13:43:30 [SpringApplicationShutdownHook] DEBUG org.hibernate.SQL - 
    drop table if exists donation_requests cascade 
2025-08-28 13:43:30 [SpringApplicationShutdownHook] DEBUG org.hibernate.SQL - 
    drop table if exists notifications cascade 
2025-08-28 13:43:30 [SpringApplicationShutdownHook] DEBUG org.hibernate.SQL - 
    drop table if exists reviews cascade 
2025-08-28 13:43:31 [SpringApplicationShutdownHook] DEBUG org.hibernate.SQL - 
    drop table if exists users cascade 
2025-08-28 13:43:31 [SpringApplicationShutdownHook] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Shutdown initiated...
2025-08-28 13:43:31 [SpringApplicationShutdownHook] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Shutdown completed.
2025-08-28 13:43:41 [main] INFO  c.l.m.LibraryManagementApplication - Starting LibraryManagementApplication using Java 24.0.2 with PID 7708 (C:\Users\c6-std14\Desktop\LMS 25\lms-backened-23\target\classes started by c6-std14 in C:\Users\c6-std14\Desktop\LMS 25\lms-backened-23)
2025-08-28 13:43:41 [main] DEBUG c.l.m.LibraryManagementApplication - Running with Spring Boot v3.5.4, Spring v6.2.9
2025-08-28 13:43:41 [main] INFO  c.l.m.LibraryManagementApplication - No active profile set, falling back to 1 default profile: "default"
2025-08-28 13:43:45 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Bootstrapping Spring Data JPA repositories in DEFAULT mode.
2025-08-28 13:43:45 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 197 ms. Found 9 JPA repository interfaces.
2025-08-28 13:43:46 [main] INFO  o.s.b.w.e.tomcat.TomcatWebServer - Tomcat initialized with port 8080 (http)
2025-08-28 13:43:46 [main] INFO  o.a.catalina.core.StandardService - Starting service [Tomcat]
2025-08-28 13:43:46 [main] INFO  o.a.catalina.core.StandardEngine - Starting Servlet engine: [Apache Tomcat/10.1.43]
2025-08-28 13:43:47 [main] INFO  o.a.c.c.C.[Tomcat].[localhost].[/] - Initializing Spring embedded WebApplicationContext
2025-08-28 13:43:47 [main] INFO  o.s.b.w.s.c.ServletWebServerApplicationContext - Root WebApplicationContext: initialization completed in 5264 ms
2025-08-28 13:43:47 [main] INFO  o.h.jpa.internal.util.LogHelper - HHH000204: Processing PersistenceUnitInfo [name: default]
2025-08-28 13:43:47 [main] INFO  org.hibernate.Version - HHH000412: Hibernate ORM core version 6.6.22.Final
2025-08-28 13:43:47 [main] INFO  o.h.c.i.RegionFactoryInitiator - HHH000026: Second-level cache disabled
2025-08-28 13:43:48 [main] INFO  o.s.o.j.p.SpringPersistenceUnitInfo - No LoadTimeWeaver setup: ignoring JPA class transformer
2025-08-28 13:43:48 [main] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Starting...
2025-08-28 13:43:48 [main] INFO  com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Added connection conn0: url=jdbc:h2:mem:testdb user=SA
2025-08-28 13:43:48 [main] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Start completed.
2025-08-28 13:43:49 [main] WARN  org.hibernate.orm.deprecation - HHH90000025: H2Dialect does not need to be specified explicitly using 'hibernate.dialect' (remove the property setting and it will be selected by default)
2025-08-28 13:43:49 [main] INFO  o.hibernate.orm.connections.pooling - HHH10001005: Database info:
	Database JDBC URL [Connecting through datasource 'HikariDataSource (HikariPool-1)']
	Database driver: undefined/unknown
	Database version: 2.3.232
	Autocommit mode: undefined/unknown
	Isolation level: undefined/unknown
	Minimum pool size: undefined/unknown
	Maximum pool size: undefined/unknown
2025-08-28 13:43:51 [main] INFO  o.h.e.t.j.p.i.JtaPlatformInitiator - HHH000489: No JTA platform available (set 'hibernate.transaction.jta.platform' to enable JTA platform integration)
2025-08-28 13:43:51 [main] DEBUG org.hibernate.SQL - 
    drop table if exists admin_settings cascade 
2025-08-28 13:43:51 [main] DEBUG org.hibernate.SQL - 
    drop table if exists bookings cascade 
2025-08-28 13:43:51 [main] DEBUG org.hibernate.SQL - 
    drop table if exists books cascade 
2025-08-28 13:43:51 [main] DEBUG org.hibernate.SQL - 
    drop table if exists borrows cascade 
2025-08-28 13:43:51 [main] DEBUG org.hibernate.SQL - 
    drop table if exists categories cascade 
2025-08-28 13:43:51 [main] DEBUG org.hibernate.SQL - 
    drop table if exists donation_requests cascade 
2025-08-28 13:43:51 [main] DEBUG org.hibernate.SQL - 
    drop table if exists notifications cascade 
2025-08-28 13:43:51 [main] DEBUG org.hibernate.SQL - 
    drop table if exists reviews cascade 
2025-08-28 13:43:51 [main] DEBUG org.hibernate.SQL - 
    drop table if exists users cascade 
2025-08-28 13:43:51 [main] DEBUG org.hibernate.SQL - 
    create table admin_settings (
        booking_days_limit integer,
        borrow_book_limit integer,
        borrow_day_limit integer,
        borrow_extend_limit integer,
        created_at timestamp(6),
        id bigint generated by default as identity,
        updated_at timestamp(6),
        primary key (id)
    )
2025-08-28 13:43:51 [main] DEBUG org.hibernate.SQL - 
    create table bookings (
        booking_date date not null,
        expected_available_date date not null,
        book_id bigint not null,
        created_at timestamp(6),
        id bigint generated by default as identity,
        updated_at timestamp(6),
        user_id bigint not null,
        status enum ('CANCELLED','EXPIRED','FULFILLED','PENDING') not null,
        primary key (id)
    )
2025-08-28 13:43:51 [main] DEBUG org.hibernate.SQL - 
    create table books (
        available_copies integer not null,
        publication_year integer,
        total_copies integer not null,
        category_id bigint not null,
        created_at timestamp(6),
        id bigint generated by default as identity,
        updated_at timestamp(6),
        about TEXT,
        audio_file_url varchar(255),
        author varchar(255) not null,
        book_cover_url varchar(255),
        isbn varchar(255) unique,
        name varchar(255) not null,
        pdf_file_url varchar(255),
        short_details varchar(255),
        format enum ('AUDIO_BOOK','E_BOOK','HARD_COPY') not null,
        primary key (id)
    )
2025-08-28 13:43:51 [main] DEBUG org.hibernate.SQL - 
    create table borrows (
        borrow_date date not null,
        due_date date not null,
        extension_count integer,
        return_date date,
        book_id bigint not null,
        created_at timestamp(6),
        id bigint generated by default as identity,
        updated_at timestamp(6),
        user_id bigint not null,
        status enum ('ACCEPTED','ACTIVE','OVERDUE','REJECTED','REQUESTED','RETURNED') not null,
        primary key (id)
    )
2025-08-28 13:43:51 [main] DEBUG org.hibernate.SQL - 
    create table categories (
        created_at timestamp(6),
        id bigint generated by default as identity,
        updated_at timestamp(6),
        description varchar(255),
        name varchar(255) not null unique,
        primary key (id)
    )
2025-08-28 13:43:51 [main] DEBUG org.hibernate.SQL - 
    create table donation_requests (
        created_at timestamp(6),
        id bigint generated by default as identity,
        updated_at timestamp(6),
        user_id bigint not null,
        admin_notes TEXT,
        author varchar(255) not null,
        book_title varchar(255) not null,
        description TEXT,
        isbn varchar(255),
        status enum ('APPROVED','PENDING','RECEIVED','REJECTED') not null,
        primary key (id)
    )
2025-08-28 13:43:51 [main] DEBUG org.hibernate.SQL - 
    create table notifications (
        read boolean not null,
        id bigint generated by default as identity,
        timestamp timestamp(6),
        message varchar(255),
        recipient varchar(255),
        primary key (id)
    )
2025-08-28 13:43:51 [main] DEBUG org.hibernate.SQL - 
    create table reviews (
        rating integer not null,
        book_id bigint not null,
        created_at timestamp(6),
        id bigint generated by default as identity,
        updated_at timestamp(6),
        user_id bigint not null,
        comment TEXT,
        primary key (id)
    )
2025-08-28 13:43:51 [main] DEBUG org.hibernate.SQL - 
    create table users (
        date_of_birth date,
        is_active boolean not null,
        created_at timestamp(6),
        id bigint generated by default as identity,
        updated_at timestamp(6),
        address varchar(255),
        email varchar(255) not null unique,
        name varchar(255) not null,
        password_hash varchar(255) not null,
        role varchar(255) not null,
        username varchar(255) not null unique,
        primary key (id)
    )
2025-08-28 13:43:51 [main] DEBUG org.hibernate.SQL - 
    alter table if exists bookings 
       add constraint FKm827phjjfy5m6q8vsjmi1gybv 
       foreign key (book_id) 
       references books
2025-08-28 13:43:51 [main] DEBUG org.hibernate.SQL - 
    alter table if exists bookings 
       add constraint FKeyog2oic85xg7hsu2je2lx3s6 
       foreign key (user_id) 
       references users
2025-08-28 13:43:51 [main] DEBUG org.hibernate.SQL - 
    alter table if exists books 
       add constraint FKleqa3hhc0uhfvurq6mil47xk0 
       foreign key (category_id) 
       references categories
2025-08-28 13:43:51 [main] DEBUG org.hibernate.SQL - 
    alter table if exists borrows 
       add constraint FK8789wjikihu9ocbhamiw789y9 
       foreign key (book_id) 
       references books
2025-08-28 13:43:51 [main] DEBUG org.hibernate.SQL - 
    alter table if exists borrows 
       add constraint FKd64ttskt7j96v1nqtpry3pp2a 
       foreign key (user_id) 
       references users
2025-08-28 13:43:51 [main] DEBUG org.hibernate.SQL - 
    alter table if exists donation_requests 
       add constraint FK42i2vj0hduc4jwntg1ute8v4g 
       foreign key (user_id) 
       references users
2025-08-28 13:43:51 [main] DEBUG org.hibernate.SQL - 
    alter table if exists reviews 
       add constraint FK6a9k6xvev80se5rreqvuqr7f9 
       foreign key (book_id) 
       references books
2025-08-28 13:43:51 [main] DEBUG org.hibernate.SQL - 
    alter table if exists reviews 
       add constraint FKcgy7qjc1r99dp117y9en6lxye 
       foreign key (user_id) 
       references users
2025-08-28 13:43:51 [main] INFO  o.s.o.j.LocalContainerEntityManagerFactoryBean - Initialized JPA EntityManagerFactory for persistence unit 'default'
2025-08-28 13:43:52 [main] INFO  o.s.d.j.r.query.QueryEnhancerFactory - Hibernate is in classpath; If applicable, HQL parser will be used.
2025-08-28 13:43:54 [main] DEBUG c.l.m.s.JwtAuthenticationFilter - Filter 'jwtAuthenticationFilter' configured for use
2025-08-28 13:43:54 [main] INFO  o.s.s.c.a.a.c.InitializeAuthenticationProviderBeanManagerConfigurer$InitializeAuthenticationProviderManagerConfigurer - Global AuthenticationManager configured with AuthenticationProvider bean with name authenticationProvider
2025-08-28 13:43:54 [main] WARN  o.s.s.c.a.a.c.InitializeUserDetailsBeanManagerConfigurer$InitializeUserDetailsManagerConfigurer - Global AuthenticationManager configured with an AuthenticationProvider bean. UserDetailsService beans will not be used by Spring Security for automatically configuring username/password login. Consider removing the AuthenticationProvider bean. Alternatively, consider using the UserDetailsService in a manually instantiated DaoAuthenticationProvider. If the current configuration is intentional, to turn off this warning, increase the logging level of 'org.springframework.security.config.annotation.authentication.configuration.InitializeUserDetailsBeanManagerConfigurer' to ERROR
2025-08-28 13:43:56 [main] INFO  o.s.b.a.e.web.EndpointLinksResolver - Exposing 2 endpoints beneath base path '/actuator'
2025-08-28 13:43:56 [main] WARN  o.s.b.a.o.j.JpaBaseConfiguration$JpaWebConfiguration - spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
2025-08-28 13:43:57 [main] INFO  o.s.b.a.h.H2ConsoleAutoConfiguration - H2 console available at '/h2-console'. Database available at 'jdbc:h2:mem:testdb'
2025-08-28 13:43:58 [main] INFO  o.s.b.w.e.tomcat.TomcatWebServer - Tomcat started on port 8080 (http) with context path '/'
2025-08-28 13:43:58 [main] INFO  c.l.m.LibraryManagementApplication - Started LibraryManagementApplication in 17.411 seconds (process running for 18.323)
2025-08-28 13:44:02 [http-nio-8080-exec-1] INFO  o.a.c.c.C.[Tomcat].[localhost].[/] - Initializing Spring DispatcherServlet 'dispatcherServlet'
2025-08-28 13:44:02 [http-nio-8080-exec-1] INFO  o.s.web.servlet.DispatcherServlet - Initializing Servlet 'dispatcherServlet'
2025-08-28 13:44:02 [http-nio-8080-exec-1] INFO  o.s.web.servlet.DispatcherServlet - Completed initialization in 3 ms
2025-08-28 13:44:09 [http-nio-8080-exec-5] INFO  o.s.api.AbstractOpenApiResource - Init duration for springdoc-openapi is: 6581 ms
2025-08-28 13:44:47 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.address,
        u1_0.created_at,
        u1_0.date_of_birth,
        u1_0.email,
        u1_0.is_active,
        u1_0.name,
        u1_0.password_hash,
        u1_0.role,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.email=?
2025-08-28 13:44:47 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.address,
        u1_0.created_at,
        u1_0.date_of_birth,
        u1_0.email,
        u1_0.is_active,
        u1_0.name,
        u1_0.password_hash,
        u1_0.role,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.username=?
2025-08-28 13:44:47 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    insert 
    into
        users
        (address, created_at, date_of_birth, email, is_active, name, password_hash, role, updated_at, username, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, default)
2025-08-28 13:45:11 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.address,
        u1_0.created_at,
        u1_0.date_of_birth,
        u1_0.email,
        u1_0.is_active,
        u1_0.name,
        u1_0.password_hash,
        u1_0.role,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.username=?
2025-08-28 13:45:11 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.address,
        u1_0.created_at,
        u1_0.date_of_birth,
        u1_0.email,
        u1_0.is_active,
        u1_0.name,
        u1_0.password_hash,
        u1_0.role,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.id=?
2025-08-28 13:45:11 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    select
        b1_0.id,
        b1_0.about,
        b1_0.audio_file_url,
        b1_0.author,
        b1_0.available_copies,
        b1_0.book_cover_url,
        b1_0.category_id,
        b1_0.created_at,
        b1_0.format,
        b1_0.isbn,
        b1_0.name,
        b1_0.pdf_file_url,
        b1_0.publication_year,
        b1_0.short_details,
        b1_0.total_copies,
        b1_0.updated_at 
    from
        books b1_0 
    where
        b1_0.id=?
2025-08-28 13:45:11 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    select
        count(b1_0.id) 
    from
        borrows b1_0 
    where
        b1_0.user_id=? 
        and b1_0.return_date is null
2025-08-28 13:45:11 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    select
        b1_0.id,
        b1_0.book_id,
        b1_0.borrow_date,
        b1_0.created_at,
        b1_0.due_date,
        b1_0.extension_count,
        b1_0.return_date,
        b1_0.status,
        b1_0.updated_at,
        b1_0.user_id 
    from
        borrows b1_0 
    where
        b1_0.user_id=? 
        and b1_0.status=?
2025-08-28 13:45:11 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    select
        b1_0.id,
        b1_0.book_id,
        b1_0.borrow_date,
        b1_0.created_at,
        b1_0.due_date,
        b1_0.extension_count,
        b1_0.return_date,
        b1_0.status,
        b1_0.updated_at,
        b1_0.user_id 
    from
        borrows b1_0 
    where
        b1_0.user_id=? 
        and b1_0.book_id=? 
        and b1_0.return_date is null
2025-08-28 13:45:11 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    insert 
    into
        borrows
        (book_id, borrow_date, created_at, due_date, extension_count, return_date, status, updated_at, user_id, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, ?, default)
2025-08-28 13:45:11 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    select
        r1_0.book_id,
        r1_0.id,
        r1_0.comment,
        r1_0.created_at,
        r1_0.rating,
        r1_0.updated_at,
        r1_0.user_id 
    from
        reviews r1_0 
    where
        r1_0.book_id=?
2025-08-28 13:45:11 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    update
        books 
    set
        about=?,
        audio_file_url=?,
        author=?,
        available_copies=?,
        book_cover_url=?,
        category_id=?,
        format=?,
        isbn=?,
        name=?,
        pdf_file_url=?,
        publication_year=?,
        short_details=?,
        total_copies=?,
        updated_at=? 
    where
        id=?
2025-08-28 13:45:20 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.address,
        u1_0.created_at,
        u1_0.date_of_birth,
        u1_0.email,
        u1_0.is_active,
        u1_0.name,
        u1_0.password_hash,
        u1_0.role,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.username=?
2025-08-28 13:45:20 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.address,
        u1_0.created_at,
        u1_0.date_of_birth,
        u1_0.email,
        u1_0.is_active,
        u1_0.name,
        u1_0.password_hash,
        u1_0.role,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.id=?
2025-08-28 13:45:20 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    select
        b1_0.id,
        b1_0.about,
        b1_0.audio_file_url,
        b1_0.author,
        b1_0.available_copies,
        b1_0.book_cover_url,
        b1_0.category_id,
        b1_0.created_at,
        b1_0.format,
        b1_0.isbn,
        b1_0.name,
        b1_0.pdf_file_url,
        b1_0.publication_year,
        b1_0.short_details,
        b1_0.total_copies,
        b1_0.updated_at 
    from
        books b1_0 
    where
        b1_0.id=?
2025-08-28 13:45:20 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    select
        count(b1_0.id) 
    from
        borrows b1_0 
    where
        b1_0.user_id=? 
        and b1_0.return_date is null
2025-08-28 13:45:20 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    select
        b1_0.id,
        b1_0.book_id,
        b1_0.borrow_date,
        b1_0.created_at,
        b1_0.due_date,
        b1_0.extension_count,
        b1_0.return_date,
        b1_0.status,
        b1_0.updated_at,
        b1_0.user_id 
    from
        borrows b1_0 
    where
        b1_0.user_id=? 
        and b1_0.status=?
2025-08-28 13:45:20 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    select
        b1_0.id,
        b1_0.book_id,
        b1_0.borrow_date,
        b1_0.created_at,
        b1_0.due_date,
        b1_0.extension_count,
        b1_0.return_date,
        b1_0.status,
        b1_0.updated_at,
        b1_0.user_id 
    from
        borrows b1_0 
    where
        b1_0.user_id=? 
        and b1_0.book_id=? 
        and b1_0.return_date is null
2025-08-28 13:45:20 [http-nio-8080-exec-8] ERROR c.l.m.e.GlobalExceptionHandler - Business logic error: User already has this book borrowed
2025-08-28 13:45:34 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.address,
        u1_0.created_at,
        u1_0.date_of_birth,
        u1_0.email,
        u1_0.is_active,
        u1_0.name,
        u1_0.password_hash,
        u1_0.role,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.username=?
2025-08-28 13:45:34 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.address,
        u1_0.created_at,
        u1_0.date_of_birth,
        u1_0.email,
        u1_0.is_active,
        u1_0.name,
        u1_0.password_hash,
        u1_0.role,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.id=?
2025-08-28 13:45:34 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        b1_0.id,
        b1_0.about,
        b1_0.audio_file_url,
        b1_0.author,
        b1_0.available_copies,
        b1_0.book_cover_url,
        b1_0.category_id,
        b1_0.created_at,
        b1_0.format,
        b1_0.isbn,
        b1_0.name,
        b1_0.pdf_file_url,
        b1_0.publication_year,
        b1_0.short_details,
        b1_0.total_copies,
        b1_0.updated_at 
    from
        books b1_0 
    where
        b1_0.id=?
2025-08-28 13:45:34 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        count(b1_0.id) 
    from
        borrows b1_0 
    where
        b1_0.user_id=? 
        and b1_0.return_date is null
2025-08-28 13:45:34 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        b1_0.id,
        b1_0.book_id,
        b1_0.borrow_date,
        b1_0.created_at,
        b1_0.due_date,
        b1_0.extension_count,
        b1_0.return_date,
        b1_0.status,
        b1_0.updated_at,
        b1_0.user_id 
    from
        borrows b1_0 
    where
        b1_0.user_id=? 
        and b1_0.status=?
2025-08-28 13:45:34 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        b1_0.id,
        b1_0.book_id,
        b1_0.borrow_date,
        b1_0.created_at,
        b1_0.due_date,
        b1_0.extension_count,
        b1_0.return_date,
        b1_0.status,
        b1_0.updated_at,
        b1_0.user_id 
    from
        borrows b1_0 
    where
        b1_0.user_id=? 
        and b1_0.book_id=? 
        and b1_0.return_date is null
2025-08-28 13:45:34 [http-nio-8080-exec-9] ERROR c.l.m.e.GlobalExceptionHandler - Business logic error: User already has this book borrowed
2025-08-28 13:45:42 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.address,
        u1_0.created_at,
        u1_0.date_of_birth,
        u1_0.email,
        u1_0.is_active,
        u1_0.name,
        u1_0.password_hash,
        u1_0.role,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.username=?
2025-08-28 13:45:42 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.address,
        u1_0.created_at,
        u1_0.date_of_birth,
        u1_0.email,
        u1_0.is_active,
        u1_0.name,
        u1_0.password_hash,
        u1_0.role,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.id=?
2025-08-28 13:45:42 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL - 
    select
        b1_0.id,
        b1_0.about,
        b1_0.audio_file_url,
        b1_0.author,
        b1_0.available_copies,
        b1_0.book_cover_url,
        b1_0.category_id,
        b1_0.created_at,
        b1_0.format,
        b1_0.isbn,
        b1_0.name,
        b1_0.pdf_file_url,
        b1_0.publication_year,
        b1_0.short_details,
        b1_0.total_copies,
        b1_0.updated_at 
    from
        books b1_0 
    where
        b1_0.id=?
2025-08-28 13:45:42 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL - 
    select
        count(b1_0.id) 
    from
        borrows b1_0 
    where
        b1_0.user_id=? 
        and b1_0.return_date is null
2025-08-28 13:45:42 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL - 
    select
        b1_0.id,
        b1_0.book_id,
        b1_0.borrow_date,
        b1_0.created_at,
        b1_0.due_date,
        b1_0.extension_count,
        b1_0.return_date,
        b1_0.status,
        b1_0.updated_at,
        b1_0.user_id 
    from
        borrows b1_0 
    where
        b1_0.user_id=? 
        and b1_0.status=?
2025-08-28 13:45:42 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL - 
    select
        b1_0.id,
        b1_0.book_id,
        b1_0.borrow_date,
        b1_0.created_at,
        b1_0.due_date,
        b1_0.extension_count,
        b1_0.return_date,
        b1_0.status,
        b1_0.updated_at,
        b1_0.user_id 
    from
        borrows b1_0 
    where
        b1_0.user_id=? 
        and b1_0.book_id=? 
        and b1_0.return_date is null
2025-08-28 13:45:42 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL - 
    insert 
    into
        borrows
        (book_id, borrow_date, created_at, due_date, extension_count, return_date, status, updated_at, user_id, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, ?, default)
2025-08-28 13:45:42 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL - 
    select
        r1_0.book_id,
        r1_0.id,
        r1_0.comment,
        r1_0.created_at,
        r1_0.rating,
        r1_0.updated_at,
        r1_0.user_id 
    from
        reviews r1_0 
    where
        r1_0.book_id=?
2025-08-28 13:45:42 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL - 
    update
        books 
    set
        about=?,
        audio_file_url=?,
        author=?,
        available_copies=?,
        book_cover_url=?,
        category_id=?,
        format=?,
        isbn=?,
        name=?,
        pdf_file_url=?,
        publication_year=?,
        short_details=?,
        total_copies=?,
        updated_at=? 
    where
        id=?
2025-08-28 13:45:55 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.address,
        u1_0.created_at,
        u1_0.date_of_birth,
        u1_0.email,
        u1_0.is_active,
        u1_0.name,
        u1_0.password_hash,
        u1_0.role,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.username=?
2025-08-28 13:45:55 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        b1_0.id,
        b1_0.book_id,
        b1_0.borrow_date,
        b1_0.created_at,
        b1_0.due_date,
        b1_0.extension_count,
        b1_0.return_date,
        b1_0.status,
        b1_0.updated_at,
        b1_0.user_id 
    from
        borrows b1_0 
    where
        b1_0.user_id=? 
        and b1_0.book_id=? 
        and b1_0.return_date is null
2025-08-28 13:45:55 [http-nio-8080-exec-1] ERROR c.l.m.e.GlobalExceptionHandler - Business logic error: Only active borrows can be extended
2025-08-28 13:46:06 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.address,
        u1_0.created_at,
        u1_0.date_of_birth,
        u1_0.email,
        u1_0.is_active,
        u1_0.name,
        u1_0.password_hash,
        u1_0.role,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.username=?
2025-08-28 13:46:06 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    select
        b1_0.id,
        b1_0.book_id,
        b1_0.borrow_date,
        b1_0.created_at,
        b1_0.due_date,
        b1_0.extension_count,
        b1_0.return_date,
        b1_0.status,
        b1_0.updated_at,
        b1_0.user_id 
    from
        borrows b1_0 
    where
        b1_0.user_id=? 
        and b1_0.book_id=? 
        and b1_0.return_date is null
2025-08-28 13:46:06 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    select
        b1_0.id,
        b1_0.about,
        b1_0.audio_file_url,
        b1_0.author,
        b1_0.available_copies,
        b1_0.book_cover_url,
        b1_0.category_id,
        b1_0.created_at,
        b1_0.format,
        b1_0.isbn,
        b1_0.name,
        b1_0.pdf_file_url,
        b1_0.publication_year,
        b1_0.short_details,
        b1_0.total_copies,
        b1_0.updated_at 
    from
        books b1_0 
    where
        b1_0.id=?
2025-08-28 13:46:06 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.address,
        u1_0.created_at,
        u1_0.date_of_birth,
        u1_0.email,
        u1_0.is_active,
        u1_0.name,
        u1_0.password_hash,
        u1_0.role,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.id=?
2025-08-28 13:46:06 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    select
        r1_0.book_id,
        r1_0.id,
        r1_0.comment,
        r1_0.created_at,
        r1_0.rating,
        r1_0.updated_at,
        r1_0.user_id 
    from
        reviews r1_0 
    where
        r1_0.book_id=?
2025-08-28 13:46:06 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    update
        borrows 
    set
        book_id=?,
        borrow_date=?,
        due_date=?,
        extension_count=?,
        return_date=?,
        status=?,
        updated_at=?,
        user_id=? 
    where
        id=?
2025-08-28 13:46:13 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.address,
        u1_0.created_at,
        u1_0.date_of_birth,
        u1_0.email,
        u1_0.is_active,
        u1_0.name,
        u1_0.password_hash,
        u1_0.role,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.username=?
2025-08-28 13:46:13 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    select
        b1_0.id,
        b1_0.book_id,
        b1_0.borrow_date,
        b1_0.created_at,
        b1_0.due_date,
        b1_0.extension_count,
        b1_0.return_date,
        b1_0.status,
        b1_0.updated_at,
        b1_0.user_id 
    from
        borrows b1_0 
    where
        b1_0.user_id=? 
        and b1_0.book_id=? 
        and b1_0.return_date is null
2025-08-28 13:46:13 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.address,
        u1_0.created_at,
        u1_0.date_of_birth,
        u1_0.email,
        u1_0.is_active,
        u1_0.name,
        u1_0.password_hash,
        u1_0.role,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.id=?
2025-08-28 13:46:13 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    select
        b1_0.id,
        b1_0.about,
        b1_0.audio_file_url,
        b1_0.author,
        b1_0.available_copies,
        b1_0.book_cover_url,
        b1_0.category_id,
        b1_0.created_at,
        b1_0.format,
        b1_0.isbn,
        b1_0.name,
        b1_0.pdf_file_url,
        b1_0.publication_year,
        b1_0.short_details,
        b1_0.total_copies,
        b1_0.updated_at 
    from
        books b1_0 
    where
        b1_0.id=?
2025-08-28 13:46:13 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    select
        r1_0.book_id,
        r1_0.id,
        r1_0.comment,
        r1_0.created_at,
        r1_0.rating,
        r1_0.updated_at,
        r1_0.user_id 
    from
        reviews r1_0 
    where
        r1_0.book_id=?
2025-08-28 13:46:13 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    update
        borrows 
    set
        book_id=?,
        borrow_date=?,
        due_date=?,
        extension_count=?,
        return_date=?,
        status=?,
        updated_at=?,
        user_id=? 
    where
        id=?
2025-08-28 13:46:24 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.address,
        u1_0.created_at,
        u1_0.date_of_birth,
        u1_0.email,
        u1_0.is_active,
        u1_0.name,
        u1_0.password_hash,
        u1_0.role,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.username=?
2025-08-28 13:46:24 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    select
        b1_0.id,
        b1_0.book_id,
        b1_0.borrow_date,
        b1_0.created_at,
        b1_0.due_date,
        b1_0.extension_count,
        b1_0.return_date,
        b1_0.status,
        b1_0.updated_at,
        b1_0.user_id 
    from
        borrows b1_0 
    where
        b1_0.user_id=? 
        and b1_0.book_id=? 
        and b1_0.return_date is null
2025-08-28 13:46:24 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.address,
        u1_0.created_at,
        u1_0.date_of_birth,
        u1_0.email,
        u1_0.is_active,
        u1_0.name,
        u1_0.password_hash,
        u1_0.role,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.id=?
2025-08-28 13:46:24 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    select
        b1_0.id,
        b1_0.about,
        b1_0.audio_file_url,
        b1_0.author,
        b1_0.available_copies,
        b1_0.book_cover_url,
        b1_0.category_id,
        b1_0.created_at,
        b1_0.format,
        b1_0.isbn,
        b1_0.name,
        b1_0.pdf_file_url,
        b1_0.publication_year,
        b1_0.short_details,
        b1_0.total_copies,
        b1_0.updated_at 
    from
        books b1_0 
    where
        b1_0.id=?
2025-08-28 13:46:24 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    select
        r1_0.book_id,
        r1_0.id,
        r1_0.comment,
        r1_0.created_at,
        r1_0.rating,
        r1_0.updated_at,
        r1_0.user_id 
    from
        reviews r1_0 
    where
        r1_0.book_id=?
2025-08-28 13:46:24 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    update
        borrows 
    set
        book_id=?,
        borrow_date=?,
        due_date=?,
        extension_count=?,
        return_date=?,
        status=?,
        updated_at=?,
        user_id=? 
    where
        id=?
2025-08-28 13:46:29 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.address,
        u1_0.created_at,
        u1_0.date_of_birth,
        u1_0.email,
        u1_0.is_active,
        u1_0.name,
        u1_0.password_hash,
        u1_0.role,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.username=?
2025-08-28 13:46:29 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    select
        b1_0.id,
        b1_0.book_id,
        b1_0.borrow_date,
        b1_0.created_at,
        b1_0.due_date,
        b1_0.extension_count,
        b1_0.return_date,
        b1_0.status,
        b1_0.updated_at,
        b1_0.user_id 
    from
        borrows b1_0 
    where
        b1_0.user_id=? 
        and b1_0.book_id=? 
        and b1_0.return_date is null
2025-08-28 13:46:29 [http-nio-8080-exec-6] ERROR c.l.m.e.GlobalExceptionHandler - Business logic error: Maximum number of extensions (2) reached
2025-08-28 13:46:40 [SpringApplicationShutdownHook] INFO  o.s.b.w.e.tomcat.GracefulShutdown - Commencing graceful shutdown. Waiting for active requests to complete
2025-08-28 13:46:40 [tomcat-shutdown] INFO  o.s.b.w.e.tomcat.GracefulShutdown - Graceful shutdown complete
2025-08-28 13:46:40 [SpringApplicationShutdownHook] INFO  o.s.o.j.LocalContainerEntityManagerFactoryBean - Closing JPA EntityManagerFactory for persistence unit 'default'
2025-08-28 13:46:40 [SpringApplicationShutdownHook] DEBUG org.hibernate.SQL - 
    drop table if exists admin_settings cascade 
2025-08-28 13:46:40 [SpringApplicationShutdownHook] DEBUG org.hibernate.SQL - 
    drop table if exists bookings cascade 
2025-08-28 13:46:40 [SpringApplicationShutdownHook] DEBUG org.hibernate.SQL - 
    drop table if exists books cascade 
2025-08-28 13:46:40 [SpringApplicationShutdownHook] DEBUG org.hibernate.SQL - 
    drop table if exists borrows cascade 
2025-08-28 13:46:40 [SpringApplicationShutdownHook] DEBUG org.hibernate.SQL - 
    drop table if exists categories cascade 
2025-08-28 13:46:40 [SpringApplicationShutdownHook] DEBUG org.hibernate.SQL - 
    drop table if exists donation_requests cascade 
2025-08-28 13:46:40 [SpringApplicationShutdownHook] DEBUG org.hibernate.SQL - 
    drop table if exists notifications cascade 
2025-08-28 13:46:40 [SpringApplicationShutdownHook] DEBUG org.hibernate.SQL - 
    drop table if exists reviews cascade 
2025-08-28 13:46:40 [SpringApplicationShutdownHook] DEBUG org.hibernate.SQL - 
    drop table if exists users cascade 
2025-08-28 13:46:40 [SpringApplicationShutdownHook] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Shutdown initiated...
2025-08-28 13:46:40 [SpringApplicationShutdownHook] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Shutdown completed.
2025-08-28 15:58:24 [main] INFO  c.l.m.LibraryManagementApplication - Starting LibraryManagementApplication using Java 24.0.2 with PID 1328 (C:\Users\c6-std14\Desktop\LMS 25\lms-backened-23\target\classes started by c6-std14 in C:\Users\c6-std14\Desktop\LMS 25\lms-backened-23)
2025-08-28 15:58:24 [main] DEBUG c.l.m.LibraryManagementApplication - Running with Spring Boot v3.5.4, Spring v6.2.9
2025-08-28 15:58:24 [main] INFO  c.l.m.LibraryManagementApplication - No active profile set, falling back to 1 default profile: "default"
2025-08-28 15:58:24 [main] INFO  c.l.m.LibraryManagementApplication - Starting LibraryManagementApplication using Java 24.0.2 with PID 5816 (C:\Users\c6-std14\Desktop\LMS 25\lms-backened-23\target\classes started by c6-std14 in C:\Users\c6-std14\Desktop\LMS 25\lms-backened-23)
2025-08-28 15:58:24 [main] DEBUG c.l.m.LibraryManagementApplication - Running with Spring Boot v3.5.4, Spring v6.2.9
2025-08-28 15:58:24 [main] INFO  c.l.m.LibraryManagementApplication - No active profile set, falling back to 1 default profile: "default"
2025-08-28 15:58:42 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Bootstrapping Spring Data JPA repositories in DEFAULT mode.
2025-08-28 15:58:42 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Bootstrapping Spring Data JPA repositories in DEFAULT mode.
2025-08-28 15:58:43 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 566 ms. Found 9 JPA repository interfaces.
2025-08-28 15:58:43 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 569 ms. Found 9 JPA repository interfaces.
2025-08-28 15:58:51 [main] INFO  o.s.b.w.e.tomcat.TomcatWebServer - Tomcat initialized with port 8080 (http)
2025-08-28 15:58:51 [main] INFO  o.s.b.w.e.tomcat.TomcatWebServer - Tomcat initialized with port 8080 (http)
2025-08-28 15:58:52 [main] INFO  o.a.catalina.core.StandardService - Starting service [Tomcat]
2025-08-28 15:58:52 [main] INFO  o.a.catalina.core.StandardService - Starting service [Tomcat]
2025-08-28 15:58:52 [main] INFO  o.a.catalina.core.StandardEngine - Starting Servlet engine: [Apache Tomcat/10.1.43]
2025-08-28 15:58:52 [main] INFO  o.a.catalina.core.StandardEngine - Starting Servlet engine: [Apache Tomcat/10.1.43]
2025-08-28 15:58:52 [main] INFO  o.a.c.c.C.[Tomcat].[localhost].[/] - Initializing Spring embedded WebApplicationContext
2025-08-28 15:58:52 [main] INFO  o.s.b.w.s.c.ServletWebServerApplicationContext - Root WebApplicationContext: initialization completed in 27202 ms
2025-08-28 15:58:52 [main] INFO  o.a.c.c.C.[Tomcat].[localhost].[/] - Initializing Spring embedded WebApplicationContext
2025-08-28 15:58:52 [main] INFO  o.s.b.w.s.c.ServletWebServerApplicationContext - Root WebApplicationContext: initialization completed in 27280 ms
2025-08-28 15:58:58 [main] INFO  o.h.jpa.internal.util.LogHelper - HHH000204: Processing PersistenceUnitInfo [name: default]
2025-08-28 15:58:59 [main] INFO  o.h.jpa.internal.util.LogHelper - HHH000204: Processing PersistenceUnitInfo [name: default]
2025-08-28 15:59:00 [main] INFO  org.hibernate.Version - HHH000412: Hibernate ORM core version 6.6.22.Final
2025-08-28 15:59:00 [main] INFO  org.hibernate.Version - HHH000412: Hibernate ORM core version 6.6.22.Final
2025-08-28 15:59:04 [main] INFO  o.h.c.i.RegionFactoryInitiator - HHH000026: Second-level cache disabled
2025-08-28 15:59:04 [main] INFO  o.h.c.i.RegionFactoryInitiator - HHH000026: Second-level cache disabled
2025-08-28 15:59:08 [main] INFO  o.s.o.j.p.SpringPersistenceUnitInfo - No LoadTimeWeaver setup: ignoring JPA class transformer
2025-08-28 15:59:08 [main] INFO  o.s.o.j.p.SpringPersistenceUnitInfo - No LoadTimeWeaver setup: ignoring JPA class transformer
2025-08-28 15:59:08 [main] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Starting...
2025-08-28 15:59:08 [main] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Starting...
2025-08-28 15:59:10 [main] INFO  com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Added connection conn0: url=jdbc:h2:mem:testdb user=SA
2025-08-28 15:59:10 [main] INFO  com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Added connection conn0: url=jdbc:h2:mem:testdb user=SA
2025-08-28 15:59:10 [main] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Start completed.
2025-08-28 15:59:10 [main] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Start completed.
2025-08-28 15:59:11 [main] WARN  org.hibernate.orm.deprecation - HHH90000025: H2Dialect does not need to be specified explicitly using 'hibernate.dialect' (remove the property setting and it will be selected by default)
2025-08-28 15:59:11 [main] WARN  org.hibernate.orm.deprecation - HHH90000025: H2Dialect does not need to be specified explicitly using 'hibernate.dialect' (remove the property setting and it will be selected by default)
2025-08-28 15:59:11 [main] INFO  o.hibernate.orm.connections.pooling - HHH10001005: Database info:
	Database JDBC URL [Connecting through datasource 'HikariDataSource (HikariPool-1)']
	Database driver: undefined/unknown
	Database version: 2.3.232
	Autocommit mode: undefined/unknown
	Isolation level: undefined/unknown
	Minimum pool size: undefined/unknown
	Maximum pool size: undefined/unknown
2025-08-28 15:59:11 [main] INFO  o.hibernate.orm.connections.pooling - HHH10001005: Database info:
	Database JDBC URL [Connecting through datasource 'HikariDataSource (HikariPool-1)']
	Database driver: undefined/unknown
	Database version: 2.3.232
	Autocommit mode: undefined/unknown
	Isolation level: undefined/unknown
	Minimum pool size: undefined/unknown
	Maximum pool size: undefined/unknown
2025-08-28 15:59:24 [main] INFO  o.h.e.t.j.p.i.JtaPlatformInitiator - HHH000489: No JTA platform available (set 'hibernate.transaction.jta.platform' to enable JTA platform integration)
2025-08-28 15:59:24 [main] INFO  o.h.e.t.j.p.i.JtaPlatformInitiator - HHH000489: No JTA platform available (set 'hibernate.transaction.jta.platform' to enable JTA platform integration)
2025-08-28 15:59:24 [main] DEBUG org.hibernate.SQL - 
    drop table if exists admin_settings cascade 
2025-08-28 15:59:24 [main] DEBUG org.hibernate.SQL - 
    drop table if exists admin_settings cascade 
2025-08-28 15:59:24 [main] DEBUG org.hibernate.SQL - 
    drop table if exists bookings cascade 
2025-08-28 15:59:24 [main] DEBUG org.hibernate.SQL - 
    drop table if exists books cascade 
2025-08-28 15:59:24 [main] DEBUG org.hibernate.SQL - 
    drop table if exists borrows cascade 
2025-08-28 15:59:24 [main] DEBUG org.hibernate.SQL - 
    drop table if exists categories cascade 
2025-08-28 15:59:24 [main] DEBUG org.hibernate.SQL - 
    drop table if exists donation_requests cascade 
2025-08-28 15:59:24 [main] DEBUG org.hibernate.SQL - 
    drop table if exists notifications cascade 
2025-08-28 15:59:24 [main] DEBUG org.hibernate.SQL - 
    drop table if exists reviews cascade 
2025-08-28 15:59:24 [main] DEBUG org.hibernate.SQL - 
    drop table if exists users cascade 
2025-08-28 15:59:24 [main] DEBUG org.hibernate.SQL - 
    drop table if exists bookings cascade 
2025-08-28 15:59:24 [main] DEBUG org.hibernate.SQL - 
    drop table if exists books cascade 
2025-08-28 15:59:24 [main] DEBUG org.hibernate.SQL - 
    drop table if exists borrows cascade 
2025-08-28 15:59:24 [main] DEBUG org.hibernate.SQL - 
    drop table if exists categories cascade 
2025-08-28 15:59:24 [main] DEBUG org.hibernate.SQL - 
    drop table if exists donation_requests cascade 
2025-08-28 15:59:24 [main] DEBUG org.hibernate.SQL - 
    drop table if exists notifications cascade 
2025-08-28 15:59:24 [main] DEBUG org.hibernate.SQL - 
    drop table if exists reviews cascade 
2025-08-28 15:59:24 [main] DEBUG org.hibernate.SQL - 
    drop table if exists users cascade 
2025-08-28 15:59:24 [main] DEBUG org.hibernate.SQL - 
    create table admin_settings (
        booking_days_limit integer,
        borrow_book_limit integer,
        borrow_day_limit integer,
        borrow_extend_limit integer,
        created_at timestamp(6),
        id bigint generated by default as identity,
        updated_at timestamp(6),
        primary key (id)
    )
2025-08-28 15:59:24 [main] DEBUG org.hibernate.SQL - 
    create table admin_settings (
        booking_days_limit integer,
        borrow_book_limit integer,
        borrow_day_limit integer,
        borrow_extend_limit integer,
        created_at timestamp(6),
        id bigint generated by default as identity,
        updated_at timestamp(6),
        primary key (id)
    )
2025-08-28 15:59:24 [main] DEBUG org.hibernate.SQL - 
    create table bookings (
        booking_date date not null,
        expected_available_date date not null,
        book_id bigint not null,
        created_at timestamp(6),
        id bigint generated by default as identity,
        updated_at timestamp(6),
        user_id bigint not null,
        status enum ('CANCELLED','EXPIRED','FULFILLED','PENDING') not null,
        primary key (id)
    )
2025-08-28 15:59:24 [main] DEBUG org.hibernate.SQL - 
    create table books (
        available_copies integer not null,
        publication_year integer,
        total_copies integer not null,
        category_id bigint not null,
        created_at timestamp(6),
        id bigint generated by default as identity,
        updated_at timestamp(6),
        about TEXT,
        audio_file_url varchar(255),
        author varchar(255) not null,
        book_cover_url varchar(255),
        isbn varchar(255) unique,
        name varchar(255) not null,
        pdf_file_url varchar(255),
        short_details varchar(255),
        format enum ('AUDIO_BOOK','E_BOOK','HARD_COPY') not null,
        primary key (id)
    )
2025-08-28 15:59:24 [main] DEBUG org.hibernate.SQL - 
    create table borrows (
        borrow_date date not null,
        due_date date not null,
        extension_count integer,
        return_date date,
        book_id bigint not null,
        created_at timestamp(6),
        id bigint generated by default as identity,
        updated_at timestamp(6),
        user_id bigint not null,
        status enum ('ACCEPTED','ACTIVE','OVERDUE','REJECTED','REQUESTED','RETURNED') not null,
        primary key (id)
    )
2025-08-28 15:59:24 [main] DEBUG org.hibernate.SQL - 
    create table categories (
        created_at timestamp(6),
        id bigint generated by default as identity,
        updated_at timestamp(6),
        description varchar(255),
        name varchar(255) not null unique,
        primary key (id)
    )
2025-08-28 15:59:24 [main] DEBUG org.hibernate.SQL - 
    create table bookings (
        booking_date date not null,
        expected_available_date date not null,
        book_id bigint not null,
        created_at timestamp(6),
        id bigint generated by default as identity,
        updated_at timestamp(6),
        user_id bigint not null,
        status enum ('CANCELLED','EXPIRED','FULFILLED','PENDING') not null,
        primary key (id)
    )
2025-08-28 15:59:24 [main] DEBUG org.hibernate.SQL - 
    create table books (
        available_copies integer not null,
        publication_year integer,
        total_copies integer not null,
        category_id bigint not null,
        created_at timestamp(6),
        id bigint generated by default as identity,
        updated_at timestamp(6),
        about TEXT,
        audio_file_url varchar(255),
        author varchar(255) not null,
        book_cover_url varchar(255),
        isbn varchar(255) unique,
        name varchar(255) not null,
        pdf_file_url varchar(255),
        short_details varchar(255),
        format enum ('AUDIO_BOOK','E_BOOK','HARD_COPY') not null,
        primary key (id)
    )
2025-08-28 15:59:24 [main] DEBUG org.hibernate.SQL - 
    create table borrows (
        borrow_date date not null,
        due_date date not null,
        extension_count integer,
        return_date date,
        book_id bigint not null,
        created_at timestamp(6),
        id bigint generated by default as identity,
        updated_at timestamp(6),
        user_id bigint not null,
        status enum ('ACCEPTED','ACTIVE','OVERDUE','REJECTED','REQUESTED','RETURNED') not null,
        primary key (id)
    )
2025-08-28 15:59:24 [main] DEBUG org.hibernate.SQL - 
    create table categories (
        created_at timestamp(6),
        id bigint generated by default as identity,
        updated_at timestamp(6),
        description varchar(255),
        name varchar(255) not null unique,
        primary key (id)
    )
2025-08-28 15:59:24 [main] DEBUG org.hibernate.SQL - 
    create table donation_requests (
        created_at timestamp(6),
        id bigint generated by default as identity,
        updated_at timestamp(6),
        user_id bigint not null,
        admin_notes TEXT,
        author varchar(255) not null,
        book_title varchar(255) not null,
        description TEXT,
        isbn varchar(255),
        status enum ('APPROVED','PENDING','RECEIVED','REJECTED') not null,
        primary key (id)
    )
2025-08-28 15:59:24 [main] DEBUG org.hibernate.SQL - 
    create table notifications (
        read boolean not null,
        id bigint generated by default as identity,
        timestamp timestamp(6),
        message varchar(255),
        recipient varchar(255),
        primary key (id)
    )
2025-08-28 15:59:24 [main] DEBUG org.hibernate.SQL - 
    create table reviews (
        rating integer not null,
        book_id bigint not null,
        created_at timestamp(6),
        id bigint generated by default as identity,
        updated_at timestamp(6),
        user_id bigint not null,
        comment TEXT,
        primary key (id)
    )
2025-08-28 15:59:24 [main] DEBUG org.hibernate.SQL - 
    create table donation_requests (
        created_at timestamp(6),
        id bigint generated by default as identity,
        updated_at timestamp(6),
        user_id bigint not null,
        admin_notes TEXT,
        author varchar(255) not null,
        book_title varchar(255) not null,
        description TEXT,
        isbn varchar(255),
        status enum ('APPROVED','PENDING','RECEIVED','REJECTED') not null,
        primary key (id)
    )
2025-08-28 15:59:24 [main] DEBUG org.hibernate.SQL - 
    create table notifications (
        read boolean not null,
        id bigint generated by default as identity,
        timestamp timestamp(6),
        message varchar(255),
        recipient varchar(255),
        primary key (id)
    )
2025-08-28 15:59:24 [main] DEBUG org.hibernate.SQL - 
    create table reviews (
        rating integer not null,
        book_id bigint not null,
        created_at timestamp(6),
        id bigint generated by default as identity,
        updated_at timestamp(6),
        user_id bigint not null,
        comment TEXT,
        primary key (id)
    )
2025-08-28 15:59:24 [main] DEBUG org.hibernate.SQL - 
    create table users (
        date_of_birth date,
        is_active boolean not null,
        created_at timestamp(6),
        id bigint generated by default as identity,
        updated_at timestamp(6),
        address varchar(255),
        email varchar(255) not null unique,
        name varchar(255) not null,
        password_hash varchar(255) not null,
        role varchar(255) not null,
        username varchar(255) not null unique,
        primary key (id)
    )
2025-08-28 15:59:24 [main] DEBUG org.hibernate.SQL - 
    create table users (
        date_of_birth date,
        is_active boolean not null,
        created_at timestamp(6),
        id bigint generated by default as identity,
        updated_at timestamp(6),
        address varchar(255),
        email varchar(255) not null unique,
        name varchar(255) not null,
        password_hash varchar(255) not null,
        role varchar(255) not null,
        username varchar(255) not null unique,
        primary key (id)
    )
2025-08-28 15:59:24 [main] DEBUG org.hibernate.SQL - 
    alter table if exists bookings 
       add constraint FKm827phjjfy5m6q8vsjmi1gybv 
       foreign key (book_id) 
       references books
2025-08-28 15:59:24 [main] DEBUG org.hibernate.SQL - 
    alter table if exists bookings 
       add constraint FKm827phjjfy5m6q8vsjmi1gybv 
       foreign key (book_id) 
       references books
2025-08-28 15:59:24 [main] DEBUG org.hibernate.SQL - 
    alter table if exists bookings 
       add constraint FKeyog2oic85xg7hsu2je2lx3s6 
       foreign key (user_id) 
       references users
2025-08-28 15:59:24 [main] DEBUG org.hibernate.SQL - 
    alter table if exists books 
       add constraint FKleqa3hhc0uhfvurq6mil47xk0 
       foreign key (category_id) 
       references categories
2025-08-28 15:59:25 [main] DEBUG org.hibernate.SQL - 
    alter table if exists borrows 
       add constraint FK8789wjikihu9ocbhamiw789y9 
       foreign key (book_id) 
       references books
2025-08-28 15:59:25 [main] DEBUG org.hibernate.SQL - 
    alter table if exists borrows 
       add constraint FKd64ttskt7j96v1nqtpry3pp2a 
       foreign key (user_id) 
       references users
2025-08-28 15:59:25 [main] DEBUG org.hibernate.SQL - 
    alter table if exists donation_requests 
       add constraint FK42i2vj0hduc4jwntg1ute8v4g 
       foreign key (user_id) 
       references users
2025-08-28 15:59:25 [main] DEBUG org.hibernate.SQL - 
    alter table if exists reviews 
       add constraint FK6a9k6xvev80se5rreqvuqr7f9 
       foreign key (book_id) 
       references books
2025-08-28 15:59:25 [main] DEBUG org.hibernate.SQL - 
    alter table if exists reviews 
       add constraint FKcgy7qjc1r99dp117y9en6lxye 
       foreign key (user_id) 
       references users
2025-08-28 15:59:25 [main] INFO  o.s.o.j.LocalContainerEntityManagerFactoryBean - Initialized JPA EntityManagerFactory for persistence unit 'default'
2025-08-28 15:59:25 [main] DEBUG org.hibernate.SQL - 
    alter table if exists bookings 
       add constraint FKeyog2oic85xg7hsu2je2lx3s6 
       foreign key (user_id) 
       references users
2025-08-28 15:59:25 [main] DEBUG org.hibernate.SQL - 
    alter table if exists books 
       add constraint FKleqa3hhc0uhfvurq6mil47xk0 
       foreign key (category_id) 
       references categories
2025-08-28 15:59:25 [main] DEBUG org.hibernate.SQL - 
    alter table if exists borrows 
       add constraint FK8789wjikihu9ocbhamiw789y9 
       foreign key (book_id) 
       references books
2025-08-28 15:59:25 [main] DEBUG org.hibernate.SQL - 
    alter table if exists borrows 
       add constraint FKd64ttskt7j96v1nqtpry3pp2a 
       foreign key (user_id) 
       references users
2025-08-28 15:59:25 [main] DEBUG org.hibernate.SQL - 
    alter table if exists donation_requests 
       add constraint FK42i2vj0hduc4jwntg1ute8v4g 
       foreign key (user_id) 
       references users
2025-08-28 15:59:25 [main] DEBUG org.hibernate.SQL - 
    alter table if exists reviews 
       add constraint FK6a9k6xvev80se5rreqvuqr7f9 
       foreign key (book_id) 
       references books
2025-08-28 15:59:25 [main] DEBUG org.hibernate.SQL - 
    alter table if exists reviews 
       add constraint FKcgy7qjc1r99dp117y9en6lxye 
       foreign key (user_id) 
       references users
2025-08-28 15:59:25 [main] INFO  o.s.o.j.LocalContainerEntityManagerFactoryBean - Initialized JPA EntityManagerFactory for persistence unit 'default'
2025-08-28 15:59:31 [main] INFO  o.s.d.j.r.query.QueryEnhancerFactory - Hibernate is in classpath; If applicable, HQL parser will be used.
2025-08-28 15:59:31 [main] INFO  o.s.d.j.r.query.QueryEnhancerFactory - Hibernate is in classpath; If applicable, HQL parser will be used.
2025-08-28 15:59:36 [main] DEBUG c.l.m.s.JwtAuthenticationFilter - Filter 'jwtAuthenticationFilter' configured for use
2025-08-28 15:59:36 [main] DEBUG c.l.m.s.JwtAuthenticationFilter - Filter 'jwtAuthenticationFilter' configured for use
2025-08-28 15:59:37 [main] INFO  o.s.s.c.a.a.c.InitializeAuthenticationProviderBeanManagerConfigurer$InitializeAuthenticationProviderManagerConfigurer - Global AuthenticationManager configured with AuthenticationProvider bean with name authenticationProvider
2025-08-28 15:59:37 [main] WARN  o.s.s.c.a.a.c.InitializeUserDetailsBeanManagerConfigurer$InitializeUserDetailsManagerConfigurer - Global AuthenticationManager configured with an AuthenticationProvider bean. UserDetailsService beans will not be used by Spring Security for automatically configuring username/password login. Consider removing the AuthenticationProvider bean. Alternatively, consider using the UserDetailsService in a manually instantiated DaoAuthenticationProvider. If the current configuration is intentional, to turn off this warning, increase the logging level of 'org.springframework.security.config.annotation.authentication.configuration.InitializeUserDetailsBeanManagerConfigurer' to ERROR
2025-08-28 15:59:37 [main] INFO  o.s.s.c.a.a.c.InitializeAuthenticationProviderBeanManagerConfigurer$InitializeAuthenticationProviderManagerConfigurer - Global AuthenticationManager configured with AuthenticationProvider bean with name authenticationProvider
2025-08-28 15:59:37 [main] WARN  o.s.s.c.a.a.c.InitializeUserDetailsBeanManagerConfigurer$InitializeUserDetailsManagerConfigurer - Global AuthenticationManager configured with an AuthenticationProvider bean. UserDetailsService beans will not be used by Spring Security for automatically configuring username/password login. Consider removing the AuthenticationProvider bean. Alternatively, consider using the UserDetailsService in a manually instantiated DaoAuthenticationProvider. If the current configuration is intentional, to turn off this warning, increase the logging level of 'org.springframework.security.config.annotation.authentication.configuration.InitializeUserDetailsBeanManagerConfigurer' to ERROR
2025-08-28 15:59:45 [main] INFO  o.s.b.a.e.web.EndpointLinksResolver - Exposing 2 endpoints beneath base path '/actuator'
2025-08-28 15:59:45 [main] INFO  o.s.b.a.e.web.EndpointLinksResolver - Exposing 2 endpoints beneath base path '/actuator'
2025-08-28 15:59:46 [main] WARN  o.s.b.a.o.j.JpaBaseConfiguration$JpaWebConfiguration - spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
2025-08-28 15:59:46 [main] WARN  o.s.b.a.o.j.JpaBaseConfiguration$JpaWebConfiguration - spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
2025-08-28 15:59:50 [main] INFO  o.s.b.a.h.H2ConsoleAutoConfiguration - H2 console available at '/h2-console'. Database available at 'jdbc:h2:mem:testdb'
2025-08-28 15:59:50 [main] INFO  o.s.b.a.h.H2ConsoleAutoConfiguration - H2 console available at '/h2-console'. Database available at 'jdbc:h2:mem:testdb'
2025-08-28 15:59:51 [main] WARN  o.s.b.w.s.c.AnnotationConfigServletWebServerApplicationContext - Exception encountered during context initialization - cancelling refresh attempt: org.springframework.context.ApplicationContextException: Failed to start bean 'webServerStartStop'
2025-08-28 15:59:51 [main] INFO  o.s.o.j.LocalContainerEntityManagerFactoryBean - Closing JPA EntityManagerFactory for persistence unit 'default'
2025-08-28 15:59:51 [main] DEBUG org.hibernate.SQL - 
    drop table if exists admin_settings cascade 
2025-08-28 15:59:51 [main] DEBUG org.hibernate.SQL - 
    drop table if exists bookings cascade 
2025-08-28 15:59:51 [main] DEBUG org.hibernate.SQL - 
    drop table if exists books cascade 
2025-08-28 15:59:51 [main] DEBUG org.hibernate.SQL - 
    drop table if exists borrows cascade 
2025-08-28 15:59:51 [main] DEBUG org.hibernate.SQL - 
    drop table if exists categories cascade 
2025-08-28 15:59:51 [main] DEBUG org.hibernate.SQL - 
    drop table if exists donation_requests cascade 
2025-08-28 15:59:51 [main] DEBUG org.hibernate.SQL - 
    drop table if exists notifications cascade 
2025-08-28 15:59:51 [main] DEBUG org.hibernate.SQL - 
    drop table if exists reviews cascade 
2025-08-28 15:59:51 [main] DEBUG org.hibernate.SQL - 
    drop table if exists users cascade 
2025-08-28 15:59:51 [main] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Shutdown initiated...
2025-08-28 15:59:51 [main] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Shutdown completed.
2025-08-28 15:59:51 [main] INFO  o.s.b.w.e.tomcat.TomcatWebServer - Tomcat started on port 8080 (http) with context path '/'
2025-08-28 15:59:51 [main] INFO  c.l.m.LibraryManagementApplication - Started LibraryManagementApplication in 91.885 seconds (process running for 93.521)
2025-08-28 15:59:51 [main] INFO  o.s.b.a.l.ConditionEvaluationReportLogger - 

Error starting ApplicationContext. To display the condition evaluation report re-run your application with 'debug' enabled.
2025-08-28 15:59:51 [main] ERROR o.s.b.d.LoggingFailureAnalysisReporter - 

***************************
APPLICATION FAILED TO START
***************************

Description:

Web server failed to start. Port 8080 was already in use.

Action:

Identify and stop the process that's listening on port 8080 or configure this application to listen on another port.

2025-08-28 16:00:02 [http-nio-8080-exec-1] INFO  o.a.c.c.C.[Tomcat].[localhost].[/] - Initializing Spring DispatcherServlet 'dispatcherServlet'
2025-08-28 16:00:02 [http-nio-8080-exec-1] INFO  o.s.web.servlet.DispatcherServlet - Initializing Servlet 'dispatcherServlet'
2025-08-28 16:00:02 [http-nio-8080-exec-1] INFO  o.s.web.servlet.DispatcherServlet - Completed initialization in 3 ms
2025-08-28 16:00:14 [http-nio-8080-exec-4] INFO  o.s.api.AbstractOpenApiResource - Init duration for springdoc-openapi is: 10884 ms
2025-08-28 16:00:57 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.address,
        u1_0.created_at,
        u1_0.date_of_birth,
        u1_0.email,
        u1_0.is_active,
        u1_0.name,
        u1_0.password_hash,
        u1_0.role,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.email=?
2025-08-28 16:00:58 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.address,
        u1_0.created_at,
        u1_0.date_of_birth,
        u1_0.email,
        u1_0.is_active,
        u1_0.name,
        u1_0.password_hash,
        u1_0.role,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.username=?
2025-08-28 16:00:58 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    insert 
    into
        users
        (address, created_at, date_of_birth, email, is_active, name, password_hash, role, updated_at, username, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, default)
2025-08-28 16:01:34 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.address,
        u1_0.created_at,
        u1_0.date_of_birth,
        u1_0.email,
        u1_0.is_active,
        u1_0.name,
        u1_0.password_hash,
        u1_0.role,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.username=?
2025-08-28 16:01:34 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.address,
        u1_0.created_at,
        u1_0.date_of_birth,
        u1_0.email,
        u1_0.is_active,
        u1_0.name,
        u1_0.password_hash,
        u1_0.role,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.username=?
2025-08-28 16:01:34 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.address,
        u1_0.created_at,
        u1_0.date_of_birth,
        u1_0.email,
        u1_0.is_active,
        u1_0.name,
        u1_0.password_hash,
        u1_0.role,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.username=?
2025-08-28 16:01:35 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    select
        b1_0.id,
        b1_0.about,
        b1_0.audio_file_url,
        b1_0.author,
        b1_0.available_copies,
        b1_0.book_cover_url,
        b1_0.category_id,
        b1_0.created_at,
        b1_0.format,
        b1_0.isbn,
        b1_0.name,
        b1_0.pdf_file_url,
        b1_0.publication_year,
        b1_0.short_details,
        b1_0.total_copies,
        b1_0.updated_at 
    from
        books b1_0 
    order by
        b1_0.id desc 
    fetch
        first ? rows only
2025-08-28 16:01:35 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    select
        b1_0.id,
        b1_0.about,
        b1_0.audio_file_url,
        b1_0.author,
        b1_0.available_copies,
        b1_0.book_cover_url,
        b1_0.category_id,
        b1_0.created_at,
        b1_0.format,
        b1_0.isbn,
        b1_0.name,
        b1_0.pdf_file_url,
        b1_0.publication_year,
        b1_0.short_details,
        b1_0.total_copies,
        b1_0.updated_at 
    from
        books b1_0 
    order by
        b1_0.created_at desc 
    fetch
        first ? rows only
2025-08-28 16:01:35 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    select
        b1_0.id,
        b1_0.about,
        b1_0.audio_file_url,
        b1_0.author,
        b1_0.available_copies,
        b1_0.book_cover_url,
        b1_0.category_id,
        b1_0.created_at,
        b1_0.format,
        b1_0.isbn,
        b1_0.name,
        b1_0.pdf_file_url,
        b1_0.publication_year,
        b1_0.short_details,
        b1_0.total_copies,
        b1_0.updated_at 
    from
        books b1_0 
    order by
        b1_0.id desc 
    fetch
        first ? rows only
2025-08-28 16:01:35 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.created_at,
        c1_0.description,
        c1_0.name,
        c1_0.updated_at 
    from
        categories c1_0 
    where
        c1_0.id=?
2025-08-28 16:01:35 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.created_at,
        c1_0.description,
        c1_0.name,
        c1_0.updated_at 
    from
        categories c1_0 
    where
        c1_0.id=?
2025-08-28 16:01:35 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    select
        b1_0.category_id,
        b1_0.id,
        b1_0.about,
        b1_0.audio_file_url,
        b1_0.author,
        b1_0.available_copies,
        b1_0.book_cover_url,
        b1_0.created_at,
        b1_0.format,
        b1_0.isbn,
        b1_0.name,
        b1_0.pdf_file_url,
        b1_0.publication_year,
        b1_0.short_details,
        b1_0.total_copies,
        b1_0.updated_at 
    from
        books b1_0 
    where
        b1_0.category_id=?
2025-08-28 16:01:35 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    select
        b1_0.category_id,
        b1_0.id,
        b1_0.about,
        b1_0.audio_file_url,
        b1_0.author,
        b1_0.available_copies,
        b1_0.book_cover_url,
        b1_0.created_at,
        b1_0.format,
        b1_0.isbn,
        b1_0.name,
        b1_0.pdf_file_url,
        b1_0.publication_year,
        b1_0.short_details,
        b1_0.total_copies,
        b1_0.updated_at 
    from
        books b1_0 
    where
        b1_0.category_id=?
2025-08-28 16:01:35 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    select
        r1_0.book_id,
        r1_0.id,
        r1_0.comment,
        r1_0.created_at,
        r1_0.rating,
        r1_0.updated_at,
        r1_0.user_id 
    from
        reviews r1_0 
    where
        r1_0.book_id=?
2025-08-28 16:01:35 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    select
        r1_0.book_id,
        r1_0.id,
        r1_0.comment,
        r1_0.created_at,
        r1_0.rating,
        r1_0.updated_at,
        r1_0.user_id 
    from
        reviews r1_0 
    where
        r1_0.book_id=?
2025-08-28 16:01:35 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.created_at,
        c1_0.description,
        c1_0.name,
        c1_0.updated_at 
    from
        categories c1_0 
    where
        c1_0.id=?
2025-08-28 16:01:35 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.created_at,
        c1_0.description,
        c1_0.name,
        c1_0.updated_at 
    from
        categories c1_0 
    where
        c1_0.id=?
2025-08-28 16:01:35 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    select
        b1_0.category_id,
        b1_0.id,
        b1_0.about,
        b1_0.audio_file_url,
        b1_0.author,
        b1_0.available_copies,
        b1_0.book_cover_url,
        b1_0.created_at,
        b1_0.format,
        b1_0.isbn,
        b1_0.name,
        b1_0.pdf_file_url,
        b1_0.publication_year,
        b1_0.short_details,
        b1_0.total_copies,
        b1_0.updated_at 
    from
        books b1_0 
    where
        b1_0.category_id=?
2025-08-28 16:01:35 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    select
        r1_0.book_id,
        r1_0.id,
        r1_0.comment,
        r1_0.created_at,
        r1_0.rating,
        r1_0.updated_at,
        r1_0.user_id 
    from
        reviews r1_0 
    where
        r1_0.book_id=?
2025-08-28 16:01:35 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    select
        b1_0.category_id,
        b1_0.id,
        b1_0.about,
        b1_0.audio_file_url,
        b1_0.author,
        b1_0.available_copies,
        b1_0.book_cover_url,
        b1_0.created_at,
        b1_0.format,
        b1_0.isbn,
        b1_0.name,
        b1_0.pdf_file_url,
        b1_0.publication_year,
        b1_0.short_details,
        b1_0.total_copies,
        b1_0.updated_at 
    from
        books b1_0 
    where
        b1_0.category_id=?
2025-08-28 16:01:35 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.created_at,
        c1_0.description,
        c1_0.name,
        c1_0.updated_at 
    from
        categories c1_0 
    where
        c1_0.id=?
2025-08-28 16:01:35 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    select
        b1_0.category_id,
        b1_0.id,
        b1_0.about,
        b1_0.audio_file_url,
        b1_0.author,
        b1_0.available_copies,
        b1_0.book_cover_url,
        b1_0.created_at,
        b1_0.format,
        b1_0.isbn,
        b1_0.name,
        b1_0.pdf_file_url,
        b1_0.publication_year,
        b1_0.short_details,
        b1_0.total_copies,
        b1_0.updated_at 
    from
        books b1_0 
    where
        b1_0.category_id=?
2025-08-28 16:01:35 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    select
        r1_0.book_id,
        r1_0.id,
        r1_0.comment,
        r1_0.created_at,
        r1_0.rating,
        r1_0.updated_at,
        r1_0.user_id 
    from
        reviews r1_0 
    where
        r1_0.book_id=?
2025-08-28 16:01:35 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    select
        r1_0.book_id,
        r1_0.id,
        r1_0.comment,
        r1_0.created_at,
        r1_0.rating,
        r1_0.updated_at,
        r1_0.user_id 
    from
        reviews r1_0 
    where
        r1_0.book_id=?
2025-08-28 16:01:35 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.created_at,
        c1_0.description,
        c1_0.name,
        c1_0.updated_at 
    from
        categories c1_0 
    where
        c1_0.id=?
2025-08-28 16:01:35 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    select
        b1_0.category_id,
        b1_0.id,
        b1_0.about,
        b1_0.audio_file_url,
        b1_0.author,
        b1_0.available_copies,
        b1_0.book_cover_url,
        b1_0.created_at,
        b1_0.format,
        b1_0.isbn,
        b1_0.name,
        b1_0.pdf_file_url,
        b1_0.publication_year,
        b1_0.short_details,
        b1_0.total_copies,
        b1_0.updated_at 
    from
        books b1_0 
    where
        b1_0.category_id=?
2025-08-28 16:01:35 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.created_at,
        c1_0.description,
        c1_0.name,
        c1_0.updated_at 
    from
        categories c1_0 
    where
        c1_0.id=?
2025-08-28 16:01:35 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    select
        b1_0.category_id,
        b1_0.id,
        b1_0.about,
        b1_0.audio_file_url,
        b1_0.author,
        b1_0.available_copies,
        b1_0.book_cover_url,
        b1_0.created_at,
        b1_0.format,
        b1_0.isbn,
        b1_0.name,
        b1_0.pdf_file_url,
        b1_0.publication_year,
        b1_0.short_details,
        b1_0.total_copies,
        b1_0.updated_at 
    from
        books b1_0 
    where
        b1_0.category_id=?
2025-08-28 16:01:35 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    select
        r1_0.book_id,
        r1_0.id,
        r1_0.comment,
        r1_0.created_at,
        r1_0.rating,
        r1_0.updated_at,
        r1_0.user_id 
    from
        reviews r1_0 
    where
        r1_0.book_id=?
2025-08-28 16:01:35 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.created_at,
        c1_0.description,
        c1_0.name,
        c1_0.updated_at 
    from
        categories c1_0 
    where
        c1_0.id=?
2025-08-28 16:01:35 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    select
        count(b1_0.id) 
    from
        books b1_0
2025-08-28 16:01:35 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    select
        b1_0.category_id,
        b1_0.id,
        b1_0.about,
        b1_0.audio_file_url,
        b1_0.author,
        b1_0.available_copies,
        b1_0.book_cover_url,
        b1_0.created_at,
        b1_0.format,
        b1_0.isbn,
        b1_0.name,
        b1_0.pdf_file_url,
        b1_0.publication_year,
        b1_0.short_details,
        b1_0.total_copies,
        b1_0.updated_at 
    from
        books b1_0 
    where
        b1_0.category_id=?
2025-08-28 16:01:35 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    select
        r1_0.book_id,
        r1_0.id,
        r1_0.comment,
        r1_0.created_at,
        r1_0.rating,
        r1_0.updated_at,
        r1_0.user_id 
    from
        reviews r1_0 
    where
        r1_0.book_id=?
2025-08-28 16:01:35 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.created_at,
        c1_0.description,
        c1_0.name,
        c1_0.updated_at 
    from
        categories c1_0 
    where
        c1_0.id=?
2025-08-28 16:01:35 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    select
        b1_0.category_id,
        b1_0.id,
        b1_0.about,
        b1_0.audio_file_url,
        b1_0.author,
        b1_0.available_copies,
        b1_0.book_cover_url,
        b1_0.created_at,
        b1_0.format,
        b1_0.isbn,
        b1_0.name,
        b1_0.pdf_file_url,
        b1_0.publication_year,
        b1_0.short_details,
        b1_0.total_copies,
        b1_0.updated_at 
    from
        books b1_0 
    where
        b1_0.category_id=?
2025-08-28 16:01:35 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    select
        r1_0.book_id,
        r1_0.id,
        r1_0.comment,
        r1_0.created_at,
        r1_0.rating,
        r1_0.updated_at,
        r1_0.user_id 
    from
        reviews r1_0 
    where
        r1_0.book_id=?
2025-08-28 16:01:35 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    select
        r1_0.book_id,
        r1_0.id,
        r1_0.comment,
        r1_0.created_at,
        r1_0.rating,
        r1_0.updated_at,
        r1_0.user_id 
    from
        reviews r1_0 
    where
        r1_0.book_id=?
2025-08-28 16:01:35 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.created_at,
        c1_0.description,
        c1_0.name,
        c1_0.updated_at 
    from
        categories c1_0 
    where
        c1_0.id=?
2025-08-28 16:01:35 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    select
        b1_0.category_id,
        b1_0.id,
        b1_0.about,
        b1_0.audio_file_url,
        b1_0.author,
        b1_0.available_copies,
        b1_0.book_cover_url,
        b1_0.created_at,
        b1_0.format,
        b1_0.isbn,
        b1_0.name,
        b1_0.pdf_file_url,
        b1_0.publication_year,
        b1_0.short_details,
        b1_0.total_copies,
        b1_0.updated_at 
    from
        books b1_0 
    where
        b1_0.category_id=?
2025-08-28 16:01:35 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    select
        r1_0.book_id,
        r1_0.id,
        r1_0.comment,
        r1_0.created_at,
        r1_0.rating,
        r1_0.updated_at,
        r1_0.user_id 
    from
        reviews r1_0 
    where
        r1_0.book_id=?
2025-08-28 16:01:35 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.created_at,
        c1_0.description,
        c1_0.name,
        c1_0.updated_at 
    from
        categories c1_0 
    where
        c1_0.id=?
2025-08-28 16:01:35 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    select
        b1_0.category_id,
        b1_0.id,
        b1_0.about,
        b1_0.audio_file_url,
        b1_0.author,
        b1_0.available_copies,
        b1_0.book_cover_url,
        b1_0.created_at,
        b1_0.format,
        b1_0.isbn,
        b1_0.name,
        b1_0.pdf_file_url,
        b1_0.publication_year,
        b1_0.short_details,
        b1_0.total_copies,
        b1_0.updated_at 
    from
        books b1_0 
    where
        b1_0.category_id=?
2025-08-28 16:01:35 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    select
        r1_0.book_id,
        r1_0.id,
        r1_0.comment,
        r1_0.created_at,
        r1_0.rating,
        r1_0.updated_at,
        r1_0.user_id 
    from
        reviews r1_0 
    where
        r1_0.book_id=?
2025-08-28 16:01:35 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.created_at,
        c1_0.description,
        c1_0.name,
        c1_0.updated_at 
    from
        categories c1_0 
    where
        c1_0.id=?
2025-08-28 16:01:35 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    select
        b1_0.category_id,
        b1_0.id,
        b1_0.about,
        b1_0.audio_file_url,
        b1_0.author,
        b1_0.available_copies,
        b1_0.book_cover_url,
        b1_0.created_at,
        b1_0.format,
        b1_0.isbn,
        b1_0.name,
        b1_0.pdf_file_url,
        b1_0.publication_year,
        b1_0.short_details,
        b1_0.total_copies,
        b1_0.updated_at 
    from
        books b1_0 
    where
        b1_0.category_id=?
2025-08-28 16:01:35 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    select
        r1_0.book_id,
        r1_0.id,
        r1_0.comment,
        r1_0.created_at,
        r1_0.rating,
        r1_0.updated_at,
        r1_0.user_id 
    from
        reviews r1_0 
    where
        r1_0.book_id=?
2025-08-28 16:01:35 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    select
        r1_0.book_id,
        r1_0.id,
        r1_0.comment,
        r1_0.created_at,
        r1_0.rating,
        r1_0.updated_at,
        r1_0.user_id 
    from
        reviews r1_0 
    where
        r1_0.book_id=?
2025-08-28 16:01:35 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    select
        r1_0.book_id,
        r1_0.id,
        r1_0.comment,
        r1_0.created_at,
        r1_0.rating,
        r1_0.updated_at,
        r1_0.user_id 
    from
        reviews r1_0 
    where
        r1_0.book_id=?
2025-08-28 16:01:35 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.created_at,
        c1_0.description,
        c1_0.name,
        c1_0.updated_at 
    from
        categories c1_0 
    where
        c1_0.id=?
2025-08-28 16:01:35 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    select
        b1_0.category_id,
        b1_0.id,
        b1_0.about,
        b1_0.audio_file_url,
        b1_0.author,
        b1_0.available_copies,
        b1_0.book_cover_url,
        b1_0.created_at,
        b1_0.format,
        b1_0.isbn,
        b1_0.name,
        b1_0.pdf_file_url,
        b1_0.publication_year,
        b1_0.short_details,
        b1_0.total_copies,
        b1_0.updated_at 
    from
        books b1_0 
    where
        b1_0.category_id=?
2025-08-28 16:01:35 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    select
        r1_0.book_id,
        r1_0.id,
        r1_0.comment,
        r1_0.created_at,
        r1_0.rating,
        r1_0.updated_at,
        r1_0.user_id 
    from
        reviews r1_0 
    where
        r1_0.book_id=?
2025-08-28 16:01:35 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.created_at,
        c1_0.description,
        c1_0.name,
        c1_0.updated_at 
    from
        categories c1_0 
    where
        c1_0.id=?
2025-08-28 16:01:35 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    select
        b1_0.category_id,
        b1_0.id,
        b1_0.about,
        b1_0.audio_file_url,
        b1_0.author,
        b1_0.available_copies,
        b1_0.book_cover_url,
        b1_0.created_at,
        b1_0.format,
        b1_0.isbn,
        b1_0.name,
        b1_0.pdf_file_url,
        b1_0.publication_year,
        b1_0.short_details,
        b1_0.total_copies,
        b1_0.updated_at 
    from
        books b1_0 
    where
        b1_0.category_id=?
2025-08-28 16:01:35 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    select
        r1_0.book_id,
        r1_0.id,
        r1_0.comment,
        r1_0.created_at,
        r1_0.rating,
        r1_0.updated_at,
        r1_0.user_id 
    from
        reviews r1_0 
    where
        r1_0.book_id=?
2025-08-28 16:01:35 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    select
        r1_0.book_id,
        r1_0.id,
        r1_0.comment,
        r1_0.created_at,
        r1_0.rating,
        r1_0.updated_at,
        r1_0.user_id 
    from
        reviews r1_0 
    where
        r1_0.book_id=?
2025-08-28 16:01:35 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.created_at,
        c1_0.description,
        c1_0.name,
        c1_0.updated_at 
    from
        categories c1_0 
    where
        c1_0.id=?
2025-08-28 16:01:35 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    select
        b1_0.category_id,
        b1_0.id,
        b1_0.about,
        b1_0.audio_file_url,
        b1_0.author,
        b1_0.available_copies,
        b1_0.book_cover_url,
        b1_0.created_at,
        b1_0.format,
        b1_0.isbn,
        b1_0.name,
        b1_0.pdf_file_url,
        b1_0.publication_year,
        b1_0.short_details,
        b1_0.total_copies,
        b1_0.updated_at 
    from
        books b1_0 
    where
        b1_0.category_id=?
2025-08-28 16:01:35 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    select
        r1_0.book_id,
        r1_0.id,
        r1_0.comment,
        r1_0.created_at,
        r1_0.rating,
        r1_0.updated_at,
        r1_0.user_id 
    from
        reviews r1_0 
    where
        r1_0.book_id=?
2025-08-28 16:01:35 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.created_at,
        c1_0.description,
        c1_0.name,
        c1_0.updated_at 
    from
        categories c1_0 
    where
        c1_0.id=?
2025-08-28 16:01:35 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    select
        b1_0.category_id,
        b1_0.id,
        b1_0.about,
        b1_0.audio_file_url,
        b1_0.author,
        b1_0.available_copies,
        b1_0.book_cover_url,
        b1_0.created_at,
        b1_0.format,
        b1_0.isbn,
        b1_0.name,
        b1_0.pdf_file_url,
        b1_0.publication_year,
        b1_0.short_details,
        b1_0.total_copies,
        b1_0.updated_at 
    from
        books b1_0 
    where
        b1_0.category_id=?
2025-08-28 16:01:35 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.created_at,
        c1_0.description,
        c1_0.name,
        c1_0.updated_at 
    from
        categories c1_0 
    where
        c1_0.id=?
2025-08-28 16:01:35 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    select
        r1_0.book_id,
        r1_0.id,
        r1_0.comment,
        r1_0.created_at,
        r1_0.rating,
        r1_0.updated_at,
        r1_0.user_id 
    from
        reviews r1_0 
    where
        r1_0.book_id=?
2025-08-28 16:01:35 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    select
        b1_0.category_id,
        b1_0.id,
        b1_0.about,
        b1_0.audio_file_url,
        b1_0.author,
        b1_0.available_copies,
        b1_0.book_cover_url,
        b1_0.created_at,
        b1_0.format,
        b1_0.isbn,
        b1_0.name,
        b1_0.pdf_file_url,
        b1_0.publication_year,
        b1_0.short_details,
        b1_0.total_copies,
        b1_0.updated_at 
    from
        books b1_0 
    where
        b1_0.category_id=?
2025-08-28 16:01:35 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    select
        r1_0.book_id,
        r1_0.id,
        r1_0.comment,
        r1_0.created_at,
        r1_0.rating,
        r1_0.updated_at,
        r1_0.user_id 
    from
        reviews r1_0 
    where
        r1_0.book_id=?
2025-08-28 16:01:35 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.created_at,
        c1_0.description,
        c1_0.name,
        c1_0.updated_at 
    from
        categories c1_0 
    where
        c1_0.id=?
2025-08-28 16:01:35 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    select
        b1_0.category_id,
        b1_0.id,
        b1_0.about,
        b1_0.audio_file_url,
        b1_0.author,
        b1_0.available_copies,
        b1_0.book_cover_url,
        b1_0.created_at,
        b1_0.format,
        b1_0.isbn,
        b1_0.name,
        b1_0.pdf_file_url,
        b1_0.publication_year,
        b1_0.short_details,
        b1_0.total_copies,
        b1_0.updated_at 
    from
        books b1_0 
    where
        b1_0.category_id=?
2025-08-28 16:01:35 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    select
        r1_0.book_id,
        r1_0.id,
        r1_0.comment,
        r1_0.created_at,
        r1_0.rating,
        r1_0.updated_at,
        r1_0.user_id 
    from
        reviews r1_0 
    where
        r1_0.book_id=?
2025-08-28 16:01:35 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.created_at,
        c1_0.description,
        c1_0.name,
        c1_0.updated_at 
    from
        categories c1_0 
    where
        c1_0.id=?
2025-08-28 16:01:35 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    select
        b1_0.category_id,
        b1_0.id,
        b1_0.about,
        b1_0.audio_file_url,
        b1_0.author,
        b1_0.available_copies,
        b1_0.book_cover_url,
        b1_0.created_at,
        b1_0.format,
        b1_0.isbn,
        b1_0.name,
        b1_0.pdf_file_url,
        b1_0.publication_year,
        b1_0.short_details,
        b1_0.total_copies,
        b1_0.updated_at 
    from
        books b1_0 
    where
        b1_0.category_id=?
2025-08-28 16:01:35 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    select
        r1_0.book_id,
        r1_0.id,
        r1_0.comment,
        r1_0.created_at,
        r1_0.rating,
        r1_0.updated_at,
        r1_0.user_id 
    from
        reviews r1_0 
    where
        r1_0.book_id=?
2025-08-28 16:01:35 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.created_at,
        c1_0.description,
        c1_0.name,
        c1_0.updated_at 
    from
        categories c1_0 
    where
        c1_0.id=?
2025-08-28 16:01:35 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    select
        b1_0.category_id,
        b1_0.id,
        b1_0.about,
        b1_0.audio_file_url,
        b1_0.author,
        b1_0.available_copies,
        b1_0.book_cover_url,
        b1_0.created_at,
        b1_0.format,
        b1_0.isbn,
        b1_0.name,
        b1_0.pdf_file_url,
        b1_0.publication_year,
        b1_0.short_details,
        b1_0.total_copies,
        b1_0.updated_at 
    from
        books b1_0 
    where
        b1_0.category_id=?
2025-08-28 16:01:35 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    select
        r1_0.book_id,
        r1_0.id,
        r1_0.comment,
        r1_0.created_at,
        r1_0.rating,
        r1_0.updated_at,
        r1_0.user_id 
    from
        reviews r1_0 
    where
        r1_0.book_id=?
2025-08-28 16:01:35 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.created_at,
        c1_0.description,
        c1_0.name,
        c1_0.updated_at 
    from
        categories c1_0 
    where
        c1_0.id=?
2025-08-28 16:01:35 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    select
        b1_0.category_id,
        b1_0.id,
        b1_0.about,
        b1_0.audio_file_url,
        b1_0.author,
        b1_0.available_copies,
        b1_0.book_cover_url,
        b1_0.created_at,
        b1_0.format,
        b1_0.isbn,
        b1_0.name,
        b1_0.pdf_file_url,
        b1_0.publication_year,
        b1_0.short_details,
        b1_0.total_copies,
        b1_0.updated_at 
    from
        books b1_0 
    where
        b1_0.category_id=?
2025-08-28 16:01:35 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    select
        r1_0.book_id,
        r1_0.id,
        r1_0.comment,
        r1_0.created_at,
        r1_0.rating,
        r1_0.updated_at,
        r1_0.user_id 
    from
        reviews r1_0 
    where
        r1_0.book_id=?
2025-08-28 16:01:35 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    select
        r1_0.book_id,
        r1_0.id,
        r1_0.comment,
        r1_0.created_at,
        r1_0.rating,
        r1_0.updated_at,
        r1_0.user_id 
    from
        reviews r1_0 
    where
        r1_0.book_id=?
2025-08-28 16:01:35 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    select
        r1_0.book_id,
        r1_0.id,
        r1_0.comment,
        r1_0.created_at,
        r1_0.rating,
        r1_0.updated_at,
        r1_0.user_id 
    from
        reviews r1_0 
    where
        r1_0.book_id=?
2025-08-28 16:01:35 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    select
        r1_0.book_id,
        r1_0.id,
        r1_0.comment,
        r1_0.created_at,
        r1_0.rating,
        r1_0.updated_at,
        r1_0.user_id 
    from
        reviews r1_0 
    where
        r1_0.book_id=?
2025-08-28 16:01:35 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    select
        r1_0.book_id,
        r1_0.id,
        r1_0.comment,
        r1_0.created_at,
        r1_0.rating,
        r1_0.updated_at,
        r1_0.user_id 
    from
        reviews r1_0 
    where
        r1_0.book_id=?
2025-08-28 16:01:35 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    select
        r1_0.book_id,
        r1_0.id,
        r1_0.comment,
        r1_0.created_at,
        r1_0.rating,
        r1_0.updated_at,
        r1_0.user_id 
    from
        reviews r1_0 
    where
        r1_0.book_id=?
2025-08-28 16:01:35 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    select
        r1_0.book_id,
        r1_0.id,
        r1_0.comment,
        r1_0.created_at,
        r1_0.rating,
        r1_0.updated_at,
        r1_0.user_id 
    from
        reviews r1_0 
    where
        r1_0.book_id=?
2025-08-28 16:01:35 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.address,
        u1_0.created_at,
        u1_0.date_of_birth,
        u1_0.email,
        u1_0.is_active,
        u1_0.name,
        u1_0.password_hash,
        u1_0.role,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.username=?
2025-08-28 16:01:35 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.address,
        u1_0.created_at,
        u1_0.date_of_birth,
        u1_0.email,
        u1_0.is_active,
        u1_0.name,
        u1_0.password_hash,
        u1_0.role,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.username=?
2025-08-28 16:01:35 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.address,
        u1_0.created_at,
        u1_0.date_of_birth,
        u1_0.email,
        u1_0.is_active,
        u1_0.name,
        u1_0.password_hash,
        u1_0.role,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.username=?
2025-08-28 16:01:35 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        b1_0.id,
        b1_0.about,
        b1_0.audio_file_url,
        b1_0.author,
        b1_0.available_copies,
        b1_0.book_cover_url,
        b1_0.category_id,
        b1_0.created_at,
        b1_0.format,
        b1_0.isbn,
        b1_0.name,
        b1_0.pdf_file_url,
        b1_0.publication_year,
        b1_0.short_details,
        b1_0.total_copies,
        b1_0.updated_at 
    from
        books b1_0 
    order by
        b1_0.id desc 
    fetch
        first ? rows only
2025-08-28 16:01:35 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    select
        b1_0.id,
        b1_0.about,
        b1_0.audio_file_url,
        b1_0.author,
        b1_0.available_copies,
        b1_0.book_cover_url,
        b1_0.category_id,
        b1_0.created_at,
        b1_0.format,
        b1_0.isbn,
        b1_0.name,
        b1_0.pdf_file_url,
        b1_0.publication_year,
        b1_0.short_details,
        b1_0.total_copies,
        b1_0.updated_at 
    from
        books b1_0 
    order by
        b1_0.created_at desc 
    fetch
        first ? rows only
2025-08-28 16:01:35 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    select
        b1_0.id,
        b1_0.about,
        b1_0.audio_file_url,
        b1_0.author,
        b1_0.available_copies,
        b1_0.book_cover_url,
        b1_0.category_id,
        b1_0.created_at,
        b1_0.format,
        b1_0.isbn,
        b1_0.name,
        b1_0.pdf_file_url,
        b1_0.publication_year,
        b1_0.short_details,
        b1_0.total_copies,
        b1_0.updated_at 
    from
        books b1_0 
    order by
        b1_0.id desc 
    fetch
        first ? rows only
2025-08-28 16:01:35 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        count(b1_0.id) 
    from
        books b1_0
2025-08-28 16:01:35 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.created_at,
        c1_0.description,
        c1_0.name,
        c1_0.updated_at 
    from
        categories c1_0 
    where
        c1_0.id=?
2025-08-28 16:01:35 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    select
        b1_0.category_id,
        b1_0.id,
        b1_0.about,
        b1_0.audio_file_url,
        b1_0.author,
        b1_0.available_copies,
        b1_0.book_cover_url,
        b1_0.created_at,
        b1_0.format,
        b1_0.isbn,
        b1_0.name,
        b1_0.pdf_file_url,
        b1_0.publication_year,
        b1_0.short_details,
        b1_0.total_copies,
        b1_0.updated_at 
    from
        books b1_0 
    where
        b1_0.category_id=?
2025-08-28 16:01:35 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.created_at,
        c1_0.description,
        c1_0.name,
        c1_0.updated_at 
    from
        categories c1_0 
    where
        c1_0.id=?
2025-08-28 16:01:35 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        b1_0.category_id,
        b1_0.id,
        b1_0.about,
        b1_0.audio_file_url,
        b1_0.author,
        b1_0.available_copies,
        b1_0.book_cover_url,
        b1_0.created_at,
        b1_0.format,
        b1_0.isbn,
        b1_0.name,
        b1_0.pdf_file_url,
        b1_0.publication_year,
        b1_0.short_details,
        b1_0.total_copies,
        b1_0.updated_at 
    from
        books b1_0 
    where
        b1_0.category_id=?
2025-08-28 16:01:35 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        r1_0.book_id,
        r1_0.id,
        r1_0.comment,
        r1_0.created_at,
        r1_0.rating,
        r1_0.updated_at,
        r1_0.user_id 
    from
        reviews r1_0 
    where
        r1_0.book_id=?
2025-08-28 16:01:35 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.created_at,
        c1_0.description,
        c1_0.name,
        c1_0.updated_at 
    from
        categories c1_0 
    where
        c1_0.id=?
2025-08-28 16:01:35 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        b1_0.category_id,
        b1_0.id,
        b1_0.about,
        b1_0.audio_file_url,
        b1_0.author,
        b1_0.available_copies,
        b1_0.book_cover_url,
        b1_0.created_at,
        b1_0.format,
        b1_0.isbn,
        b1_0.name,
        b1_0.pdf_file_url,
        b1_0.publication_year,
        b1_0.short_details,
        b1_0.total_copies,
        b1_0.updated_at 
    from
        books b1_0 
    where
        b1_0.category_id=?
2025-08-28 16:01:35 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    select
        r1_0.book_id,
        r1_0.id,
        r1_0.comment,
        r1_0.created_at,
        r1_0.rating,
        r1_0.updated_at,
        r1_0.user_id 
    from
        reviews r1_0 
    where
        r1_0.book_id=?
2025-08-28 16:01:35 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.created_at,
        c1_0.description,
        c1_0.name,
        c1_0.updated_at 
    from
        categories c1_0 
    where
        c1_0.id=?
2025-08-28 16:01:35 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        r1_0.book_id,
        r1_0.id,
        r1_0.comment,
        r1_0.created_at,
        r1_0.rating,
        r1_0.updated_at,
        r1_0.user_id 
    from
        reviews r1_0 
    where
        r1_0.book_id=?
2025-08-28 16:01:35 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.created_at,
        c1_0.description,
        c1_0.name,
        c1_0.updated_at 
    from
        categories c1_0 
    where
        c1_0.id=?
2025-08-28 16:01:35 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        b1_0.category_id,
        b1_0.id,
        b1_0.about,
        b1_0.audio_file_url,
        b1_0.author,
        b1_0.available_copies,
        b1_0.book_cover_url,
        b1_0.created_at,
        b1_0.format,
        b1_0.isbn,
        b1_0.name,
        b1_0.pdf_file_url,
        b1_0.publication_year,
        b1_0.short_details,
        b1_0.total_copies,
        b1_0.updated_at 
    from
        books b1_0 
    where
        b1_0.category_id=?
2025-08-28 16:01:35 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        r1_0.book_id,
        r1_0.id,
        r1_0.comment,
        r1_0.created_at,
        r1_0.rating,
        r1_0.updated_at,
        r1_0.user_id 
    from
        reviews r1_0 
    where
        r1_0.book_id=?
2025-08-28 16:01:35 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.created_at,
        c1_0.description,
        c1_0.name,
        c1_0.updated_at 
    from
        categories c1_0 
    where
        c1_0.id=?
2025-08-28 16:01:35 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        b1_0.category_id,
        b1_0.id,
        b1_0.about,
        b1_0.audio_file_url,
        b1_0.author,
        b1_0.available_copies,
        b1_0.book_cover_url,
        b1_0.created_at,
        b1_0.format,
        b1_0.isbn,
        b1_0.name,
        b1_0.pdf_file_url,
        b1_0.publication_year,
        b1_0.short_details,
        b1_0.total_copies,
        b1_0.updated_at 
    from
        books b1_0 
    where
        b1_0.category_id=?
2025-08-28 16:01:35 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        r1_0.book_id,
        r1_0.id,
        r1_0.comment,
        r1_0.created_at,
        r1_0.rating,
        r1_0.updated_at,
        r1_0.user_id 
    from
        reviews r1_0 
    where
        r1_0.book_id=?
2025-08-28 16:01:35 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.created_at,
        c1_0.description,
        c1_0.name,
        c1_0.updated_at 
    from
        categories c1_0 
    where
        c1_0.id=?
2025-08-28 16:01:35 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        b1_0.category_id,
        b1_0.id,
        b1_0.about,
        b1_0.audio_file_url,
        b1_0.author,
        b1_0.available_copies,
        b1_0.book_cover_url,
        b1_0.created_at,
        b1_0.format,
        b1_0.isbn,
        b1_0.name,
        b1_0.pdf_file_url,
        b1_0.publication_year,
        b1_0.short_details,
        b1_0.total_copies,
        b1_0.updated_at 
    from
        books b1_0 
    where
        b1_0.category_id=?
2025-08-28 16:01:35 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        r1_0.book_id,
        r1_0.id,
        r1_0.comment,
        r1_0.created_at,
        r1_0.rating,
        r1_0.updated_at,
        r1_0.user_id 
    from
        reviews r1_0 
    where
        r1_0.book_id=?
2025-08-28 16:01:35 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.created_at,
        c1_0.description,
        c1_0.name,
        c1_0.updated_at 
    from
        categories c1_0 
    where
        c1_0.id=?
2025-08-28 16:01:35 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        b1_0.category_id,
        b1_0.id,
        b1_0.about,
        b1_0.audio_file_url,
        b1_0.author,
        b1_0.available_copies,
        b1_0.book_cover_url,
        b1_0.created_at,
        b1_0.format,
        b1_0.isbn,
        b1_0.name,
        b1_0.pdf_file_url,
        b1_0.publication_year,
        b1_0.short_details,
        b1_0.total_copies,
        b1_0.updated_at 
    from
        books b1_0 
    where
        b1_0.category_id=?
2025-08-28 16:01:35 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        r1_0.book_id,
        r1_0.id,
        r1_0.comment,
        r1_0.created_at,
        r1_0.rating,
        r1_0.updated_at,
        r1_0.user_id 
    from
        reviews r1_0 
    where
        r1_0.book_id=?
2025-08-28 16:01:35 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.created_at,
        c1_0.description,
        c1_0.name,
        c1_0.updated_at 
    from
        categories c1_0 
    where
        c1_0.id=?
2025-08-28 16:01:35 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        b1_0.category_id,
        b1_0.id,
        b1_0.about,
        b1_0.audio_file_url,
        b1_0.author,
        b1_0.available_copies,
        b1_0.book_cover_url,
        b1_0.created_at,
        b1_0.format,
        b1_0.isbn,
        b1_0.name,
        b1_0.pdf_file_url,
        b1_0.publication_year,
        b1_0.short_details,
        b1_0.total_copies,
        b1_0.updated_at 
    from
        books b1_0 
    where
        b1_0.category_id=?
2025-08-28 16:01:35 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        r1_0.book_id,
        r1_0.id,
        r1_0.comment,
        r1_0.created_at,
        r1_0.rating,
        r1_0.updated_at,
        r1_0.user_id 
    from
        reviews r1_0 
    where
        r1_0.book_id=?
2025-08-28 16:01:35 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    select
        b1_0.category_id,
        b1_0.id,
        b1_0.about,
        b1_0.audio_file_url,
        b1_0.author,
        b1_0.available_copies,
        b1_0.book_cover_url,
        b1_0.created_at,
        b1_0.format,
        b1_0.isbn,
        b1_0.name,
        b1_0.pdf_file_url,
        b1_0.publication_year,
        b1_0.short_details,
        b1_0.total_copies,
        b1_0.updated_at 
    from
        books b1_0 
    where
        b1_0.category_id=?
2025-08-28 16:01:35 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.created_at,
        c1_0.description,
        c1_0.name,
        c1_0.updated_at 
    from
        categories c1_0 
    where
        c1_0.id=?
2025-08-28 16:01:35 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    select
        r1_0.book_id,
        r1_0.id,
        r1_0.comment,
        r1_0.created_at,
        r1_0.rating,
        r1_0.updated_at,
        r1_0.user_id 
    from
        reviews r1_0 
    where
        r1_0.book_id=?
2025-08-28 16:01:35 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.created_at,
        c1_0.description,
        c1_0.name,
        c1_0.updated_at 
    from
        categories c1_0 
    where
        c1_0.id=?
2025-08-28 16:01:35 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    select
        b1_0.category_id,
        b1_0.id,
        b1_0.about,
        b1_0.audio_file_url,
        b1_0.author,
        b1_0.available_copies,
        b1_0.book_cover_url,
        b1_0.created_at,
        b1_0.format,
        b1_0.isbn,
        b1_0.name,
        b1_0.pdf_file_url,
        b1_0.publication_year,
        b1_0.short_details,
        b1_0.total_copies,
        b1_0.updated_at 
    from
        books b1_0 
    where
        b1_0.category_id=?
2025-08-28 16:01:35 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    select
        r1_0.book_id,
        r1_0.id,
        r1_0.comment,
        r1_0.created_at,
        r1_0.rating,
        r1_0.updated_at,
        r1_0.user_id 
    from
        reviews r1_0 
    where
        r1_0.book_id=?
2025-08-28 16:01:35 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    select
        b1_0.category_id,
        b1_0.id,
        b1_0.about,
        b1_0.audio_file_url,
        b1_0.author,
        b1_0.available_copies,
        b1_0.book_cover_url,
        b1_0.created_at,
        b1_0.format,
        b1_0.isbn,
        b1_0.name,
        b1_0.pdf_file_url,
        b1_0.publication_year,
        b1_0.short_details,
        b1_0.total_copies,
        b1_0.updated_at 
    from
        books b1_0 
    where
        b1_0.category_id=?
2025-08-28 16:01:35 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.created_at,
        c1_0.description,
        c1_0.name,
        c1_0.updated_at 
    from
        categories c1_0 
    where
        c1_0.id=?
2025-08-28 16:01:35 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    select
        b1_0.category_id,
        b1_0.id,
        b1_0.about,
        b1_0.audio_file_url,
        b1_0.author,
        b1_0.available_copies,
        b1_0.book_cover_url,
        b1_0.created_at,
        b1_0.format,
        b1_0.isbn,
        b1_0.name,
        b1_0.pdf_file_url,
        b1_0.publication_year,
        b1_0.short_details,
        b1_0.total_copies,
        b1_0.updated_at 
    from
        books b1_0 
    where
        b1_0.category_id=?
2025-08-28 16:01:35 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    select
        r1_0.book_id,
        r1_0.id,
        r1_0.comment,
        r1_0.created_at,
        r1_0.rating,
        r1_0.updated_at,
        r1_0.user_id 
    from
        reviews r1_0 
    where
        r1_0.book_id=?
2025-08-28 16:01:35 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.created_at,
        c1_0.description,
        c1_0.name,
        c1_0.updated_at 
    from
        categories c1_0 
    where
        c1_0.id=?
2025-08-28 16:01:35 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    select
        b1_0.category_id,
        b1_0.id,
        b1_0.about,
        b1_0.audio_file_url,
        b1_0.author,
        b1_0.available_copies,
        b1_0.book_cover_url,
        b1_0.created_at,
        b1_0.format,
        b1_0.isbn,
        b1_0.name,
        b1_0.pdf_file_url,
        b1_0.publication_year,
        b1_0.short_details,
        b1_0.total_copies,
        b1_0.updated_at 
    from
        books b1_0 
    where
        b1_0.category_id=?
2025-08-28 16:01:35 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    select
        r1_0.book_id,
        r1_0.id,
        r1_0.comment,
        r1_0.created_at,
        r1_0.rating,
        r1_0.updated_at,
        r1_0.user_id 
    from
        reviews r1_0 
    where
        r1_0.book_id=?
2025-08-28 16:01:35 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.created_at,
        c1_0.description,
        c1_0.name,
        c1_0.updated_at 
    from
        categories c1_0 
    where
        c1_0.id=?
2025-08-28 16:01:35 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    select
        b1_0.category_id,
        b1_0.id,
        b1_0.about,
        b1_0.audio_file_url,
        b1_0.author,
        b1_0.available_copies,
        b1_0.book_cover_url,
        b1_0.created_at,
        b1_0.format,
        b1_0.isbn,
        b1_0.name,
        b1_0.pdf_file_url,
        b1_0.publication_year,
        b1_0.short_details,
        b1_0.total_copies,
        b1_0.updated_at 
    from
        books b1_0 
    where
        b1_0.category_id=?
2025-08-28 16:01:35 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    select
        r1_0.book_id,
        r1_0.id,
        r1_0.comment,
        r1_0.created_at,
        r1_0.rating,
        r1_0.updated_at,
        r1_0.user_id 
    from
        reviews r1_0 
    where
        r1_0.book_id=?
2025-08-28 16:01:35 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.created_at,
        c1_0.description,
        c1_0.name,
        c1_0.updated_at 
    from
        categories c1_0 
    where
        c1_0.id=?
2025-08-28 16:01:35 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    select
        b1_0.category_id,
        b1_0.id,
        b1_0.about,
        b1_0.audio_file_url,
        b1_0.author,
        b1_0.available_copies,
        b1_0.book_cover_url,
        b1_0.created_at,
        b1_0.format,
        b1_0.isbn,
        b1_0.name,
        b1_0.pdf_file_url,
        b1_0.publication_year,
        b1_0.short_details,
        b1_0.total_copies,
        b1_0.updated_at 
    from
        books b1_0 
    where
        b1_0.category_id=?
2025-08-28 16:01:35 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    select
        r1_0.book_id,
        r1_0.id,
        r1_0.comment,
        r1_0.created_at,
        r1_0.rating,
        r1_0.updated_at,
        r1_0.user_id 
    from
        reviews r1_0 
    where
        r1_0.book_id=?
2025-08-28 16:01:35 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.created_at,
        c1_0.description,
        c1_0.name,
        c1_0.updated_at 
    from
        categories c1_0 
    where
        c1_0.id=?
2025-08-28 16:01:36 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    select
        b1_0.category_id,
        b1_0.id,
        b1_0.about,
        b1_0.audio_file_url,
        b1_0.author,
        b1_0.available_copies,
        b1_0.book_cover_url,
        b1_0.created_at,
        b1_0.format,
        b1_0.isbn,
        b1_0.name,
        b1_0.pdf_file_url,
        b1_0.publication_year,
        b1_0.short_details,
        b1_0.total_copies,
        b1_0.updated_at 
    from
        books b1_0 
    where
        b1_0.category_id=?
2025-08-28 16:01:36 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    select
        r1_0.book_id,
        r1_0.id,
        r1_0.comment,
        r1_0.created_at,
        r1_0.rating,
        r1_0.updated_at,
        r1_0.user_id 
    from
        reviews r1_0 
    where
        r1_0.book_id=?
2025-08-28 16:01:36 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.created_at,
        c1_0.description,
        c1_0.name,
        c1_0.updated_at 
    from
        categories c1_0 
    where
        c1_0.id=?
2025-08-28 16:01:36 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    select
        b1_0.category_id,
        b1_0.id,
        b1_0.about,
        b1_0.audio_file_url,
        b1_0.author,
        b1_0.available_copies,
        b1_0.book_cover_url,
        b1_0.created_at,
        b1_0.format,
        b1_0.isbn,
        b1_0.name,
        b1_0.pdf_file_url,
        b1_0.publication_year,
        b1_0.short_details,
        b1_0.total_copies,
        b1_0.updated_at 
    from
        books b1_0 
    where
        b1_0.category_id=?
2025-08-28 16:01:36 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    select
        r1_0.book_id,
        r1_0.id,
        r1_0.comment,
        r1_0.created_at,
        r1_0.rating,
        r1_0.updated_at,
        r1_0.user_id 
    from
        reviews r1_0 
    where
        r1_0.book_id=?
2025-08-28 16:01:36 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    select
        r1_0.book_id,
        r1_0.id,
        r1_0.comment,
        r1_0.created_at,
        r1_0.rating,
        r1_0.updated_at,
        r1_0.user_id 
    from
        reviews r1_0 
    where
        r1_0.book_id=?
2025-08-28 16:01:36 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.created_at,
        c1_0.description,
        c1_0.name,
        c1_0.updated_at 
    from
        categories c1_0 
    where
        c1_0.id=?
2025-08-28 16:01:36 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    select
        r1_0.book_id,
        r1_0.id,
        r1_0.comment,
        r1_0.created_at,
        r1_0.rating,
        r1_0.updated_at,
        r1_0.user_id 
    from
        reviews r1_0 
    where
        r1_0.book_id=?
2025-08-28 16:01:36 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    select
        b1_0.category_id,
        b1_0.id,
        b1_0.about,
        b1_0.audio_file_url,
        b1_0.author,
        b1_0.available_copies,
        b1_0.book_cover_url,
        b1_0.created_at,
        b1_0.format,
        b1_0.isbn,
        b1_0.name,
        b1_0.pdf_file_url,
        b1_0.publication_year,
        b1_0.short_details,
        b1_0.total_copies,
        b1_0.updated_at 
    from
        books b1_0 
    where
        b1_0.category_id=?
2025-08-28 16:01:36 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    select
        r1_0.book_id,
        r1_0.id,
        r1_0.comment,
        r1_0.created_at,
        r1_0.rating,
        r1_0.updated_at,
        r1_0.user_id 
    from
        reviews r1_0 
    where
        r1_0.book_id=?
2025-08-28 16:01:36 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.created_at,
        c1_0.description,
        c1_0.name,
        c1_0.updated_at 
    from
        categories c1_0 
    where
        c1_0.id=?
2025-08-28 16:01:36 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    select
        b1_0.category_id,
        b1_0.id,
        b1_0.about,
        b1_0.audio_file_url,
        b1_0.author,
        b1_0.available_copies,
        b1_0.book_cover_url,
        b1_0.created_at,
        b1_0.format,
        b1_0.isbn,
        b1_0.name,
        b1_0.pdf_file_url,
        b1_0.publication_year,
        b1_0.short_details,
        b1_0.total_copies,
        b1_0.updated_at 
    from
        books b1_0 
    where
        b1_0.category_id=?
2025-08-28 16:01:36 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    select
        r1_0.book_id,
        r1_0.id,
        r1_0.comment,
        r1_0.created_at,
        r1_0.rating,
        r1_0.updated_at,
        r1_0.user_id 
    from
        reviews r1_0 
    where
        r1_0.book_id=?
2025-08-28 16:01:36 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    select
        r1_0.book_id,
        r1_0.id,
        r1_0.comment,
        r1_0.created_at,
        r1_0.rating,
        r1_0.updated_at,
        r1_0.user_id 
    from
        reviews r1_0 
    where
        r1_0.book_id=?
2025-08-28 16:01:36 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.created_at,
        c1_0.description,
        c1_0.name,
        c1_0.updated_at 
    from
        categories c1_0 
    where
        c1_0.id=?
2025-08-28 16:01:36 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    select
        b1_0.category_id,
        b1_0.id,
        b1_0.about,
        b1_0.audio_file_url,
        b1_0.author,
        b1_0.available_copies,
        b1_0.book_cover_url,
        b1_0.created_at,
        b1_0.format,
        b1_0.isbn,
        b1_0.name,
        b1_0.pdf_file_url,
        b1_0.publication_year,
        b1_0.short_details,
        b1_0.total_copies,
        b1_0.updated_at 
    from
        books b1_0 
    where
        b1_0.category_id=?
2025-08-28 16:01:36 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    select
        r1_0.book_id,
        r1_0.id,
        r1_0.comment,
        r1_0.created_at,
        r1_0.rating,
        r1_0.updated_at,
        r1_0.user_id 
    from
        reviews r1_0 
    where
        r1_0.book_id=?
2025-08-28 16:01:36 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    select
        r1_0.book_id,
        r1_0.id,
        r1_0.comment,
        r1_0.created_at,
        r1_0.rating,
        r1_0.updated_at,
        r1_0.user_id 
    from
        reviews r1_0 
    where
        r1_0.book_id=?
2025-08-28 16:01:36 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    select
        r1_0.book_id,
        r1_0.id,
        r1_0.comment,
        r1_0.created_at,
        r1_0.rating,
        r1_0.updated_at,
        r1_0.user_id 
    from
        reviews r1_0 
    where
        r1_0.book_id=?
2025-08-28 16:01:36 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    select
        r1_0.book_id,
        r1_0.id,
        r1_0.comment,
        r1_0.created_at,
        r1_0.rating,
        r1_0.updated_at,
        r1_0.user_id 
    from
        reviews r1_0 
    where
        r1_0.book_id=?
2025-08-28 16:01:36 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.created_at,
        c1_0.description,
        c1_0.name,
        c1_0.updated_at 
    from
        categories c1_0 
    where
        c1_0.id=?
2025-08-28 16:01:36 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    select
        r1_0.book_id,
        r1_0.id,
        r1_0.comment,
        r1_0.created_at,
        r1_0.rating,
        r1_0.updated_at,
        r1_0.user_id 
    from
        reviews r1_0 
    where
        r1_0.book_id=?
2025-08-28 16:01:36 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    select
        b1_0.category_id,
        b1_0.id,
        b1_0.about,
        b1_0.audio_file_url,
        b1_0.author,
        b1_0.available_copies,
        b1_0.book_cover_url,
        b1_0.created_at,
        b1_0.format,
        b1_0.isbn,
        b1_0.name,
        b1_0.pdf_file_url,
        b1_0.publication_year,
        b1_0.short_details,
        b1_0.total_copies,
        b1_0.updated_at 
    from
        books b1_0 
    where
        b1_0.category_id=?
2025-08-28 16:01:36 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    select
        r1_0.book_id,
        r1_0.id,
        r1_0.comment,
        r1_0.created_at,
        r1_0.rating,
        r1_0.updated_at,
        r1_0.user_id 
    from
        reviews r1_0 
    where
        r1_0.book_id=?
2025-08-28 16:01:36 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        r1_0.book_id,
        r1_0.id,
        r1_0.comment,
        r1_0.created_at,
        r1_0.rating,
        r1_0.updated_at,
        r1_0.user_id 
    from
        reviews r1_0 
    where
        r1_0.book_id=?
2025-08-28 16:01:36 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        r1_0.book_id,
        r1_0.id,
        r1_0.comment,
        r1_0.created_at,
        r1_0.rating,
        r1_0.updated_at,
        r1_0.user_id 
    from
        reviews r1_0 
    where
        r1_0.book_id=?
2025-08-28 16:01:36 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        r1_0.book_id,
        r1_0.id,
        r1_0.comment,
        r1_0.created_at,
        r1_0.rating,
        r1_0.updated_at,
        r1_0.user_id 
    from
        reviews r1_0 
    where
        r1_0.book_id=?
2025-08-28 16:01:36 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.address,
        u1_0.created_at,
        u1_0.date_of_birth,
        u1_0.email,
        u1_0.is_active,
        u1_0.name,
        u1_0.password_hash,
        u1_0.role,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.username=?
2025-08-28 16:01:36 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.address,
        u1_0.created_at,
        u1_0.date_of_birth,
        u1_0.email,
        u1_0.is_active,
        u1_0.name,
        u1_0.password_hash,
        u1_0.role,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.username=?
2025-08-28 16:01:36 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.created_at,
        c1_0.description,
        c1_0.name,
        c1_0.updated_at 
    from
        categories c1_0
2025-08-28 16:01:36 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    select
        b1_0.category_id,
        b1_0.id,
        b1_0.about,
        b1_0.audio_file_url,
        b1_0.author,
        b1_0.available_copies,
        b1_0.book_cover_url,
        b1_0.created_at,
        b1_0.format,
        b1_0.isbn,
        b1_0.name,
        b1_0.pdf_file_url,
        b1_0.publication_year,
        b1_0.short_details,
        b1_0.total_copies,
        b1_0.updated_at 
    from
        books b1_0 
    where
        b1_0.category_id=?
2025-08-28 16:01:36 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    select
        b1_0.category_id,
        b1_0.id,
        b1_0.about,
        b1_0.audio_file_url,
        b1_0.author,
        b1_0.available_copies,
        b1_0.book_cover_url,
        b1_0.created_at,
        b1_0.format,
        b1_0.isbn,
        b1_0.name,
        b1_0.pdf_file_url,
        b1_0.publication_year,
        b1_0.short_details,
        b1_0.total_copies,
        b1_0.updated_at 
    from
        books b1_0 
    where
        b1_0.category_id=?
2025-08-28 16:01:36 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    select
        b1_0.category_id,
        b1_0.id,
        b1_0.about,
        b1_0.audio_file_url,
        b1_0.author,
        b1_0.available_copies,
        b1_0.book_cover_url,
        b1_0.created_at,
        b1_0.format,
        b1_0.isbn,
        b1_0.name,
        b1_0.pdf_file_url,
        b1_0.publication_year,
        b1_0.short_details,
        b1_0.total_copies,
        b1_0.updated_at 
    from
        books b1_0 
    where
        b1_0.category_id=?
2025-08-28 16:01:36 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    select
        b1_0.category_id,
        b1_0.id,
        b1_0.about,
        b1_0.audio_file_url,
        b1_0.author,
        b1_0.available_copies,
        b1_0.book_cover_url,
        b1_0.created_at,
        b1_0.format,
        b1_0.isbn,
        b1_0.name,
        b1_0.pdf_file_url,
        b1_0.publication_year,
        b1_0.short_details,
        b1_0.total_copies,
        b1_0.updated_at 
    from
        books b1_0 
    where
        b1_0.category_id=?
2025-08-28 16:01:36 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    select
        b1_0.category_id,
        b1_0.id,
        b1_0.about,
        b1_0.audio_file_url,
        b1_0.author,
        b1_0.available_copies,
        b1_0.book_cover_url,
        b1_0.created_at,
        b1_0.format,
        b1_0.isbn,
        b1_0.name,
        b1_0.pdf_file_url,
        b1_0.publication_year,
        b1_0.short_details,
        b1_0.total_copies,
        b1_0.updated_at 
    from
        books b1_0 
    where
        b1_0.category_id=?
2025-08-28 16:01:36 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    select
        b1_0.category_id,
        b1_0.id,
        b1_0.about,
        b1_0.audio_file_url,
        b1_0.author,
        b1_0.available_copies,
        b1_0.book_cover_url,
        b1_0.created_at,
        b1_0.format,
        b1_0.isbn,
        b1_0.name,
        b1_0.pdf_file_url,
        b1_0.publication_year,
        b1_0.short_details,
        b1_0.total_copies,
        b1_0.updated_at 
    from
        books b1_0 
    where
        b1_0.category_id=?
2025-08-28 16:01:36 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    select
        b1_0.category_id,
        b1_0.id,
        b1_0.about,
        b1_0.audio_file_url,
        b1_0.author,
        b1_0.available_copies,
        b1_0.book_cover_url,
        b1_0.created_at,
        b1_0.format,
        b1_0.isbn,
        b1_0.name,
        b1_0.pdf_file_url,
        b1_0.publication_year,
        b1_0.short_details,
        b1_0.total_copies,
        b1_0.updated_at 
    from
        books b1_0 
    where
        b1_0.category_id=?
2025-08-28 16:01:36 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    select
        b1_0.id,
        b1_0.about,
        b1_0.audio_file_url,
        b1_0.author,
        b1_0.available_copies,
        b1_0.book_cover_url,
        b1_0.category_id,
        b1_0.created_at,
        b1_0.format,
        b1_0.isbn,
        b1_0.name,
        b1_0.pdf_file_url,
        b1_0.publication_year,
        b1_0.short_details,
        b1_0.total_copies,
        b1_0.updated_at 
    from
        books b1_0 
    left join
        categories c1_0 
            on c1_0.id=b1_0.category_id 
    where
        c1_0.id=? 
    fetch
        first ? rows only
2025-08-28 16:01:36 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.created_at,
        c1_0.description,
        c1_0.name,
        c1_0.updated_at 
    from
        categories c1_0 
    where
        c1_0.id=?
2025-08-28 16:01:36 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    select
        b1_0.category_id,
        b1_0.id,
        b1_0.about,
        b1_0.audio_file_url,
        b1_0.author,
        b1_0.available_copies,
        b1_0.book_cover_url,
        b1_0.created_at,
        b1_0.format,
        b1_0.isbn,
        b1_0.name,
        b1_0.pdf_file_url,
        b1_0.publication_year,
        b1_0.short_details,
        b1_0.total_copies,
        b1_0.updated_at 
    from
        books b1_0 
    where
        b1_0.category_id=?
2025-08-28 16:01:36 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    select
        r1_0.book_id,
        r1_0.id,
        r1_0.comment,
        r1_0.created_at,
        r1_0.rating,
        r1_0.updated_at,
        r1_0.user_id 
    from
        reviews r1_0 
    where
        r1_0.book_id=?
2025-08-28 16:01:36 [http-nio-8080-exec-3] WARN  o.s.d.w.c.SpringDataJacksonConfiguration$PageModule$WarningLoggingModifier - Serializing PageImpl instances as-is is not supported, meaning that there is no guarantee about the stability of the resulting JSON structure!
	For a stable JSON structure, please use Spring Data's PagedModel (globally via @EnableSpringDataWebSupport(pageSerializationMode = VIA_DTO))
	or Spring HATEOAS and Spring Data's PagedResourcesAssembler as documented in https://docs.spring.io/spring-data/commons/reference/repositories/core-extensions.html#core.web.pageables.

2025-08-28 16:01:36 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.address,
        u1_0.created_at,
        u1_0.date_of_birth,
        u1_0.email,
        u1_0.is_active,
        u1_0.name,
        u1_0.password_hash,
        u1_0.role,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.username=?
2025-08-28 16:01:36 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.created_at,
        c1_0.description,
        c1_0.name,
        c1_0.updated_at 
    from
        categories c1_0
2025-08-28 16:01:36 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    select
        b1_0.category_id,
        b1_0.id,
        b1_0.about,
        b1_0.audio_file_url,
        b1_0.author,
        b1_0.available_copies,
        b1_0.book_cover_url,
        b1_0.created_at,
        b1_0.format,
        b1_0.isbn,
        b1_0.name,
        b1_0.pdf_file_url,
        b1_0.publication_year,
        b1_0.short_details,
        b1_0.total_copies,
        b1_0.updated_at 
    from
        books b1_0 
    where
        b1_0.category_id=?
2025-08-28 16:01:36 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    select
        b1_0.category_id,
        b1_0.id,
        b1_0.about,
        b1_0.audio_file_url,
        b1_0.author,
        b1_0.available_copies,
        b1_0.book_cover_url,
        b1_0.created_at,
        b1_0.format,
        b1_0.isbn,
        b1_0.name,
        b1_0.pdf_file_url,
        b1_0.publication_year,
        b1_0.short_details,
        b1_0.total_copies,
        b1_0.updated_at 
    from
        books b1_0 
    where
        b1_0.category_id=?
2025-08-28 16:01:36 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    select
        b1_0.category_id,
        b1_0.id,
        b1_0.about,
        b1_0.audio_file_url,
        b1_0.author,
        b1_0.available_copies,
        b1_0.book_cover_url,
        b1_0.created_at,
        b1_0.format,
        b1_0.isbn,
        b1_0.name,
        b1_0.pdf_file_url,
        b1_0.publication_year,
        b1_0.short_details,
        b1_0.total_copies,
        b1_0.updated_at 
    from
        books b1_0 
    where
        b1_0.category_id=?
2025-08-28 16:01:36 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    select
        b1_0.category_id,
        b1_0.id,
        b1_0.about,
        b1_0.audio_file_url,
        b1_0.author,
        b1_0.available_copies,
        b1_0.book_cover_url,
        b1_0.created_at,
        b1_0.format,
        b1_0.isbn,
        b1_0.name,
        b1_0.pdf_file_url,
        b1_0.publication_year,
        b1_0.short_details,
        b1_0.total_copies,
        b1_0.updated_at 
    from
        books b1_0 
    where
        b1_0.category_id=?
2025-08-28 16:01:36 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    select
        b1_0.category_id,
        b1_0.id,
        b1_0.about,
        b1_0.audio_file_url,
        b1_0.author,
        b1_0.available_copies,
        b1_0.book_cover_url,
        b1_0.created_at,
        b1_0.format,
        b1_0.isbn,
        b1_0.name,
        b1_0.pdf_file_url,
        b1_0.publication_year,
        b1_0.short_details,
        b1_0.total_copies,
        b1_0.updated_at 
    from
        books b1_0 
    where
        b1_0.category_id=?
2025-08-28 16:01:36 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    select
        b1_0.category_id,
        b1_0.id,
        b1_0.about,
        b1_0.audio_file_url,
        b1_0.author,
        b1_0.available_copies,
        b1_0.book_cover_url,
        b1_0.created_at,
        b1_0.format,
        b1_0.isbn,
        b1_0.name,
        b1_0.pdf_file_url,
        b1_0.publication_year,
        b1_0.short_details,
        b1_0.total_copies,
        b1_0.updated_at 
    from
        books b1_0 
    where
        b1_0.category_id=?
2025-08-28 16:01:36 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.address,
        u1_0.created_at,
        u1_0.date_of_birth,
        u1_0.email,
        u1_0.is_active,
        u1_0.name,
        u1_0.password_hash,
        u1_0.role,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.username=?
2025-08-28 16:01:36 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    select
        b1_0.category_id,
        b1_0.id,
        b1_0.about,
        b1_0.audio_file_url,
        b1_0.author,
        b1_0.available_copies,
        b1_0.book_cover_url,
        b1_0.created_at,
        b1_0.format,
        b1_0.isbn,
        b1_0.name,
        b1_0.pdf_file_url,
        b1_0.publication_year,
        b1_0.short_details,
        b1_0.total_copies,
        b1_0.updated_at 
    from
        books b1_0 
    where
        b1_0.category_id=?
2025-08-28 16:01:36 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    select
        b1_0.id,
        b1_0.about,
        b1_0.audio_file_url,
        b1_0.author,
        b1_0.available_copies,
        b1_0.book_cover_url,
        b1_0.category_id,
        b1_0.created_at,
        b1_0.format,
        b1_0.isbn,
        b1_0.name,
        b1_0.pdf_file_url,
        b1_0.publication_year,
        b1_0.short_details,
        b1_0.total_copies,
        b1_0.updated_at 
    from
        books b1_0 
    left join
        categories c1_0 
            on c1_0.id=b1_0.category_id 
    where
        c1_0.id=? 
    fetch
        first ? rows only
2025-08-28 16:01:36 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.created_at,
        c1_0.description,
        c1_0.name,
        c1_0.updated_at 
    from
        categories c1_0 
    where
        c1_0.id=?
2025-08-28 16:01:36 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    select
        b1_0.category_id,
        b1_0.id,
        b1_0.about,
        b1_0.audio_file_url,
        b1_0.author,
        b1_0.available_copies,
        b1_0.book_cover_url,
        b1_0.created_at,
        b1_0.format,
        b1_0.isbn,
        b1_0.name,
        b1_0.pdf_file_url,
        b1_0.publication_year,
        b1_0.short_details,
        b1_0.total_copies,
        b1_0.updated_at 
    from
        books b1_0 
    where
        b1_0.category_id=?
2025-08-28 16:01:36 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    select
        r1_0.book_id,
        r1_0.id,
        r1_0.comment,
        r1_0.created_at,
        r1_0.rating,
        r1_0.updated_at,
        r1_0.user_id 
    from
        reviews r1_0 
    where
        r1_0.book_id=?
2025-08-28 16:01:47 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.address,
        u1_0.created_at,
        u1_0.date_of_birth,
        u1_0.email,
        u1_0.is_active,
        u1_0.name,
        u1_0.password_hash,
        u1_0.role,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.username=?
2025-08-28 16:01:47 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.address,
        u1_0.created_at,
        u1_0.date_of_birth,
        u1_0.email,
        u1_0.is_active,
        u1_0.name,
        u1_0.password_hash,
        u1_0.role,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.username=?
2025-08-28 16:01:48 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    select
        b1_0.id,
        b1_0.book_id,
        b1_0.borrow_date,
        b1_0.created_at,
        b1_0.due_date,
        b1_0.extension_count,
        b1_0.return_date,
        b1_0.status,
        b1_0.updated_at,
        b1_0.user_id 
    from
        borrows b1_0 
    where
        b1_0.return_date is null 
    fetch
        first ? rows only
2025-08-28 16:01:48 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.address,
        u1_0.created_at,
        u1_0.date_of_birth,
        u1_0.email,
        u1_0.is_active,
        u1_0.name,
        u1_0.password_hash,
        u1_0.role,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.id=?
2025-08-28 16:01:48 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    select
        b1_0.id,
        b1_0.about,
        b1_0.audio_file_url,
        b1_0.author,
        b1_0.available_copies,
        b1_0.book_cover_url,
        b1_0.category_id,
        b1_0.created_at,
        b1_0.format,
        b1_0.isbn,
        b1_0.name,
        b1_0.pdf_file_url,
        b1_0.publication_year,
        b1_0.short_details,
        b1_0.total_copies,
        b1_0.updated_at 
    from
        books b1_0 
    where
        b1_0.id=?
2025-08-28 16:01:48 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    select
        r1_0.book_id,
        r1_0.id,
        r1_0.comment,
        r1_0.created_at,
        r1_0.rating,
        r1_0.updated_at,
        r1_0.user_id 
    from
        reviews r1_0 
    where
        r1_0.book_id=?
2025-08-28 16:01:48 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.address,
        u1_0.created_at,
        u1_0.date_of_birth,
        u1_0.email,
        u1_0.is_active,
        u1_0.name,
        u1_0.password_hash,
        u1_0.role,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.id=?
2025-08-28 16:01:48 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    select
        b1_0.id,
        b1_0.about,
        b1_0.audio_file_url,
        b1_0.author,
        b1_0.available_copies,
        b1_0.book_cover_url,
        b1_0.category_id,
        b1_0.created_at,
        b1_0.format,
        b1_0.isbn,
        b1_0.name,
        b1_0.pdf_file_url,
        b1_0.publication_year,
        b1_0.short_details,
        b1_0.total_copies,
        b1_0.updated_at 
    from
        books b1_0 
    where
        b1_0.id=?
2025-08-28 16:01:48 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    select
        r1_0.book_id,
        r1_0.id,
        r1_0.comment,
        r1_0.created_at,
        r1_0.rating,
        r1_0.updated_at,
        r1_0.user_id 
    from
        reviews r1_0 
    where
        r1_0.book_id=?
2025-08-28 16:01:48 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.address,
        u1_0.created_at,
        u1_0.date_of_birth,
        u1_0.email,
        u1_0.is_active,
        u1_0.name,
        u1_0.password_hash,
        u1_0.role,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.id=?
2025-08-28 16:01:48 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    select
        b1_0.id,
        b1_0.about,
        b1_0.audio_file_url,
        b1_0.author,
        b1_0.available_copies,
        b1_0.book_cover_url,
        b1_0.category_id,
        b1_0.created_at,
        b1_0.format,
        b1_0.isbn,
        b1_0.name,
        b1_0.pdf_file_url,
        b1_0.publication_year,
        b1_0.short_details,
        b1_0.total_copies,
        b1_0.updated_at 
    from
        books b1_0 
    where
        b1_0.id=?
2025-08-28 16:01:48 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    select
        r1_0.book_id,
        r1_0.id,
        r1_0.comment,
        r1_0.created_at,
        r1_0.rating,
        r1_0.updated_at,
        r1_0.user_id 
    from
        reviews r1_0 
    where
        r1_0.book_id=?
2025-08-28 16:01:48 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    select
        b1_0.id,
        b1_0.about,
        b1_0.audio_file_url,
        b1_0.author,
        b1_0.available_copies,
        b1_0.book_cover_url,
        b1_0.category_id,
        b1_0.created_at,
        b1_0.format,
        b1_0.isbn,
        b1_0.name,
        b1_0.pdf_file_url,
        b1_0.publication_year,
        b1_0.short_details,
        b1_0.total_copies,
        b1_0.updated_at 
    from
        books b1_0 
    where
        b1_0.id=?
2025-08-28 16:01:48 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    select
        r1_0.book_id,
        r1_0.id,
        r1_0.comment,
        r1_0.created_at,
        r1_0.rating,
        r1_0.updated_at,
        r1_0.user_id 
    from
        reviews r1_0 
    where
        r1_0.book_id=?
2025-08-28 16:01:48 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL - 
    select
        count(*) 
    from
        borrows b1_0
2025-08-28 16:01:48 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL - 
    select
        count(b1_0.id) 
    from
        borrows b1_0 
    where
        b1_0.status=?
2025-08-28 16:01:48 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL - 
    select
        count(b1_0.id) 
    from
        borrows b1_0 
    where
        b1_0.status=?
2025-08-28 16:01:48 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.address,
        u1_0.created_at,
        u1_0.date_of_birth,
        u1_0.email,
        u1_0.is_active,
        u1_0.name,
        u1_0.password_hash,
        u1_0.role,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.username=?
2025-08-28 16:01:48 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    select
        b1_0.id,
        b1_0.book_id,
        b1_0.borrow_date,
        b1_0.created_at,
        b1_0.due_date,
        b1_0.extension_count,
        b1_0.return_date,
        b1_0.status,
        b1_0.updated_at,
        b1_0.user_id 
    from
        borrows b1_0 
    where
        b1_0.return_date is null 
    fetch
        first ? rows only
2025-08-28 16:01:48 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL - 
    select
        count(b1_0.id) 
    from
        borrows b1_0 
    where
        b1_0.status=?
2025-08-28 16:01:48 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.address,
        u1_0.created_at,
        u1_0.date_of_birth,
        u1_0.email,
        u1_0.is_active,
        u1_0.name,
        u1_0.password_hash,
        u1_0.role,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.id=?
2025-08-28 16:01:48 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    select
        b1_0.id,
        b1_0.about,
        b1_0.audio_file_url,
        b1_0.author,
        b1_0.available_copies,
        b1_0.book_cover_url,
        b1_0.category_id,
        b1_0.created_at,
        b1_0.format,
        b1_0.isbn,
        b1_0.name,
        b1_0.pdf_file_url,
        b1_0.publication_year,
        b1_0.short_details,
        b1_0.total_copies,
        b1_0.updated_at 
    from
        books b1_0 
    where
        b1_0.id=?
2025-08-28 16:01:48 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    select
        r1_0.book_id,
        r1_0.id,
        r1_0.comment,
        r1_0.created_at,
        r1_0.rating,
        r1_0.updated_at,
        r1_0.user_id 
    from
        reviews r1_0 
    where
        r1_0.book_id=?
2025-08-28 16:01:48 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.address,
        u1_0.created_at,
        u1_0.date_of_birth,
        u1_0.email,
        u1_0.is_active,
        u1_0.name,
        u1_0.password_hash,
        u1_0.role,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.id=?
2025-08-28 16:01:48 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    select
        b1_0.id,
        b1_0.about,
        b1_0.audio_file_url,
        b1_0.author,
        b1_0.available_copies,
        b1_0.book_cover_url,
        b1_0.category_id,
        b1_0.created_at,
        b1_0.format,
        b1_0.isbn,
        b1_0.name,
        b1_0.pdf_file_url,
        b1_0.publication_year,
        b1_0.short_details,
        b1_0.total_copies,
        b1_0.updated_at 
    from
        books b1_0 
    where
        b1_0.id=?
2025-08-28 16:01:48 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL - 
    select
        count(b1_0.id) 
    from
        borrows b1_0 
    where
        b1_0.status=?
2025-08-28 16:01:48 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL - 
    select
        count(b1_0.id) 
    from
        borrows b1_0 
    where
        b1_0.status=?
2025-08-28 16:01:48 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    select
        r1_0.book_id,
        r1_0.id,
        r1_0.comment,
        r1_0.created_at,
        r1_0.rating,
        r1_0.updated_at,
        r1_0.user_id 
    from
        reviews r1_0 
    where
        r1_0.book_id=?
2025-08-28 16:01:48 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.address,
        u1_0.created_at,
        u1_0.date_of_birth,
        u1_0.email,
        u1_0.is_active,
        u1_0.name,
        u1_0.password_hash,
        u1_0.role,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.id=?
2025-08-28 16:01:48 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    select
        b1_0.id,
        b1_0.about,
        b1_0.audio_file_url,
        b1_0.author,
        b1_0.available_copies,
        b1_0.book_cover_url,
        b1_0.category_id,
        b1_0.created_at,
        b1_0.format,
        b1_0.isbn,
        b1_0.name,
        b1_0.pdf_file_url,
        b1_0.publication_year,
        b1_0.short_details,
        b1_0.total_copies,
        b1_0.updated_at 
    from
        books b1_0 
    where
        b1_0.id=?
2025-08-28 16:01:48 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    select
        r1_0.book_id,
        r1_0.id,
        r1_0.comment,
        r1_0.created_at,
        r1_0.rating,
        r1_0.updated_at,
        r1_0.user_id 
    from
        reviews r1_0 
    where
        r1_0.book_id=?
2025-08-28 16:01:48 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    select
        b1_0.id,
        b1_0.about,
        b1_0.audio_file_url,
        b1_0.author,
        b1_0.available_copies,
        b1_0.book_cover_url,
        b1_0.category_id,
        b1_0.created_at,
        b1_0.format,
        b1_0.isbn,
        b1_0.name,
        b1_0.pdf_file_url,
        b1_0.publication_year,
        b1_0.short_details,
        b1_0.total_copies,
        b1_0.updated_at 
    from
        books b1_0 
    where
        b1_0.id=?
2025-08-28 16:01:48 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    select
        r1_0.book_id,
        r1_0.id,
        r1_0.comment,
        r1_0.created_at,
        r1_0.rating,
        r1_0.updated_at,
        r1_0.user_id 
    from
        reviews r1_0 
    where
        r1_0.book_id=?
2025-08-28 16:01:48 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.address,
        u1_0.created_at,
        u1_0.date_of_birth,
        u1_0.email,
        u1_0.is_active,
        u1_0.name,
        u1_0.password_hash,
        u1_0.role,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.username=?
2025-08-28 16:01:48 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    select
        count(*) 
    from
        borrows b1_0
2025-08-28 16:01:48 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    select
        count(b1_0.id) 
    from
        borrows b1_0 
    where
        b1_0.status=?
2025-08-28 16:01:48 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    select
        count(b1_0.id) 
    from
        borrows b1_0 
    where
        b1_0.status=?
2025-08-28 16:01:48 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    select
        count(b1_0.id) 
    from
        borrows b1_0 
    where
        b1_0.status=?
2025-08-28 16:01:48 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    select
        count(b1_0.id) 
    from
        borrows b1_0 
    where
        b1_0.status=?
2025-08-28 16:01:48 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    select
        count(b1_0.id) 
    from
        borrows b1_0 
    where
        b1_0.status=?
2025-08-28 16:02:16 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.address,
        u1_0.created_at,
        u1_0.date_of_birth,
        u1_0.email,
        u1_0.is_active,
        u1_0.name,
        u1_0.password_hash,
        u1_0.role,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.username=?
2025-08-28 16:02:16 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.address,
        u1_0.created_at,
        u1_0.date_of_birth,
        u1_0.email,
        u1_0.is_active,
        u1_0.name,
        u1_0.password_hash,
        u1_0.role,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.id=?
2025-08-28 16:02:16 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    select
        dr1_0.id,
        dr1_0.admin_notes,
        dr1_0.author,
        dr1_0.book_title,
        dr1_0.created_at,
        dr1_0.description,
        dr1_0.isbn,
        dr1_0.status,
        dr1_0.updated_at,
        dr1_0.user_id 
    from
        donation_requests dr1_0 
    left join
        users u1_0 
            on u1_0.id=dr1_0.user_id 
    where
        u1_0.id=?
2025-08-28 16:02:16 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.address,
        u1_0.created_at,
        u1_0.date_of_birth,
        u1_0.email,
        u1_0.is_active,
        u1_0.name,
        u1_0.password_hash,
        u1_0.role,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.username=?
2025-08-28 16:02:16 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.address,
        u1_0.created_at,
        u1_0.date_of_birth,
        u1_0.email,
        u1_0.is_active,
        u1_0.name,
        u1_0.password_hash,
        u1_0.role,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.id=?
2025-08-28 16:02:16 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    select
        dr1_0.id,
        dr1_0.admin_notes,
        dr1_0.author,
        dr1_0.book_title,
        dr1_0.created_at,
        dr1_0.description,
        dr1_0.isbn,
        dr1_0.status,
        dr1_0.updated_at,
        dr1_0.user_id 
    from
        donation_requests dr1_0 
    left join
        users u1_0 
            on u1_0.id=dr1_0.user_id 
    where
        u1_0.id=?
2025-08-28 16:02:22 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.address,
        u1_0.created_at,
        u1_0.date_of_birth,
        u1_0.email,
        u1_0.is_active,
        u1_0.name,
        u1_0.password_hash,
        u1_0.role,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.username=?
2025-08-28 16:02:22 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.address,
        u1_0.created_at,
        u1_0.date_of_birth,
        u1_0.email,
        u1_0.is_active,
        u1_0.name,
        u1_0.password_hash,
        u1_0.role,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.id=?
2025-08-28 16:02:22 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    insert 
    into
        donation_requests
        (admin_notes, author, book_title, created_at, description, isbn, status, updated_at, user_id, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, ?, default)
2025-08-28 16:02:22 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        b1_0.user_id,
        b1_0.id,
        b1_0.book_id,
        b1_0.borrow_date,
        b1_0.created_at,
        b1_0.due_date,
        b1_0.extension_count,
        b1_0.return_date,
        b1_0.status,
        b1_0.updated_at 
    from
        borrows b1_0 
    where
        b1_0.user_id=?
2025-08-28 16:02:22 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.address,
        u1_0.created_at,
        u1_0.date_of_birth,
        u1_0.email,
        u1_0.is_active,
        u1_0.name,
        u1_0.password_hash,
        u1_0.role,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.username=?
2025-08-28 16:02:22 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.address,
        u1_0.created_at,
        u1_0.date_of_birth,
        u1_0.email,
        u1_0.is_active,
        u1_0.name,
        u1_0.password_hash,
        u1_0.role,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.id=?
2025-08-28 16:02:22 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    select
        dr1_0.id,
        dr1_0.admin_notes,
        dr1_0.author,
        dr1_0.book_title,
        dr1_0.created_at,
        dr1_0.description,
        dr1_0.isbn,
        dr1_0.status,
        dr1_0.updated_at,
        dr1_0.user_id 
    from
        donation_requests dr1_0 
    left join
        users u1_0 
            on u1_0.id=dr1_0.user_id 
    where
        u1_0.id=?
2025-08-28 16:02:22 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    select
        b1_0.user_id,
        b1_0.id,
        b1_0.book_id,
        b1_0.borrow_date,
        b1_0.created_at,
        b1_0.due_date,
        b1_0.extension_count,
        b1_0.return_date,
        b1_0.status,
        b1_0.updated_at 
    from
        borrows b1_0 
    where
        b1_0.user_id=?
2025-08-28 16:11:08 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.address,
        u1_0.created_at,
        u1_0.date_of_birth,
        u1_0.email,
        u1_0.is_active,
        u1_0.name,
        u1_0.password_hash,
        u1_0.role,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.username=?
2025-08-28 16:11:08 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    select
        count(*) 
    from
        borrows b1_0
2025-08-28 16:11:08 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    select
        count(b1_0.id) 
    from
        borrows b1_0 
    where
        b1_0.status=?
2025-08-28 16:11:08 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    select
        count(b1_0.id) 
    from
        borrows b1_0 
    where
        b1_0.status=?
2025-08-28 16:11:08 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    select
        count(b1_0.id) 
    from
        borrows b1_0 
    where
        b1_0.status=?
2025-08-28 16:11:08 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    select
        count(b1_0.id) 
    from
        borrows b1_0 
    where
        b1_0.status=?
2025-08-28 16:11:08 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    select
        count(b1_0.id) 
    from
        borrows b1_0 
    where
        b1_0.status=?
2025-08-28 16:11:08 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.address,
        u1_0.created_at,
        u1_0.date_of_birth,
        u1_0.email,
        u1_0.is_active,
        u1_0.name,
        u1_0.password_hash,
        u1_0.role,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.username=?
2025-08-28 16:11:08 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.address,
        u1_0.created_at,
        u1_0.date_of_birth,
        u1_0.email,
        u1_0.is_active,
        u1_0.name,
        u1_0.password_hash,
        u1_0.role,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.username=?
2025-08-28 16:11:08 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    select
        count(*) 
    from
        borrows b1_0
2025-08-28 16:11:08 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    select
        count(b1_0.id) 
    from
        borrows b1_0 
    where
        b1_0.status=?
2025-08-28 16:11:08 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    select
        b1_0.id,
        b1_0.book_id,
        b1_0.borrow_date,
        b1_0.created_at,
        b1_0.due_date,
        b1_0.extension_count,
        b1_0.return_date,
        b1_0.status,
        b1_0.updated_at,
        b1_0.user_id 
    from
        borrows b1_0 
    where
        b1_0.return_date is null 
    fetch
        first ? rows only
2025-08-28 16:11:08 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.address,
        u1_0.created_at,
        u1_0.date_of_birth,
        u1_0.email,
        u1_0.is_active,
        u1_0.name,
        u1_0.password_hash,
        u1_0.role,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.id=?
2025-08-28 16:11:08 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    select
        b1_0.id,
        b1_0.about,
        b1_0.audio_file_url,
        b1_0.author,
        b1_0.available_copies,
        b1_0.book_cover_url,
        b1_0.category_id,
        b1_0.created_at,
        b1_0.format,
        b1_0.isbn,
        b1_0.name,
        b1_0.pdf_file_url,
        b1_0.publication_year,
        b1_0.short_details,
        b1_0.total_copies,
        b1_0.updated_at 
    from
        books b1_0 
    where
        b1_0.id=?
2025-08-28 16:11:08 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    select
        r1_0.book_id,
        r1_0.id,
        r1_0.comment,
        r1_0.created_at,
        r1_0.rating,
        r1_0.updated_at,
        r1_0.user_id 
    from
        reviews r1_0 
    where
        r1_0.book_id=?
2025-08-28 16:11:08 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    select
        count(b1_0.id) 
    from
        borrows b1_0 
    where
        b1_0.status=?
2025-08-28 16:11:08 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.address,
        u1_0.created_at,
        u1_0.date_of_birth,
        u1_0.email,
        u1_0.is_active,
        u1_0.name,
        u1_0.password_hash,
        u1_0.role,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.id=?
2025-08-28 16:11:08 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    select
        count(b1_0.id) 
    from
        borrows b1_0 
    where
        b1_0.status=?
2025-08-28 16:11:08 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    select
        b1_0.id,
        b1_0.about,
        b1_0.audio_file_url,
        b1_0.author,
        b1_0.available_copies,
        b1_0.book_cover_url,
        b1_0.category_id,
        b1_0.created_at,
        b1_0.format,
        b1_0.isbn,
        b1_0.name,
        b1_0.pdf_file_url,
        b1_0.publication_year,
        b1_0.short_details,
        b1_0.total_copies,
        b1_0.updated_at 
    from
        books b1_0 
    where
        b1_0.id=?
2025-08-28 16:11:08 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    select
        r1_0.book_id,
        r1_0.id,
        r1_0.comment,
        r1_0.created_at,
        r1_0.rating,
        r1_0.updated_at,
        r1_0.user_id 
    from
        reviews r1_0 
    where
        r1_0.book_id=?
2025-08-28 16:11:08 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.address,
        u1_0.created_at,
        u1_0.date_of_birth,
        u1_0.email,
        u1_0.is_active,
        u1_0.name,
        u1_0.password_hash,
        u1_0.role,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.id=?
2025-08-28 16:11:08 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    select
        count(b1_0.id) 
    from
        borrows b1_0 
    where
        b1_0.status=?
2025-08-28 16:11:08 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    select
        count(b1_0.id) 
    from
        borrows b1_0 
    where
        b1_0.status=?
2025-08-28 16:11:08 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    select
        b1_0.id,
        b1_0.about,
        b1_0.audio_file_url,
        b1_0.author,
        b1_0.available_copies,
        b1_0.book_cover_url,
        b1_0.category_id,
        b1_0.created_at,
        b1_0.format,
        b1_0.isbn,
        b1_0.name,
        b1_0.pdf_file_url,
        b1_0.publication_year,
        b1_0.short_details,
        b1_0.total_copies,
        b1_0.updated_at 
    from
        books b1_0 
    where
        b1_0.id=?
2025-08-28 16:11:08 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    select
        r1_0.book_id,
        r1_0.id,
        r1_0.comment,
        r1_0.created_at,
        r1_0.rating,
        r1_0.updated_at,
        r1_0.user_id 
    from
        reviews r1_0 
    where
        r1_0.book_id=?
2025-08-28 16:11:08 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    select
        b1_0.id,
        b1_0.about,
        b1_0.audio_file_url,
        b1_0.author,
        b1_0.available_copies,
        b1_0.book_cover_url,
        b1_0.category_id,
        b1_0.created_at,
        b1_0.format,
        b1_0.isbn,
        b1_0.name,
        b1_0.pdf_file_url,
        b1_0.publication_year,
        b1_0.short_details,
        b1_0.total_copies,
        b1_0.updated_at 
    from
        books b1_0 
    where
        b1_0.id=?
2025-08-28 16:11:08 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    select
        r1_0.book_id,
        r1_0.id,
        r1_0.comment,
        r1_0.created_at,
        r1_0.rating,
        r1_0.updated_at,
        r1_0.user_id 
    from
        reviews r1_0 
    where
        r1_0.book_id=?
2025-08-28 16:11:09 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.address,
        u1_0.created_at,
        u1_0.date_of_birth,
        u1_0.email,
        u1_0.is_active,
        u1_0.name,
        u1_0.password_hash,
        u1_0.role,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.username=?
2025-08-28 16:11:09 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.address,
        u1_0.created_at,
        u1_0.date_of_birth,
        u1_0.email,
        u1_0.is_active,
        u1_0.name,
        u1_0.password_hash,
        u1_0.role,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.username=?
2025-08-28 16:11:09 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    select
        count(*) 
    from
        borrows b1_0
2025-08-28 16:11:09 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        b1_0.id,
        b1_0.book_id,
        b1_0.borrow_date,
        b1_0.created_at,
        b1_0.due_date,
        b1_0.extension_count,
        b1_0.return_date,
        b1_0.status,
        b1_0.updated_at,
        b1_0.user_id 
    from
        borrows b1_0 
    where
        b1_0.return_date is null 
    fetch
        first ? rows only
2025-08-28 16:11:09 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    select
        count(b1_0.id) 
    from
        borrows b1_0 
    where
        b1_0.status=?
2025-08-28 16:11:09 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.address,
        u1_0.created_at,
        u1_0.date_of_birth,
        u1_0.email,
        u1_0.is_active,
        u1_0.name,
        u1_0.password_hash,
        u1_0.role,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.id=?
2025-08-28 16:11:09 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    select
        count(b1_0.id) 
    from
        borrows b1_0 
    where
        b1_0.status=?
2025-08-28 16:11:09 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        b1_0.id,
        b1_0.about,
        b1_0.audio_file_url,
        b1_0.author,
        b1_0.available_copies,
        b1_0.book_cover_url,
        b1_0.category_id,
        b1_0.created_at,
        b1_0.format,
        b1_0.isbn,
        b1_0.name,
        b1_0.pdf_file_url,
        b1_0.publication_year,
        b1_0.short_details,
        b1_0.total_copies,
        b1_0.updated_at 
    from
        books b1_0 
    where
        b1_0.id=?
2025-08-28 16:11:09 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        r1_0.book_id,
        r1_0.id,
        r1_0.comment,
        r1_0.created_at,
        r1_0.rating,
        r1_0.updated_at,
        r1_0.user_id 
    from
        reviews r1_0 
    where
        r1_0.book_id=?
2025-08-28 16:11:09 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    select
        count(b1_0.id) 
    from
        borrows b1_0 
    where
        b1_0.status=?
2025-08-28 16:11:09 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.address,
        u1_0.created_at,
        u1_0.date_of_birth,
        u1_0.email,
        u1_0.is_active,
        u1_0.name,
        u1_0.password_hash,
        u1_0.role,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.id=?
2025-08-28 16:11:09 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        b1_0.id,
        b1_0.about,
        b1_0.audio_file_url,
        b1_0.author,
        b1_0.available_copies,
        b1_0.book_cover_url,
        b1_0.category_id,
        b1_0.created_at,
        b1_0.format,
        b1_0.isbn,
        b1_0.name,
        b1_0.pdf_file_url,
        b1_0.publication_year,
        b1_0.short_details,
        b1_0.total_copies,
        b1_0.updated_at 
    from
        books b1_0 
    where
        b1_0.id=?
2025-08-28 16:11:09 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        r1_0.book_id,
        r1_0.id,
        r1_0.comment,
        r1_0.created_at,
        r1_0.rating,
        r1_0.updated_at,
        r1_0.user_id 
    from
        reviews r1_0 
    where
        r1_0.book_id=?
2025-08-28 16:11:09 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    select
        count(b1_0.id) 
    from
        borrows b1_0 
    where
        b1_0.status=?
2025-08-28 16:11:09 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.address,
        u1_0.created_at,
        u1_0.date_of_birth,
        u1_0.email,
        u1_0.is_active,
        u1_0.name,
        u1_0.password_hash,
        u1_0.role,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.id=?
2025-08-28 16:11:09 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    select
        count(b1_0.id) 
    from
        borrows b1_0 
    where
        b1_0.status=?
2025-08-28 16:11:09 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        b1_0.id,
        b1_0.about,
        b1_0.audio_file_url,
        b1_0.author,
        b1_0.available_copies,
        b1_0.book_cover_url,
        b1_0.category_id,
        b1_0.created_at,
        b1_0.format,
        b1_0.isbn,
        b1_0.name,
        b1_0.pdf_file_url,
        b1_0.publication_year,
        b1_0.short_details,
        b1_0.total_copies,
        b1_0.updated_at 
    from
        books b1_0 
    where
        b1_0.id=?
2025-08-28 16:11:09 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        r1_0.book_id,
        r1_0.id,
        r1_0.comment,
        r1_0.created_at,
        r1_0.rating,
        r1_0.updated_at,
        r1_0.user_id 
    from
        reviews r1_0 
    where
        r1_0.book_id=?
2025-08-28 16:11:09 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.address,
        u1_0.created_at,
        u1_0.date_of_birth,
        u1_0.email,
        u1_0.is_active,
        u1_0.name,
        u1_0.password_hash,
        u1_0.role,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.username=?
2025-08-28 16:11:09 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        b1_0.id,
        b1_0.about,
        b1_0.audio_file_url,
        b1_0.author,
        b1_0.available_copies,
        b1_0.book_cover_url,
        b1_0.category_id,
        b1_0.created_at,
        b1_0.format,
        b1_0.isbn,
        b1_0.name,
        b1_0.pdf_file_url,
        b1_0.publication_year,
        b1_0.short_details,
        b1_0.total_copies,
        b1_0.updated_at 
    from
        books b1_0 
    where
        b1_0.id=?
2025-08-28 16:11:09 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    select
        count(*) 
    from
        borrows b1_0
2025-08-28 16:11:09 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        r1_0.book_id,
        r1_0.id,
        r1_0.comment,
        r1_0.created_at,
        r1_0.rating,
        r1_0.updated_at,
        r1_0.user_id 
    from
        reviews r1_0 
    where
        r1_0.book_id=?
2025-08-28 16:11:09 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    select
        count(b1_0.id) 
    from
        borrows b1_0 
    where
        b1_0.status=?
2025-08-28 16:11:09 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    select
        count(b1_0.id) 
    from
        borrows b1_0 
    where
        b1_0.status=?
2025-08-28 16:11:09 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    select
        count(b1_0.id) 
    from
        borrows b1_0 
    where
        b1_0.status=?
2025-08-28 16:11:09 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.address,
        u1_0.created_at,
        u1_0.date_of_birth,
        u1_0.email,
        u1_0.is_active,
        u1_0.name,
        u1_0.password_hash,
        u1_0.role,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.username=?
2025-08-28 16:11:09 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    select
        count(b1_0.id) 
    from
        borrows b1_0 
    where
        b1_0.status=?
2025-08-28 16:11:09 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    select
        b1_0.id,
        b1_0.book_id,
        b1_0.borrow_date,
        b1_0.created_at,
        b1_0.due_date,
        b1_0.extension_count,
        b1_0.return_date,
        b1_0.status,
        b1_0.updated_at,
        b1_0.user_id 
    from
        borrows b1_0 
    where
        b1_0.return_date is null 
    fetch
        first ? rows only
2025-08-28 16:11:09 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.address,
        u1_0.created_at,
        u1_0.date_of_birth,
        u1_0.email,
        u1_0.is_active,
        u1_0.name,
        u1_0.password_hash,
        u1_0.role,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.id=?
2025-08-28 16:11:09 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    select
        b1_0.id,
        b1_0.about,
        b1_0.audio_file_url,
        b1_0.author,
        b1_0.available_copies,
        b1_0.book_cover_url,
        b1_0.category_id,
        b1_0.created_at,
        b1_0.format,
        b1_0.isbn,
        b1_0.name,
        b1_0.pdf_file_url,
        b1_0.publication_year,
        b1_0.short_details,
        b1_0.total_copies,
        b1_0.updated_at 
    from
        books b1_0 
    where
        b1_0.id=?
2025-08-28 16:11:09 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    select
        r1_0.book_id,
        r1_0.id,
        r1_0.comment,
        r1_0.created_at,
        r1_0.rating,
        r1_0.updated_at,
        r1_0.user_id 
    from
        reviews r1_0 
    where
        r1_0.book_id=?
2025-08-28 16:11:09 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    select
        count(b1_0.id) 
    from
        borrows b1_0 
    where
        b1_0.status=?
2025-08-28 16:11:09 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.address,
        u1_0.created_at,
        u1_0.date_of_birth,
        u1_0.email,
        u1_0.is_active,
        u1_0.name,
        u1_0.password_hash,
        u1_0.role,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.id=?
2025-08-28 16:11:09 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    select
        b1_0.id,
        b1_0.about,
        b1_0.audio_file_url,
        b1_0.author,
        b1_0.available_copies,
        b1_0.book_cover_url,
        b1_0.category_id,
        b1_0.created_at,
        b1_0.format,
        b1_0.isbn,
        b1_0.name,
        b1_0.pdf_file_url,
        b1_0.publication_year,
        b1_0.short_details,
        b1_0.total_copies,
        b1_0.updated_at 
    from
        books b1_0 
    where
        b1_0.id=?
2025-08-28 16:11:09 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    select
        r1_0.book_id,
        r1_0.id,
        r1_0.comment,
        r1_0.created_at,
        r1_0.rating,
        r1_0.updated_at,
        r1_0.user_id 
    from
        reviews r1_0 
    where
        r1_0.book_id=?
2025-08-28 16:11:09 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.address,
        u1_0.created_at,
        u1_0.date_of_birth,
        u1_0.email,
        u1_0.is_active,
        u1_0.name,
        u1_0.password_hash,
        u1_0.role,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.id=?
2025-08-28 16:11:09 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    select
        b1_0.id,
        b1_0.about,
        b1_0.audio_file_url,
        b1_0.author,
        b1_0.available_copies,
        b1_0.book_cover_url,
        b1_0.category_id,
        b1_0.created_at,
        b1_0.format,
        b1_0.isbn,
        b1_0.name,
        b1_0.pdf_file_url,
        b1_0.publication_year,
        b1_0.short_details,
        b1_0.total_copies,
        b1_0.updated_at 
    from
        books b1_0 
    where
        b1_0.id=?
2025-08-28 16:11:09 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    select
        r1_0.book_id,
        r1_0.id,
        r1_0.comment,
        r1_0.created_at,
        r1_0.rating,
        r1_0.updated_at,
        r1_0.user_id 
    from
        reviews r1_0 
    where
        r1_0.book_id=?
2025-08-28 16:11:09 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    select
        b1_0.id,
        b1_0.about,
        b1_0.audio_file_url,
        b1_0.author,
        b1_0.available_copies,
        b1_0.book_cover_url,
        b1_0.category_id,
        b1_0.created_at,
        b1_0.format,
        b1_0.isbn,
        b1_0.name,
        b1_0.pdf_file_url,
        b1_0.publication_year,
        b1_0.short_details,
        b1_0.total_copies,
        b1_0.updated_at 
    from
        books b1_0 
    where
        b1_0.id=?
2025-08-28 16:11:09 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    select
        r1_0.book_id,
        r1_0.id,
        r1_0.comment,
        r1_0.created_at,
        r1_0.rating,
        r1_0.updated_at,
        r1_0.user_id 
    from
        reviews r1_0 
    where
        r1_0.book_id=?
2025-08-28 16:11:36 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.address,
        u1_0.created_at,
        u1_0.date_of_birth,
        u1_0.email,
        u1_0.is_active,
        u1_0.name,
        u1_0.password_hash,
        u1_0.role,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.username=?
2025-08-28 16:11:37 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.address,
        u1_0.created_at,
        u1_0.date_of_birth,
        u1_0.email,
        u1_0.is_active,
        u1_0.name,
        u1_0.password_hash,
        u1_0.role,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.username=?
2025-08-28 16:11:56 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.address,
        u1_0.created_at,
        u1_0.date_of_birth,
        u1_0.email,
        u1_0.is_active,
        u1_0.name,
        u1_0.password_hash,
        u1_0.role,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.username=?
2025-08-28 16:11:56 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.address,
        u1_0.created_at,
        u1_0.date_of_birth,
        u1_0.email,
        u1_0.is_active,
        u1_0.name,
        u1_0.password_hash,
        u1_0.role,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.username=?
2025-08-28 16:11:56 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    select
        b1_0.id,
        b1_0.book_id,
        b1_0.borrow_date,
        b1_0.created_at,
        b1_0.due_date,
        b1_0.extension_count,
        b1_0.return_date,
        b1_0.status,
        b1_0.updated_at,
        b1_0.user_id 
    from
        borrows b1_0 
    offset
        ? rows 
    fetch
        first ? rows only
2025-08-28 16:11:56 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL - 
    select
        b1_0.id,
        b1_0.book_id,
        b1_0.borrow_date,
        b1_0.created_at,
        b1_0.due_date,
        b1_0.extension_count,
        b1_0.return_date,
        b1_0.status,
        b1_0.updated_at,
        b1_0.user_id 
    from
        borrows b1_0 
    offset
        ? rows 
    fetch
        first ? rows only
2025-08-28 16:11:56 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.address,
        u1_0.created_at,
        u1_0.date_of_birth,
        u1_0.email,
        u1_0.is_active,
        u1_0.name,
        u1_0.password_hash,
        u1_0.role,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.id=?
2025-08-28 16:11:56 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL - 
    select
        b1_0.id,
        b1_0.about,
        b1_0.audio_file_url,
        b1_0.author,
        b1_0.available_copies,
        b1_0.book_cover_url,
        b1_0.category_id,
        b1_0.created_at,
        b1_0.format,
        b1_0.isbn,
        b1_0.name,
        b1_0.pdf_file_url,
        b1_0.publication_year,
        b1_0.short_details,
        b1_0.total_copies,
        b1_0.updated_at 
    from
        books b1_0 
    where
        b1_0.id=?
2025-08-28 16:11:56 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.address,
        u1_0.created_at,
        u1_0.date_of_birth,
        u1_0.email,
        u1_0.is_active,
        u1_0.name,
        u1_0.password_hash,
        u1_0.role,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.id=?
2025-08-28 16:11:56 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    select
        b1_0.id,
        b1_0.about,
        b1_0.audio_file_url,
        b1_0.author,
        b1_0.available_copies,
        b1_0.book_cover_url,
        b1_0.category_id,
        b1_0.created_at,
        b1_0.format,
        b1_0.isbn,
        b1_0.name,
        b1_0.pdf_file_url,
        b1_0.publication_year,
        b1_0.short_details,
        b1_0.total_copies,
        b1_0.updated_at 
    from
        books b1_0 
    where
        b1_0.id=?
2025-08-28 16:11:56 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL - 
    select
        r1_0.book_id,
        r1_0.id,
        r1_0.comment,
        r1_0.created_at,
        r1_0.rating,
        r1_0.updated_at,
        r1_0.user_id 
    from
        reviews r1_0 
    where
        r1_0.book_id=?
2025-08-28 16:11:56 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.address,
        u1_0.created_at,
        u1_0.date_of_birth,
        u1_0.email,
        u1_0.is_active,
        u1_0.name,
        u1_0.password_hash,
        u1_0.role,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.id=?
2025-08-28 16:11:56 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    select
        r1_0.book_id,
        r1_0.id,
        r1_0.comment,
        r1_0.created_at,
        r1_0.rating,
        r1_0.updated_at,
        r1_0.user_id 
    from
        reviews r1_0 
    where
        r1_0.book_id=?
2025-08-28 16:11:56 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.address,
        u1_0.created_at,
        u1_0.date_of_birth,
        u1_0.email,
        u1_0.is_active,
        u1_0.name,
        u1_0.password_hash,
        u1_0.role,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.id=?
2025-08-28 16:11:56 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL - 
    select
        b1_0.id,
        b1_0.about,
        b1_0.audio_file_url,
        b1_0.author,
        b1_0.available_copies,
        b1_0.book_cover_url,
        b1_0.category_id,
        b1_0.created_at,
        b1_0.format,
        b1_0.isbn,
        b1_0.name,
        b1_0.pdf_file_url,
        b1_0.publication_year,
        b1_0.short_details,
        b1_0.total_copies,
        b1_0.updated_at 
    from
        books b1_0 
    where
        b1_0.id=?
2025-08-28 16:11:56 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    select
        b1_0.id,
        b1_0.about,
        b1_0.audio_file_url,
        b1_0.author,
        b1_0.available_copies,
        b1_0.book_cover_url,
        b1_0.category_id,
        b1_0.created_at,
        b1_0.format,
        b1_0.isbn,
        b1_0.name,
        b1_0.pdf_file_url,
        b1_0.publication_year,
        b1_0.short_details,
        b1_0.total_copies,
        b1_0.updated_at 
    from
        books b1_0 
    where
        b1_0.id=?
2025-08-28 16:11:56 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL - 
    select
        r1_0.book_id,
        r1_0.id,
        r1_0.comment,
        r1_0.created_at,
        r1_0.rating,
        r1_0.updated_at,
        r1_0.user_id 
    from
        reviews r1_0 
    where
        r1_0.book_id=?
2025-08-28 16:11:56 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.address,
        u1_0.created_at,
        u1_0.date_of_birth,
        u1_0.email,
        u1_0.is_active,
        u1_0.name,
        u1_0.password_hash,
        u1_0.role,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.id=?
2025-08-28 16:11:56 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    select
        r1_0.book_id,
        r1_0.id,
        r1_0.comment,
        r1_0.created_at,
        r1_0.rating,
        r1_0.updated_at,
        r1_0.user_id 
    from
        reviews r1_0 
    where
        r1_0.book_id=?
2025-08-28 16:11:56 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL - 
    select
        b1_0.id,
        b1_0.about,
        b1_0.audio_file_url,
        b1_0.author,
        b1_0.available_copies,
        b1_0.book_cover_url,
        b1_0.category_id,
        b1_0.created_at,
        b1_0.format,
        b1_0.isbn,
        b1_0.name,
        b1_0.pdf_file_url,
        b1_0.publication_year,
        b1_0.short_details,
        b1_0.total_copies,
        b1_0.updated_at 
    from
        books b1_0 
    where
        b1_0.id=?
2025-08-28 16:11:56 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.address,
        u1_0.created_at,
        u1_0.date_of_birth,
        u1_0.email,
        u1_0.is_active,
        u1_0.name,
        u1_0.password_hash,
        u1_0.role,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.id=?
2025-08-28 16:11:56 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL - 
    select
        r1_0.book_id,
        r1_0.id,
        r1_0.comment,
        r1_0.created_at,
        r1_0.rating,
        r1_0.updated_at,
        r1_0.user_id 
    from
        reviews r1_0 
    where
        r1_0.book_id=?
2025-08-28 16:11:56 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    select
        b1_0.id,
        b1_0.about,
        b1_0.audio_file_url,
        b1_0.author,
        b1_0.available_copies,
        b1_0.book_cover_url,
        b1_0.category_id,
        b1_0.created_at,
        b1_0.format,
        b1_0.isbn,
        b1_0.name,
        b1_0.pdf_file_url,
        b1_0.publication_year,
        b1_0.short_details,
        b1_0.total_copies,
        b1_0.updated_at 
    from
        books b1_0 
    where
        b1_0.id=?
2025-08-28 16:11:56 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL - 
    select
        b1_0.id,
        b1_0.about,
        b1_0.audio_file_url,
        b1_0.author,
        b1_0.available_copies,
        b1_0.book_cover_url,
        b1_0.category_id,
        b1_0.created_at,
        b1_0.format,
        b1_0.isbn,
        b1_0.name,
        b1_0.pdf_file_url,
        b1_0.publication_year,
        b1_0.short_details,
        b1_0.total_copies,
        b1_0.updated_at 
    from
        books b1_0 
    where
        b1_0.id=?
2025-08-28 16:11:56 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    select
        r1_0.book_id,
        r1_0.id,
        r1_0.comment,
        r1_0.created_at,
        r1_0.rating,
        r1_0.updated_at,
        r1_0.user_id 
    from
        reviews r1_0 
    where
        r1_0.book_id=?
2025-08-28 16:11:56 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    select
        b1_0.id,
        b1_0.about,
        b1_0.audio_file_url,
        b1_0.author,
        b1_0.available_copies,
        b1_0.book_cover_url,
        b1_0.category_id,
        b1_0.created_at,
        b1_0.format,
        b1_0.isbn,
        b1_0.name,
        b1_0.pdf_file_url,
        b1_0.publication_year,
        b1_0.short_details,
        b1_0.total_copies,
        b1_0.updated_at 
    from
        books b1_0 
    where
        b1_0.id=?
2025-08-28 16:11:56 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL - 
    select
        r1_0.book_id,
        r1_0.id,
        r1_0.comment,
        r1_0.created_at,
        r1_0.rating,
        r1_0.updated_at,
        r1_0.user_id 
    from
        reviews r1_0 
    where
        r1_0.book_id=?
2025-08-28 16:11:56 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL - 
    select
        b1_0.id,
        b1_0.about,
        b1_0.audio_file_url,
        b1_0.author,
        b1_0.available_copies,
        b1_0.book_cover_url,
        b1_0.category_id,
        b1_0.created_at,
        b1_0.format,
        b1_0.isbn,
        b1_0.name,
        b1_0.pdf_file_url,
        b1_0.publication_year,
        b1_0.short_details,
        b1_0.total_copies,
        b1_0.updated_at 
    from
        books b1_0 
    where
        b1_0.id=?
2025-08-28 16:11:56 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    select
        r1_0.book_id,
        r1_0.id,
        r1_0.comment,
        r1_0.created_at,
        r1_0.rating,
        r1_0.updated_at,
        r1_0.user_id 
    from
        reviews r1_0 
    where
        r1_0.book_id=?
2025-08-28 16:11:56 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL - 
    select
        r1_0.book_id,
        r1_0.id,
        r1_0.comment,
        r1_0.created_at,
        r1_0.rating,
        r1_0.updated_at,
        r1_0.user_id 
    from
        reviews r1_0 
    where
        r1_0.book_id=?
2025-08-28 16:11:56 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    select
        b1_0.id,
        b1_0.about,
        b1_0.audio_file_url,
        b1_0.author,
        b1_0.available_copies,
        b1_0.book_cover_url,
        b1_0.category_id,
        b1_0.created_at,
        b1_0.format,
        b1_0.isbn,
        b1_0.name,
        b1_0.pdf_file_url,
        b1_0.publication_year,
        b1_0.short_details,
        b1_0.total_copies,
        b1_0.updated_at 
    from
        books b1_0 
    where
        b1_0.id=?
2025-08-28 16:11:56 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    select
        r1_0.book_id,
        r1_0.id,
        r1_0.comment,
        r1_0.created_at,
        r1_0.rating,
        r1_0.updated_at,
        r1_0.user_id 
    from
        reviews r1_0 
    where
        r1_0.book_id=?
2025-08-28 16:11:56 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.address,
        u1_0.created_at,
        u1_0.date_of_birth,
        u1_0.email,
        u1_0.is_active,
        u1_0.name,
        u1_0.password_hash,
        u1_0.role,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.username=?
2025-08-28 16:11:56 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.address,
        u1_0.created_at,
        u1_0.date_of_birth,
        u1_0.email,
        u1_0.is_active,
        u1_0.name,
        u1_0.password_hash,
        u1_0.role,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.username=?
2025-08-28 16:11:56 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    select
        b1_0.id,
        b1_0.book_id,
        b1_0.borrow_date,
        b1_0.created_at,
        b1_0.due_date,
        b1_0.extension_count,
        b1_0.return_date,
        b1_0.status,
        b1_0.updated_at,
        b1_0.user_id 
    from
        borrows b1_0 
    offset
        ? rows 
    fetch
        first ? rows only
2025-08-28 16:11:56 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    select
        b1_0.id,
        b1_0.book_id,
        b1_0.borrow_date,
        b1_0.created_at,
        b1_0.due_date,
        b1_0.extension_count,
        b1_0.return_date,
        b1_0.status,
        b1_0.updated_at,
        b1_0.user_id 
    from
        borrows b1_0 
    offset
        ? rows 
    fetch
        first ? rows only
2025-08-28 16:11:56 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.address,
        u1_0.created_at,
        u1_0.date_of_birth,
        u1_0.email,
        u1_0.is_active,
        u1_0.name,
        u1_0.password_hash,
        u1_0.role,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.id=?
2025-08-28 16:11:56 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    select
        b1_0.id,
        b1_0.about,
        b1_0.audio_file_url,
        b1_0.author,
        b1_0.available_copies,
        b1_0.book_cover_url,
        b1_0.category_id,
        b1_0.created_at,
        b1_0.format,
        b1_0.isbn,
        b1_0.name,
        b1_0.pdf_file_url,
        b1_0.publication_year,
        b1_0.short_details,
        b1_0.total_copies,
        b1_0.updated_at 
    from
        books b1_0 
    where
        b1_0.id=?
2025-08-28 16:11:56 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    select
        r1_0.book_id,
        r1_0.id,
        r1_0.comment,
        r1_0.created_at,
        r1_0.rating,
        r1_0.updated_at,
        r1_0.user_id 
    from
        reviews r1_0 
    where
        r1_0.book_id=?
2025-08-28 16:11:56 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.address,
        u1_0.created_at,
        u1_0.date_of_birth,
        u1_0.email,
        u1_0.is_active,
        u1_0.name,
        u1_0.password_hash,
        u1_0.role,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.id=?
2025-08-28 16:11:56 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    select
        b1_0.id,
        b1_0.about,
        b1_0.audio_file_url,
        b1_0.author,
        b1_0.available_copies,
        b1_0.book_cover_url,
        b1_0.category_id,
        b1_0.created_at,
        b1_0.format,
        b1_0.isbn,
        b1_0.name,
        b1_0.pdf_file_url,
        b1_0.publication_year,
        b1_0.short_details,
        b1_0.total_copies,
        b1_0.updated_at 
    from
        books b1_0 
    where
        b1_0.id=?
2025-08-28 16:11:56 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    select
        r1_0.book_id,
        r1_0.id,
        r1_0.comment,
        r1_0.created_at,
        r1_0.rating,
        r1_0.updated_at,
        r1_0.user_id 
    from
        reviews r1_0 
    where
        r1_0.book_id=?
2025-08-28 16:11:56 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.address,
        u1_0.created_at,
        u1_0.date_of_birth,
        u1_0.email,
        u1_0.is_active,
        u1_0.name,
        u1_0.password_hash,
        u1_0.role,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.id=?
2025-08-28 16:11:56 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    select
        b1_0.id,
        b1_0.about,
        b1_0.audio_file_url,
        b1_0.author,
        b1_0.available_copies,
        b1_0.book_cover_url,
        b1_0.category_id,
        b1_0.created_at,
        b1_0.format,
        b1_0.isbn,
        b1_0.name,
        b1_0.pdf_file_url,
        b1_0.publication_year,
        b1_0.short_details,
        b1_0.total_copies,
        b1_0.updated_at 
    from
        books b1_0 
    where
        b1_0.id=?
2025-08-28 16:11:56 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    select
        r1_0.book_id,
        r1_0.id,
        r1_0.comment,
        r1_0.created_at,
        r1_0.rating,
        r1_0.updated_at,
        r1_0.user_id 
    from
        reviews r1_0 
    where
        r1_0.book_id=?
2025-08-28 16:11:56 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    select
        b1_0.id,
        b1_0.about,
        b1_0.audio_file_url,
        b1_0.author,
        b1_0.available_copies,
        b1_0.book_cover_url,
        b1_0.category_id,
        b1_0.created_at,
        b1_0.format,
        b1_0.isbn,
        b1_0.name,
        b1_0.pdf_file_url,
        b1_0.publication_year,
        b1_0.short_details,
        b1_0.total_copies,
        b1_0.updated_at 
    from
        books b1_0 
    where
        b1_0.id=?
2025-08-28 16:11:56 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.address,
        u1_0.created_at,
        u1_0.date_of_birth,
        u1_0.email,
        u1_0.is_active,
        u1_0.name,
        u1_0.password_hash,
        u1_0.role,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.id=?
2025-08-28 16:11:56 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    select
        b1_0.id,
        b1_0.about,
        b1_0.audio_file_url,
        b1_0.author,
        b1_0.available_copies,
        b1_0.book_cover_url,
        b1_0.category_id,
        b1_0.created_at,
        b1_0.format,
        b1_0.isbn,
        b1_0.name,
        b1_0.pdf_file_url,
        b1_0.publication_year,
        b1_0.short_details,
        b1_0.total_copies,
        b1_0.updated_at 
    from
        books b1_0 
    where
        b1_0.id=?
2025-08-28 16:11:56 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    select
        r1_0.book_id,
        r1_0.id,
        r1_0.comment,
        r1_0.created_at,
        r1_0.rating,
        r1_0.updated_at,
        r1_0.user_id 
    from
        reviews r1_0 
    where
        r1_0.book_id=?
2025-08-28 16:11:56 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.address,
        u1_0.created_at,
        u1_0.date_of_birth,
        u1_0.email,
        u1_0.is_active,
        u1_0.name,
        u1_0.password_hash,
        u1_0.role,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.id=?
2025-08-28 16:11:56 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    select
        r1_0.book_id,
        r1_0.id,
        r1_0.comment,
        r1_0.created_at,
        r1_0.rating,
        r1_0.updated_at,
        r1_0.user_id 
    from
        reviews r1_0 
    where
        r1_0.book_id=?
2025-08-28 16:11:56 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    select
        b1_0.id,
        b1_0.about,
        b1_0.audio_file_url,
        b1_0.author,
        b1_0.available_copies,
        b1_0.book_cover_url,
        b1_0.category_id,
        b1_0.created_at,
        b1_0.format,
        b1_0.isbn,
        b1_0.name,
        b1_0.pdf_file_url,
        b1_0.publication_year,
        b1_0.short_details,
        b1_0.total_copies,
        b1_0.updated_at 
    from
        books b1_0 
    where
        b1_0.id=?
2025-08-28 16:11:56 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    select
        b1_0.id,
        b1_0.about,
        b1_0.audio_file_url,
        b1_0.author,
        b1_0.available_copies,
        b1_0.book_cover_url,
        b1_0.category_id,
        b1_0.created_at,
        b1_0.format,
        b1_0.isbn,
        b1_0.name,
        b1_0.pdf_file_url,
        b1_0.publication_year,
        b1_0.short_details,
        b1_0.total_copies,
        b1_0.updated_at 
    from
        books b1_0 
    where
        b1_0.id=?
2025-08-28 16:11:56 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    select
        r1_0.book_id,
        r1_0.id,
        r1_0.comment,
        r1_0.created_at,
        r1_0.rating,
        r1_0.updated_at,
        r1_0.user_id 
    from
        reviews r1_0 
    where
        r1_0.book_id=?
2025-08-28 16:11:56 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    select
        r1_0.book_id,
        r1_0.id,
        r1_0.comment,
        r1_0.created_at,
        r1_0.rating,
        r1_0.updated_at,
        r1_0.user_id 
    from
        reviews r1_0 
    where
        r1_0.book_id=?
2025-08-28 16:11:56 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.address,
        u1_0.created_at,
        u1_0.date_of_birth,
        u1_0.email,
        u1_0.is_active,
        u1_0.name,
        u1_0.password_hash,
        u1_0.role,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.id=?
2025-08-28 16:11:56 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    select
        b1_0.id,
        b1_0.about,
        b1_0.audio_file_url,
        b1_0.author,
        b1_0.available_copies,
        b1_0.book_cover_url,
        b1_0.category_id,
        b1_0.created_at,
        b1_0.format,
        b1_0.isbn,
        b1_0.name,
        b1_0.pdf_file_url,
        b1_0.publication_year,
        b1_0.short_details,
        b1_0.total_copies,
        b1_0.updated_at 
    from
        books b1_0 
    where
        b1_0.id=?
2025-08-28 16:11:56 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    select
        r1_0.book_id,
        r1_0.id,
        r1_0.comment,
        r1_0.created_at,
        r1_0.rating,
        r1_0.updated_at,
        r1_0.user_id 
    from
        reviews r1_0 
    where
        r1_0.book_id=?
2025-08-28 16:11:56 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    select
        b1_0.id,
        b1_0.about,
        b1_0.audio_file_url,
        b1_0.author,
        b1_0.available_copies,
        b1_0.book_cover_url,
        b1_0.category_id,
        b1_0.created_at,
        b1_0.format,
        b1_0.isbn,
        b1_0.name,
        b1_0.pdf_file_url,
        b1_0.publication_year,
        b1_0.short_details,
        b1_0.total_copies,
        b1_0.updated_at 
    from
        books b1_0 
    where
        b1_0.id=?
2025-08-28 16:11:56 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    select
        r1_0.book_id,
        r1_0.id,
        r1_0.comment,
        r1_0.created_at,
        r1_0.rating,
        r1_0.updated_at,
        r1_0.user_id 
    from
        reviews r1_0 
    where
        r1_0.book_id=?
2025-08-28 16:11:56 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    select
        b1_0.id,
        b1_0.about,
        b1_0.audio_file_url,
        b1_0.author,
        b1_0.available_copies,
        b1_0.book_cover_url,
        b1_0.category_id,
        b1_0.created_at,
        b1_0.format,
        b1_0.isbn,
        b1_0.name,
        b1_0.pdf_file_url,
        b1_0.publication_year,
        b1_0.short_details,
        b1_0.total_copies,
        b1_0.updated_at 
    from
        books b1_0 
    where
        b1_0.id=?
2025-08-28 16:11:56 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    select
        r1_0.book_id,
        r1_0.id,
        r1_0.comment,
        r1_0.created_at,
        r1_0.rating,
        r1_0.updated_at,
        r1_0.user_id 
    from
        reviews r1_0 
    where
        r1_0.book_id=?
2025-08-28 16:11:56 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.address,
        u1_0.created_at,
        u1_0.date_of_birth,
        u1_0.email,
        u1_0.is_active,
        u1_0.name,
        u1_0.password_hash,
        u1_0.role,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.username=?
2025-08-28 16:11:56 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        b1_0.id,
        b1_0.book_id,
        b1_0.borrow_date,
        b1_0.created_at,
        b1_0.due_date,
        b1_0.extension_count,
        b1_0.return_date,
        b1_0.status,
        b1_0.updated_at,
        b1_0.user_id 
    from
        borrows b1_0 
    offset
        ? rows 
    fetch
        first ? rows only
2025-08-28 16:11:56 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.address,
        u1_0.created_at,
        u1_0.date_of_birth,
        u1_0.email,
        u1_0.is_active,
        u1_0.name,
        u1_0.password_hash,
        u1_0.role,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.id=?
2025-08-28 16:11:56 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        b1_0.id,
        b1_0.about,
        b1_0.audio_file_url,
        b1_0.author,
        b1_0.available_copies,
        b1_0.book_cover_url,
        b1_0.category_id,
        b1_0.created_at,
        b1_0.format,
        b1_0.isbn,
        b1_0.name,
        b1_0.pdf_file_url,
        b1_0.publication_year,
        b1_0.short_details,
        b1_0.total_copies,
        b1_0.updated_at 
    from
        books b1_0 
    where
        b1_0.id=?
2025-08-28 16:11:56 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        r1_0.book_id,
        r1_0.id,
        r1_0.comment,
        r1_0.created_at,
        r1_0.rating,
        r1_0.updated_at,
        r1_0.user_id 
    from
        reviews r1_0 
    where
        r1_0.book_id=?
2025-08-28 16:11:56 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.address,
        u1_0.created_at,
        u1_0.date_of_birth,
        u1_0.email,
        u1_0.is_active,
        u1_0.name,
        u1_0.password_hash,
        u1_0.role,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.id=?
2025-08-28 16:11:56 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        b1_0.id,
        b1_0.about,
        b1_0.audio_file_url,
        b1_0.author,
        b1_0.available_copies,
        b1_0.book_cover_url,
        b1_0.category_id,
        b1_0.created_at,
        b1_0.format,
        b1_0.isbn,
        b1_0.name,
        b1_0.pdf_file_url,
        b1_0.publication_year,
        b1_0.short_details,
        b1_0.total_copies,
        b1_0.updated_at 
    from
        books b1_0 
    where
        b1_0.id=?
2025-08-28 16:11:56 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        r1_0.book_id,
        r1_0.id,
        r1_0.comment,
        r1_0.created_at,
        r1_0.rating,
        r1_0.updated_at,
        r1_0.user_id 
    from
        reviews r1_0 
    where
        r1_0.book_id=?
2025-08-28 16:11:56 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.address,
        u1_0.created_at,
        u1_0.date_of_birth,
        u1_0.email,
        u1_0.is_active,
        u1_0.name,
        u1_0.password_hash,
        u1_0.role,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.id=?
2025-08-28 16:11:56 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        b1_0.id,
        b1_0.about,
        b1_0.audio_file_url,
        b1_0.author,
        b1_0.available_copies,
        b1_0.book_cover_url,
        b1_0.category_id,
        b1_0.created_at,
        b1_0.format,
        b1_0.isbn,
        b1_0.name,
        b1_0.pdf_file_url,
        b1_0.publication_year,
        b1_0.short_details,
        b1_0.total_copies,
        b1_0.updated_at 
    from
        books b1_0 
    where
        b1_0.id=?
2025-08-28 16:11:56 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        r1_0.book_id,
        r1_0.id,
        r1_0.comment,
        r1_0.created_at,
        r1_0.rating,
        r1_0.updated_at,
        r1_0.user_id 
    from
        reviews r1_0 
    where
        r1_0.book_id=?
2025-08-28 16:11:56 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        b1_0.id,
        b1_0.about,
        b1_0.audio_file_url,
        b1_0.author,
        b1_0.available_copies,
        b1_0.book_cover_url,
        b1_0.category_id,
        b1_0.created_at,
        b1_0.format,
        b1_0.isbn,
        b1_0.name,
        b1_0.pdf_file_url,
        b1_0.publication_year,
        b1_0.short_details,
        b1_0.total_copies,
        b1_0.updated_at 
    from
        books b1_0 
    where
        b1_0.id=?
2025-08-28 16:11:56 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        r1_0.book_id,
        r1_0.id,
        r1_0.comment,
        r1_0.created_at,
        r1_0.rating,
        r1_0.updated_at,
        r1_0.user_id 
    from
        reviews r1_0 
    where
        r1_0.book_id=?
2025-08-28 16:11:56 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        b1_0.id,
        b1_0.about,
        b1_0.audio_file_url,
        b1_0.author,
        b1_0.available_copies,
        b1_0.book_cover_url,
        b1_0.category_id,
        b1_0.created_at,
        b1_0.format,
        b1_0.isbn,
        b1_0.name,
        b1_0.pdf_file_url,
        b1_0.publication_year,
        b1_0.short_details,
        b1_0.total_copies,
        b1_0.updated_at 
    from
        books b1_0 
    where
        b1_0.id=?
2025-08-28 16:11:56 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        r1_0.book_id,
        r1_0.id,
        r1_0.comment,
        r1_0.created_at,
        r1_0.rating,
        r1_0.updated_at,
        r1_0.user_id 
    from
        reviews r1_0 
    where
        r1_0.book_id=?
2025-08-28 16:11:56 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.address,
        u1_0.created_at,
        u1_0.date_of_birth,
        u1_0.email,
        u1_0.is_active,
        u1_0.name,
        u1_0.password_hash,
        u1_0.role,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.username=?
2025-08-28 16:11:56 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.address,
        u1_0.created_at,
        u1_0.date_of_birth,
        u1_0.email,
        u1_0.is_active,
        u1_0.name,
        u1_0.password_hash,
        u1_0.role,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.username=?
2025-08-28 16:11:56 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        b1_0.id,
        b1_0.book_id,
        b1_0.borrow_date,
        b1_0.created_at,
        b1_0.due_date,
        b1_0.extension_count,
        b1_0.return_date,
        b1_0.status,
        b1_0.updated_at,
        b1_0.user_id 
    from
        borrows b1_0 
    offset
        ? rows 
    fetch
        first ? rows only
2025-08-28 16:11:56 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.address,
        u1_0.created_at,
        u1_0.date_of_birth,
        u1_0.email,
        u1_0.is_active,
        u1_0.name,
        u1_0.password_hash,
        u1_0.role,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.id=?
2025-08-28 16:11:56 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        b1_0.id,
        b1_0.about,
        b1_0.audio_file_url,
        b1_0.author,
        b1_0.available_copies,
        b1_0.book_cover_url,
        b1_0.category_id,
        b1_0.created_at,
        b1_0.format,
        b1_0.isbn,
        b1_0.name,
        b1_0.pdf_file_url,
        b1_0.publication_year,
        b1_0.short_details,
        b1_0.total_copies,
        b1_0.updated_at 
    from
        books b1_0 
    where
        b1_0.id=?
2025-08-28 16:11:56 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        r1_0.book_id,
        r1_0.id,
        r1_0.comment,
        r1_0.created_at,
        r1_0.rating,
        r1_0.updated_at,
        r1_0.user_id 
    from
        reviews r1_0 
    where
        r1_0.book_id=?
2025-08-28 16:11:56 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.address,
        u1_0.created_at,
        u1_0.date_of_birth,
        u1_0.email,
        u1_0.is_active,
        u1_0.name,
        u1_0.password_hash,
        u1_0.role,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.id=?
2025-08-28 16:11:56 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        b1_0.id,
        b1_0.about,
        b1_0.audio_file_url,
        b1_0.author,
        b1_0.available_copies,
        b1_0.book_cover_url,
        b1_0.category_id,
        b1_0.created_at,
        b1_0.format,
        b1_0.isbn,
        b1_0.name,
        b1_0.pdf_file_url,
        b1_0.publication_year,
        b1_0.short_details,
        b1_0.total_copies,
        b1_0.updated_at 
    from
        books b1_0 
    where
        b1_0.id=?
2025-08-28 16:11:56 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        r1_0.book_id,
        r1_0.id,
        r1_0.comment,
        r1_0.created_at,
        r1_0.rating,
        r1_0.updated_at,
        r1_0.user_id 
    from
        reviews r1_0 
    where
        r1_0.book_id=?
2025-08-28 16:11:56 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.address,
        u1_0.created_at,
        u1_0.date_of_birth,
        u1_0.email,
        u1_0.is_active,
        u1_0.name,
        u1_0.password_hash,
        u1_0.role,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.id=?
2025-08-28 16:11:56 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        b1_0.id,
        b1_0.about,
        b1_0.audio_file_url,
        b1_0.author,
        b1_0.available_copies,
        b1_0.book_cover_url,
        b1_0.category_id,
        b1_0.created_at,
        b1_0.format,
        b1_0.isbn,
        b1_0.name,
        b1_0.pdf_file_url,
        b1_0.publication_year,
        b1_0.short_details,
        b1_0.total_copies,
        b1_0.updated_at 
    from
        books b1_0 
    where
        b1_0.id=?
2025-08-28 16:11:56 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        r1_0.book_id,
        r1_0.id,
        r1_0.comment,
        r1_0.created_at,
        r1_0.rating,
        r1_0.updated_at,
        r1_0.user_id 
    from
        reviews r1_0 
    where
        r1_0.book_id=?
2025-08-28 16:11:56 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        b1_0.id,
        b1_0.about,
        b1_0.audio_file_url,
        b1_0.author,
        b1_0.available_copies,
        b1_0.book_cover_url,
        b1_0.category_id,
        b1_0.created_at,
        b1_0.format,
        b1_0.isbn,
        b1_0.name,
        b1_0.pdf_file_url,
        b1_0.publication_year,
        b1_0.short_details,
        b1_0.total_copies,
        b1_0.updated_at 
    from
        books b1_0 
    where
        b1_0.id=?
2025-08-28 16:11:56 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        r1_0.book_id,
        r1_0.id,
        r1_0.comment,
        r1_0.created_at,
        r1_0.rating,
        r1_0.updated_at,
        r1_0.user_id 
    from
        reviews r1_0 
    where
        r1_0.book_id=?
2025-08-28 16:11:56 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        b1_0.id,
        b1_0.about,
        b1_0.audio_file_url,
        b1_0.author,
        b1_0.available_copies,
        b1_0.book_cover_url,
        b1_0.category_id,
        b1_0.created_at,
        b1_0.format,
        b1_0.isbn,
        b1_0.name,
        b1_0.pdf_file_url,
        b1_0.publication_year,
        b1_0.short_details,
        b1_0.total_copies,
        b1_0.updated_at 
    from
        books b1_0 
    where
        b1_0.id=?
2025-08-28 16:11:56 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        r1_0.book_id,
        r1_0.id,
        r1_0.comment,
        r1_0.created_at,
        r1_0.rating,
        r1_0.updated_at,
        r1_0.user_id 
    from
        reviews r1_0 
    where
        r1_0.book_id=?
2025-08-28 16:11:56 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    select
        b1_0.id,
        b1_0.book_id,
        b1_0.borrow_date,
        b1_0.created_at,
        b1_0.due_date,
        b1_0.extension_count,
        b1_0.return_date,
        b1_0.status,
        b1_0.updated_at,
        b1_0.user_id 
    from
        borrows b1_0 
    where
        b1_0.return_date is null 
        and b1_0.due_date<?
2025-08-28 16:11:56 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.address,
        u1_0.created_at,
        u1_0.date_of_birth,
        u1_0.email,
        u1_0.is_active,
        u1_0.name,
        u1_0.password_hash,
        u1_0.role,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.id=?
2025-08-28 16:11:56 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    select
        b1_0.id,
        b1_0.about,
        b1_0.audio_file_url,
        b1_0.author,
        b1_0.available_copies,
        b1_0.book_cover_url,
        b1_0.category_id,
        b1_0.created_at,
        b1_0.format,
        b1_0.isbn,
        b1_0.name,
        b1_0.pdf_file_url,
        b1_0.publication_year,
        b1_0.short_details,
        b1_0.total_copies,
        b1_0.updated_at 
    from
        books b1_0 
    where
        b1_0.id=?
2025-08-28 16:11:56 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    select
        r1_0.book_id,
        r1_0.id,
        r1_0.comment,
        r1_0.created_at,
        r1_0.rating,
        r1_0.updated_at,
        r1_0.user_id 
    from
        reviews r1_0 
    where
        r1_0.book_id=?
2025-08-28 16:11:56 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.address,
        u1_0.created_at,
        u1_0.date_of_birth,
        u1_0.email,
        u1_0.is_active,
        u1_0.name,
        u1_0.password_hash,
        u1_0.role,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.id=?
2025-08-28 16:11:56 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    select
        b1_0.id,
        b1_0.about,
        b1_0.audio_file_url,
        b1_0.author,
        b1_0.available_copies,
        b1_0.book_cover_url,
        b1_0.category_id,
        b1_0.created_at,
        b1_0.format,
        b1_0.isbn,
        b1_0.name,
        b1_0.pdf_file_url,
        b1_0.publication_year,
        b1_0.short_details,
        b1_0.total_copies,
        b1_0.updated_at 
    from
        books b1_0 
    where
        b1_0.id=?
2025-08-28 16:11:56 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    select
        r1_0.book_id,
        r1_0.id,
        r1_0.comment,
        r1_0.created_at,
        r1_0.rating,
        r1_0.updated_at,
        r1_0.user_id 
    from
        reviews r1_0 
    where
        r1_0.book_id=?
2025-08-28 16:11:56 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    select
        b1_0.id,
        b1_0.about,
        b1_0.audio_file_url,
        b1_0.author,
        b1_0.available_copies,
        b1_0.book_cover_url,
        b1_0.category_id,
        b1_0.created_at,
        b1_0.format,
        b1_0.isbn,
        b1_0.name,
        b1_0.pdf_file_url,
        b1_0.publication_year,
        b1_0.short_details,
        b1_0.total_copies,
        b1_0.updated_at 
    from
        books b1_0 
    where
        b1_0.id=?
2025-08-28 16:11:56 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    select
        r1_0.book_id,
        r1_0.id,
        r1_0.comment,
        r1_0.created_at,
        r1_0.rating,
        r1_0.updated_at,
        r1_0.user_id 
    from
        reviews r1_0 
    where
        r1_0.book_id=?
2025-08-28 16:11:56 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.address,
        u1_0.created_at,
        u1_0.date_of_birth,
        u1_0.email,
        u1_0.is_active,
        u1_0.name,
        u1_0.password_hash,
        u1_0.role,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.username=?
2025-08-28 16:11:56 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    select
        b1_0.id,
        b1_0.book_id,
        b1_0.borrow_date,
        b1_0.created_at,
        b1_0.due_date,
        b1_0.extension_count,
        b1_0.return_date,
        b1_0.status,
        b1_0.updated_at,
        b1_0.user_id 
    from
        borrows b1_0 
    where
        b1_0.return_date is null 
        and b1_0.due_date<?
2025-08-28 16:11:56 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.address,
        u1_0.created_at,
        u1_0.date_of_birth,
        u1_0.email,
        u1_0.is_active,
        u1_0.name,
        u1_0.password_hash,
        u1_0.role,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.id=?
2025-08-28 16:11:56 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    select
        b1_0.id,
        b1_0.about,
        b1_0.audio_file_url,
        b1_0.author,
        b1_0.available_copies,
        b1_0.book_cover_url,
        b1_0.category_id,
        b1_0.created_at,
        b1_0.format,
        b1_0.isbn,
        b1_0.name,
        b1_0.pdf_file_url,
        b1_0.publication_year,
        b1_0.short_details,
        b1_0.total_copies,
        b1_0.updated_at 
    from
        books b1_0 
    where
        b1_0.id=?
2025-08-28 16:11:56 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    select
        r1_0.book_id,
        r1_0.id,
        r1_0.comment,
        r1_0.created_at,
        r1_0.rating,
        r1_0.updated_at,
        r1_0.user_id 
    from
        reviews r1_0 
    where
        r1_0.book_id=?
2025-08-28 16:11:56 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.address,
        u1_0.created_at,
        u1_0.date_of_birth,
        u1_0.email,
        u1_0.is_active,
        u1_0.name,
        u1_0.password_hash,
        u1_0.role,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.id=?
2025-08-28 16:11:56 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    select
        b1_0.id,
        b1_0.about,
        b1_0.audio_file_url,
        b1_0.author,
        b1_0.available_copies,
        b1_0.book_cover_url,
        b1_0.category_id,
        b1_0.created_at,
        b1_0.format,
        b1_0.isbn,
        b1_0.name,
        b1_0.pdf_file_url,
        b1_0.publication_year,
        b1_0.short_details,
        b1_0.total_copies,
        b1_0.updated_at 
    from
        books b1_0 
    where
        b1_0.id=?
2025-08-28 16:11:56 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    select
        r1_0.book_id,
        r1_0.id,
        r1_0.comment,
        r1_0.created_at,
        r1_0.rating,
        r1_0.updated_at,
        r1_0.user_id 
    from
        reviews r1_0 
    where
        r1_0.book_id=?
2025-08-28 16:11:56 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    select
        b1_0.id,
        b1_0.about,
        b1_0.audio_file_url,
        b1_0.author,
        b1_0.available_copies,
        b1_0.book_cover_url,
        b1_0.category_id,
        b1_0.created_at,
        b1_0.format,
        b1_0.isbn,
        b1_0.name,
        b1_0.pdf_file_url,
        b1_0.publication_year,
        b1_0.short_details,
        b1_0.total_copies,
        b1_0.updated_at 
    from
        books b1_0 
    where
        b1_0.id=?
2025-08-28 16:11:56 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    select
        r1_0.book_id,
        r1_0.id,
        r1_0.comment,
        r1_0.created_at,
        r1_0.rating,
        r1_0.updated_at,
        r1_0.user_id 
    from
        reviews r1_0 
    where
        r1_0.book_id=?
2025-08-28 16:12:00 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.address,
        u1_0.created_at,
        u1_0.date_of_birth,
        u1_0.email,
        u1_0.is_active,
        u1_0.name,
        u1_0.password_hash,
        u1_0.role,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.username=?
2025-08-28 16:12:00 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL - 
    select
        b1_0.id,
        b1_0.about,
        b1_0.audio_file_url,
        b1_0.author,
        b1_0.available_copies,
        b1_0.book_cover_url,
        b1_0.category_id,
        b1_0.created_at,
        b1_0.format,
        b1_0.isbn,
        b1_0.name,
        b1_0.pdf_file_url,
        b1_0.publication_year,
        b1_0.short_details,
        b1_0.total_copies,
        b1_0.updated_at 
    from
        books b1_0 
    offset
        ? rows 
    fetch
        first ? rows only
2025-08-28 16:12:00 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL - 
    select
        count(b1_0.id) 
    from
        books b1_0
2025-08-28 16:12:00 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.created_at,
        c1_0.description,
        c1_0.name,
        c1_0.updated_at 
    from
        categories c1_0 
    where
        c1_0.id=?
2025-08-28 16:12:00 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL - 
    select
        b1_0.category_id,
        b1_0.id,
        b1_0.about,
        b1_0.audio_file_url,
        b1_0.author,
        b1_0.available_copies,
        b1_0.book_cover_url,
        b1_0.created_at,
        b1_0.format,
        b1_0.isbn,
        b1_0.name,
        b1_0.pdf_file_url,
        b1_0.publication_year,
        b1_0.short_details,
        b1_0.total_copies,
        b1_0.updated_at 
    from
        books b1_0 
    where
        b1_0.category_id=?
2025-08-28 16:12:00 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL - 
    select
        r1_0.book_id,
        r1_0.id,
        r1_0.comment,
        r1_0.created_at,
        r1_0.rating,
        r1_0.updated_at,
        r1_0.user_id 
    from
        reviews r1_0 
    where
        r1_0.book_id=?
2025-08-28 16:12:00 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL - 
    select
        r1_0.book_id,
        r1_0.id,
        r1_0.comment,
        r1_0.created_at,
        r1_0.rating,
        r1_0.updated_at,
        r1_0.user_id 
    from
        reviews r1_0 
    where
        r1_0.book_id=?
2025-08-28 16:12:00 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.created_at,
        c1_0.description,
        c1_0.name,
        c1_0.updated_at 
    from
        categories c1_0 
    where
        c1_0.id=?
2025-08-28 16:12:00 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL - 
    select
        b1_0.category_id,
        b1_0.id,
        b1_0.about,
        b1_0.audio_file_url,
        b1_0.author,
        b1_0.available_copies,
        b1_0.book_cover_url,
        b1_0.created_at,
        b1_0.format,
        b1_0.isbn,
        b1_0.name,
        b1_0.pdf_file_url,
        b1_0.publication_year,
        b1_0.short_details,
        b1_0.total_copies,
        b1_0.updated_at 
    from
        books b1_0 
    where
        b1_0.category_id=?
2025-08-28 16:12:00 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL - 
    select
        r1_0.book_id,
        r1_0.id,
        r1_0.comment,
        r1_0.created_at,
        r1_0.rating,
        r1_0.updated_at,
        r1_0.user_id 
    from
        reviews r1_0 
    where
        r1_0.book_id=?
2025-08-28 16:12:00 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.created_at,
        c1_0.description,
        c1_0.name,
        c1_0.updated_at 
    from
        categories c1_0 
    where
        c1_0.id=?
2025-08-28 16:12:00 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL - 
    select
        b1_0.category_id,
        b1_0.id,
        b1_0.about,
        b1_0.audio_file_url,
        b1_0.author,
        b1_0.available_copies,
        b1_0.book_cover_url,
        b1_0.created_at,
        b1_0.format,
        b1_0.isbn,
        b1_0.name,
        b1_0.pdf_file_url,
        b1_0.publication_year,
        b1_0.short_details,
        b1_0.total_copies,
        b1_0.updated_at 
    from
        books b1_0 
    where
        b1_0.category_id=?
2025-08-28 16:12:00 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL - 
    select
        r1_0.book_id,
        r1_0.id,
        r1_0.comment,
        r1_0.created_at,
        r1_0.rating,
        r1_0.updated_at,
        r1_0.user_id 
    from
        reviews r1_0 
    where
        r1_0.book_id=?
2025-08-28 16:12:00 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.created_at,
        c1_0.description,
        c1_0.name,
        c1_0.updated_at 
    from
        categories c1_0 
    where
        c1_0.id=?
2025-08-28 16:12:00 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL - 
    select
        b1_0.category_id,
        b1_0.id,
        b1_0.about,
        b1_0.audio_file_url,
        b1_0.author,
        b1_0.available_copies,
        b1_0.book_cover_url,
        b1_0.created_at,
        b1_0.format,
        b1_0.isbn,
        b1_0.name,
        b1_0.pdf_file_url,
        b1_0.publication_year,
        b1_0.short_details,
        b1_0.total_copies,
        b1_0.updated_at 
    from
        books b1_0 
    where
        b1_0.category_id=?
2025-08-28 16:12:00 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL - 
    select
        r1_0.book_id,
        r1_0.id,
        r1_0.comment,
        r1_0.created_at,
        r1_0.rating,
        r1_0.updated_at,
        r1_0.user_id 
    from
        reviews r1_0 
    where
        r1_0.book_id=?
2025-08-28 16:12:00 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.created_at,
        c1_0.description,
        c1_0.name,
        c1_0.updated_at 
    from
        categories c1_0 
    where
        c1_0.id=?
2025-08-28 16:12:00 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL - 
    select
        b1_0.category_id,
        b1_0.id,
        b1_0.about,
        b1_0.audio_file_url,
        b1_0.author,
        b1_0.available_copies,
        b1_0.book_cover_url,
        b1_0.created_at,
        b1_0.format,
        b1_0.isbn,
        b1_0.name,
        b1_0.pdf_file_url,
        b1_0.publication_year,
        b1_0.short_details,
        b1_0.total_copies,
        b1_0.updated_at 
    from
        books b1_0 
    where
        b1_0.category_id=?
2025-08-28 16:12:00 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL - 
    select
        r1_0.book_id,
        r1_0.id,
        r1_0.comment,
        r1_0.created_at,
        r1_0.rating,
        r1_0.updated_at,
        r1_0.user_id 
    from
        reviews r1_0 
    where
        r1_0.book_id=?
2025-08-28 16:12:00 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.created_at,
        c1_0.description,
        c1_0.name,
        c1_0.updated_at 
    from
        categories c1_0 
    where
        c1_0.id=?
2025-08-28 16:12:00 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL - 
    select
        b1_0.category_id,
        b1_0.id,
        b1_0.about,
        b1_0.audio_file_url,
        b1_0.author,
        b1_0.available_copies,
        b1_0.book_cover_url,
        b1_0.created_at,
        b1_0.format,
        b1_0.isbn,
        b1_0.name,
        b1_0.pdf_file_url,
        b1_0.publication_year,
        b1_0.short_details,
        b1_0.total_copies,
        b1_0.updated_at 
    from
        books b1_0 
    where
        b1_0.category_id=?
2025-08-28 16:12:00 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL - 
    select
        r1_0.book_id,
        r1_0.id,
        r1_0.comment,
        r1_0.created_at,
        r1_0.rating,
        r1_0.updated_at,
        r1_0.user_id 
    from
        reviews r1_0 
    where
        r1_0.book_id=?
2025-08-28 16:12:00 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL - 
    select
        r1_0.book_id,
        r1_0.id,
        r1_0.comment,
        r1_0.created_at,
        r1_0.rating,
        r1_0.updated_at,
        r1_0.user_id 
    from
        reviews r1_0 
    where
        r1_0.book_id=?
2025-08-28 16:12:00 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL - 
    select
        r1_0.book_id,
        r1_0.id,
        r1_0.comment,
        r1_0.created_at,
        r1_0.rating,
        r1_0.updated_at,
        r1_0.user_id 
    from
        reviews r1_0 
    where
        r1_0.book_id=?
2025-08-28 16:12:00 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL - 
    select
        r1_0.book_id,
        r1_0.id,
        r1_0.comment,
        r1_0.created_at,
        r1_0.rating,
        r1_0.updated_at,
        r1_0.user_id 
    from
        reviews r1_0 
    where
        r1_0.book_id=?
2025-08-28 16:12:00 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.address,
        u1_0.created_at,
        u1_0.date_of_birth,
        u1_0.email,
        u1_0.is_active,
        u1_0.name,
        u1_0.password_hash,
        u1_0.role,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.username=?
2025-08-28 16:12:00 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    select
        b1_0.id,
        b1_0.about,
        b1_0.audio_file_url,
        b1_0.author,
        b1_0.available_copies,
        b1_0.book_cover_url,
        b1_0.category_id,
        b1_0.created_at,
        b1_0.format,
        b1_0.isbn,
        b1_0.name,
        b1_0.pdf_file_url,
        b1_0.publication_year,
        b1_0.short_details,
        b1_0.total_copies,
        b1_0.updated_at 
    from
        books b1_0 
    offset
        ? rows 
    fetch
        first ? rows only
2025-08-28 16:12:00 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    select
        count(b1_0.id) 
    from
        books b1_0
2025-08-28 16:12:00 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.created_at,
        c1_0.description,
        c1_0.name,
        c1_0.updated_at 
    from
        categories c1_0 
    where
        c1_0.id=?
2025-08-28 16:12:00 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    select
        b1_0.category_id,
        b1_0.id,
        b1_0.about,
        b1_0.audio_file_url,
        b1_0.author,
        b1_0.available_copies,
        b1_0.book_cover_url,
        b1_0.created_at,
        b1_0.format,
        b1_0.isbn,
        b1_0.name,
        b1_0.pdf_file_url,
        b1_0.publication_year,
        b1_0.short_details,
        b1_0.total_copies,
        b1_0.updated_at 
    from
        books b1_0 
    where
        b1_0.category_id=?
2025-08-28 16:12:00 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    select
        r1_0.book_id,
        r1_0.id,
        r1_0.comment,
        r1_0.created_at,
        r1_0.rating,
        r1_0.updated_at,
        r1_0.user_id 
    from
        reviews r1_0 
    where
        r1_0.book_id=?
2025-08-28 16:12:00 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    select
        r1_0.book_id,
        r1_0.id,
        r1_0.comment,
        r1_0.created_at,
        r1_0.rating,
        r1_0.updated_at,
        r1_0.user_id 
    from
        reviews r1_0 
    where
        r1_0.book_id=?
2025-08-28 16:12:00 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.created_at,
        c1_0.description,
        c1_0.name,
        c1_0.updated_at 
    from
        categories c1_0 
    where
        c1_0.id=?
2025-08-28 16:12:00 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    select
        b1_0.category_id,
        b1_0.id,
        b1_0.about,
        b1_0.audio_file_url,
        b1_0.author,
        b1_0.available_copies,
        b1_0.book_cover_url,
        b1_0.created_at,
        b1_0.format,
        b1_0.isbn,
        b1_0.name,
        b1_0.pdf_file_url,
        b1_0.publication_year,
        b1_0.short_details,
        b1_0.total_copies,
        b1_0.updated_at 
    from
        books b1_0 
    where
        b1_0.category_id=?
2025-08-28 16:12:00 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    select
        r1_0.book_id,
        r1_0.id,
        r1_0.comment,
        r1_0.created_at,
        r1_0.rating,
        r1_0.updated_at,
        r1_0.user_id 
    from
        reviews r1_0 
    where
        r1_0.book_id=?
2025-08-28 16:12:00 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.created_at,
        c1_0.description,
        c1_0.name,
        c1_0.updated_at 
    from
        categories c1_0 
    where
        c1_0.id=?
2025-08-28 16:12:00 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    select
        b1_0.category_id,
        b1_0.id,
        b1_0.about,
        b1_0.audio_file_url,
        b1_0.author,
        b1_0.available_copies,
        b1_0.book_cover_url,
        b1_0.created_at,
        b1_0.format,
        b1_0.isbn,
        b1_0.name,
        b1_0.pdf_file_url,
        b1_0.publication_year,
        b1_0.short_details,
        b1_0.total_copies,
        b1_0.updated_at 
    from
        books b1_0 
    where
        b1_0.category_id=?
2025-08-28 16:12:00 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    select
        r1_0.book_id,
        r1_0.id,
        r1_0.comment,
        r1_0.created_at,
        r1_0.rating,
        r1_0.updated_at,
        r1_0.user_id 
    from
        reviews r1_0 
    where
        r1_0.book_id=?
2025-08-28 16:12:00 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.created_at,
        c1_0.description,
        c1_0.name,
        c1_0.updated_at 
    from
        categories c1_0 
    where
        c1_0.id=?
2025-08-28 16:12:00 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    select
        b1_0.category_id,
        b1_0.id,
        b1_0.about,
        b1_0.audio_file_url,
        b1_0.author,
        b1_0.available_copies,
        b1_0.book_cover_url,
        b1_0.created_at,
        b1_0.format,
        b1_0.isbn,
        b1_0.name,
        b1_0.pdf_file_url,
        b1_0.publication_year,
        b1_0.short_details,
        b1_0.total_copies,
        b1_0.updated_at 
    from
        books b1_0 
    where
        b1_0.category_id=?
2025-08-28 16:12:00 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    select
        r1_0.book_id,
        r1_0.id,
        r1_0.comment,
        r1_0.created_at,
        r1_0.rating,
        r1_0.updated_at,
        r1_0.user_id 
    from
        reviews r1_0 
    where
        r1_0.book_id=?
2025-08-28 16:12:00 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.created_at,
        c1_0.description,
        c1_0.name,
        c1_0.updated_at 
    from
        categories c1_0 
    where
        c1_0.id=?
2025-08-28 16:12:00 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    select
        b1_0.category_id,
        b1_0.id,
        b1_0.about,
        b1_0.audio_file_url,
        b1_0.author,
        b1_0.available_copies,
        b1_0.book_cover_url,
        b1_0.created_at,
        b1_0.format,
        b1_0.isbn,
        b1_0.name,
        b1_0.pdf_file_url,
        b1_0.publication_year,
        b1_0.short_details,
        b1_0.total_copies,
        b1_0.updated_at 
    from
        books b1_0 
    where
        b1_0.category_id=?
2025-08-28 16:12:00 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    select
        r1_0.book_id,
        r1_0.id,
        r1_0.comment,
        r1_0.created_at,
        r1_0.rating,
        r1_0.updated_at,
        r1_0.user_id 
    from
        reviews r1_0 
    where
        r1_0.book_id=?
2025-08-28 16:12:00 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.created_at,
        c1_0.description,
        c1_0.name,
        c1_0.updated_at 
    from
        categories c1_0 
    where
        c1_0.id=?
2025-08-28 16:12:00 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    select
        b1_0.category_id,
        b1_0.id,
        b1_0.about,
        b1_0.audio_file_url,
        b1_0.author,
        b1_0.available_copies,
        b1_0.book_cover_url,
        b1_0.created_at,
        b1_0.format,
        b1_0.isbn,
        b1_0.name,
        b1_0.pdf_file_url,
        b1_0.publication_year,
        b1_0.short_details,
        b1_0.total_copies,
        b1_0.updated_at 
    from
        books b1_0 
    where
        b1_0.category_id=?
2025-08-28 16:12:00 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    select
        r1_0.book_id,
        r1_0.id,
        r1_0.comment,
        r1_0.created_at,
        r1_0.rating,
        r1_0.updated_at,
        r1_0.user_id 
    from
        reviews r1_0 
    where
        r1_0.book_id=?
2025-08-28 16:12:00 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    select
        r1_0.book_id,
        r1_0.id,
        r1_0.comment,
        r1_0.created_at,
        r1_0.rating,
        r1_0.updated_at,
        r1_0.user_id 
    from
        reviews r1_0 
    where
        r1_0.book_id=?
2025-08-28 16:12:00 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    select
        r1_0.book_id,
        r1_0.id,
        r1_0.comment,
        r1_0.created_at,
        r1_0.rating,
        r1_0.updated_at,
        r1_0.user_id 
    from
        reviews r1_0 
    where
        r1_0.book_id=?
2025-08-28 16:12:00 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    select
        r1_0.book_id,
        r1_0.id,
        r1_0.comment,
        r1_0.created_at,
        r1_0.rating,
        r1_0.updated_at,
        r1_0.user_id 
    from
        reviews r1_0 
    where
        r1_0.book_id=?
2025-08-28 16:12:37 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.address,
        u1_0.created_at,
        u1_0.date_of_birth,
        u1_0.email,
        u1_0.is_active,
        u1_0.name,
        u1_0.password_hash,
        u1_0.role,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.username=?
2025-08-28 16:12:37 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.created_at,
        c1_0.description,
        c1_0.name,
        c1_0.updated_at 
    from
        categories c1_0
2025-08-28 16:12:37 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    select
        b1_0.category_id,
        b1_0.id,
        b1_0.about,
        b1_0.audio_file_url,
        b1_0.author,
        b1_0.available_copies,
        b1_0.book_cover_url,
        b1_0.created_at,
        b1_0.format,
        b1_0.isbn,
        b1_0.name,
        b1_0.pdf_file_url,
        b1_0.publication_year,
        b1_0.short_details,
        b1_0.total_copies,
        b1_0.updated_at 
    from
        books b1_0 
    where
        b1_0.category_id=?
2025-08-28 16:12:37 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    select
        b1_0.category_id,
        b1_0.id,
        b1_0.about,
        b1_0.audio_file_url,
        b1_0.author,
        b1_0.available_copies,
        b1_0.book_cover_url,
        b1_0.created_at,
        b1_0.format,
        b1_0.isbn,
        b1_0.name,
        b1_0.pdf_file_url,
        b1_0.publication_year,
        b1_0.short_details,
        b1_0.total_copies,
        b1_0.updated_at 
    from
        books b1_0 
    where
        b1_0.category_id=?
2025-08-28 16:12:37 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    select
        b1_0.category_id,
        b1_0.id,
        b1_0.about,
        b1_0.audio_file_url,
        b1_0.author,
        b1_0.available_copies,
        b1_0.book_cover_url,
        b1_0.created_at,
        b1_0.format,
        b1_0.isbn,
        b1_0.name,
        b1_0.pdf_file_url,
        b1_0.publication_year,
        b1_0.short_details,
        b1_0.total_copies,
        b1_0.updated_at 
    from
        books b1_0 
    where
        b1_0.category_id=?
2025-08-28 16:12:37 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    select
        b1_0.category_id,
        b1_0.id,
        b1_0.about,
        b1_0.audio_file_url,
        b1_0.author,
        b1_0.available_copies,
        b1_0.book_cover_url,
        b1_0.created_at,
        b1_0.format,
        b1_0.isbn,
        b1_0.name,
        b1_0.pdf_file_url,
        b1_0.publication_year,
        b1_0.short_details,
        b1_0.total_copies,
        b1_0.updated_at 
    from
        books b1_0 
    where
        b1_0.category_id=?
2025-08-28 16:12:37 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    select
        b1_0.category_id,
        b1_0.id,
        b1_0.about,
        b1_0.audio_file_url,
        b1_0.author,
        b1_0.available_copies,
        b1_0.book_cover_url,
        b1_0.created_at,
        b1_0.format,
        b1_0.isbn,
        b1_0.name,
        b1_0.pdf_file_url,
        b1_0.publication_year,
        b1_0.short_details,
        b1_0.total_copies,
        b1_0.updated_at 
    from
        books b1_0 
    where
        b1_0.category_id=?
2025-08-28 16:12:37 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    select
        b1_0.category_id,
        b1_0.id,
        b1_0.about,
        b1_0.audio_file_url,
        b1_0.author,
        b1_0.available_copies,
        b1_0.book_cover_url,
        b1_0.created_at,
        b1_0.format,
        b1_0.isbn,
        b1_0.name,
        b1_0.pdf_file_url,
        b1_0.publication_year,
        b1_0.short_details,
        b1_0.total_copies,
        b1_0.updated_at 
    from
        books b1_0 
    where
        b1_0.category_id=?
2025-08-28 16:12:37 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    select
        b1_0.category_id,
        b1_0.id,
        b1_0.about,
        b1_0.audio_file_url,
        b1_0.author,
        b1_0.available_copies,
        b1_0.book_cover_url,
        b1_0.created_at,
        b1_0.format,
        b1_0.isbn,
        b1_0.name,
        b1_0.pdf_file_url,
        b1_0.publication_year,
        b1_0.short_details,
        b1_0.total_copies,
        b1_0.updated_at 
    from
        books b1_0 
    where
        b1_0.category_id=?
2025-08-28 16:12:37 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.address,
        u1_0.created_at,
        u1_0.date_of_birth,
        u1_0.email,
        u1_0.is_active,
        u1_0.name,
        u1_0.password_hash,
        u1_0.role,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.username=?
2025-08-28 16:12:37 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.created_at,
        c1_0.description,
        c1_0.name,
        c1_0.updated_at 
    from
        categories c1_0
2025-08-28 16:12:37 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        b1_0.category_id,
        b1_0.id,
        b1_0.about,
        b1_0.audio_file_url,
        b1_0.author,
        b1_0.available_copies,
        b1_0.book_cover_url,
        b1_0.created_at,
        b1_0.format,
        b1_0.isbn,
        b1_0.name,
        b1_0.pdf_file_url,
        b1_0.publication_year,
        b1_0.short_details,
        b1_0.total_copies,
        b1_0.updated_at 
    from
        books b1_0 
    where
        b1_0.category_id=?
2025-08-28 16:12:37 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        b1_0.category_id,
        b1_0.id,
        b1_0.about,
        b1_0.audio_file_url,
        b1_0.author,
        b1_0.available_copies,
        b1_0.book_cover_url,
        b1_0.created_at,
        b1_0.format,
        b1_0.isbn,
        b1_0.name,
        b1_0.pdf_file_url,
        b1_0.publication_year,
        b1_0.short_details,
        b1_0.total_copies,
        b1_0.updated_at 
    from
        books b1_0 
    where
        b1_0.category_id=?
2025-08-28 16:12:37 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        b1_0.category_id,
        b1_0.id,
        b1_0.about,
        b1_0.audio_file_url,
        b1_0.author,
        b1_0.available_copies,
        b1_0.book_cover_url,
        b1_0.created_at,
        b1_0.format,
        b1_0.isbn,
        b1_0.name,
        b1_0.pdf_file_url,
        b1_0.publication_year,
        b1_0.short_details,
        b1_0.total_copies,
        b1_0.updated_at 
    from
        books b1_0 
    where
        b1_0.category_id=?
2025-08-28 16:12:37 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        b1_0.category_id,
        b1_0.id,
        b1_0.about,
        b1_0.audio_file_url,
        b1_0.author,
        b1_0.available_copies,
        b1_0.book_cover_url,
        b1_0.created_at,
        b1_0.format,
        b1_0.isbn,
        b1_0.name,
        b1_0.pdf_file_url,
        b1_0.publication_year,
        b1_0.short_details,
        b1_0.total_copies,
        b1_0.updated_at 
    from
        books b1_0 
    where
        b1_0.category_id=?
2025-08-28 16:12:37 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        b1_0.category_id,
        b1_0.id,
        b1_0.about,
        b1_0.audio_file_url,
        b1_0.author,
        b1_0.available_copies,
        b1_0.book_cover_url,
        b1_0.created_at,
        b1_0.format,
        b1_0.isbn,
        b1_0.name,
        b1_0.pdf_file_url,
        b1_0.publication_year,
        b1_0.short_details,
        b1_0.total_copies,
        b1_0.updated_at 
    from
        books b1_0 
    where
        b1_0.category_id=?
2025-08-28 16:12:37 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        b1_0.category_id,
        b1_0.id,
        b1_0.about,
        b1_0.audio_file_url,
        b1_0.author,
        b1_0.available_copies,
        b1_0.book_cover_url,
        b1_0.created_at,
        b1_0.format,
        b1_0.isbn,
        b1_0.name,
        b1_0.pdf_file_url,
        b1_0.publication_year,
        b1_0.short_details,
        b1_0.total_copies,
        b1_0.updated_at 
    from
        books b1_0 
    where
        b1_0.category_id=?
2025-08-28 16:12:37 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        b1_0.category_id,
        b1_0.id,
        b1_0.about,
        b1_0.audio_file_url,
        b1_0.author,
        b1_0.available_copies,
        b1_0.book_cover_url,
        b1_0.created_at,
        b1_0.format,
        b1_0.isbn,
        b1_0.name,
        b1_0.pdf_file_url,
        b1_0.publication_year,
        b1_0.short_details,
        b1_0.total_copies,
        b1_0.updated_at 
    from
        books b1_0 
    where
        b1_0.category_id=?
2025-08-28 16:12:48 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.address,
        u1_0.created_at,
        u1_0.date_of_birth,
        u1_0.email,
        u1_0.is_active,
        u1_0.name,
        u1_0.password_hash,
        u1_0.role,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.username=?
2025-08-28 16:12:48 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    select
        dr1_0.id,
        dr1_0.admin_notes,
        dr1_0.author,
        dr1_0.book_title,
        dr1_0.created_at,
        dr1_0.description,
        dr1_0.isbn,
        dr1_0.status,
        dr1_0.updated_at,
        dr1_0.user_id 
    from
        donation_requests dr1_0 
    offset
        ? rows 
    fetch
        first ? rows only
2025-08-28 16:12:48 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.address,
        u1_0.created_at,
        u1_0.date_of_birth,
        u1_0.email,
        u1_0.is_active,
        u1_0.name,
        u1_0.password_hash,
        u1_0.role,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.id=?
2025-08-28 16:12:48 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    select
        b1_0.user_id,
        b1_0.id,
        b1_0.book_id,
        b1_0.borrow_date,
        b1_0.created_at,
        b1_0.due_date,
        b1_0.extension_count,
        b1_0.return_date,
        b1_0.status,
        b1_0.updated_at 
    from
        borrows b1_0 
    where
        b1_0.user_id=?
2025-08-28 16:12:48 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.address,
        u1_0.created_at,
        u1_0.date_of_birth,
        u1_0.email,
        u1_0.is_active,
        u1_0.name,
        u1_0.password_hash,
        u1_0.role,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.username=?
2025-08-28 16:12:48 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        dr1_0.id,
        dr1_0.admin_notes,
        dr1_0.author,
        dr1_0.book_title,
        dr1_0.created_at,
        dr1_0.description,
        dr1_0.isbn,
        dr1_0.status,
        dr1_0.updated_at,
        dr1_0.user_id 
    from
        donation_requests dr1_0 
    offset
        ? rows 
    fetch
        first ? rows only
2025-08-28 16:12:48 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.address,
        u1_0.created_at,
        u1_0.date_of_birth,
        u1_0.email,
        u1_0.is_active,
        u1_0.name,
        u1_0.password_hash,
        u1_0.role,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.id=?
2025-08-28 16:12:48 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        b1_0.user_id,
        b1_0.id,
        b1_0.book_id,
        b1_0.borrow_date,
        b1_0.created_at,
        b1_0.due_date,
        b1_0.extension_count,
        b1_0.return_date,
        b1_0.status,
        b1_0.updated_at 
    from
        borrows b1_0 
    where
        b1_0.user_id=?
2025-08-28 16:12:49 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.address,
        u1_0.created_at,
        u1_0.date_of_birth,
        u1_0.email,
        u1_0.is_active,
        u1_0.name,
        u1_0.password_hash,
        u1_0.role,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.username=?
2025-08-28 16:12:49 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.created_at,
        c1_0.description,
        c1_0.name,
        c1_0.updated_at 
    from
        categories c1_0
2025-08-28 16:12:49 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    select
        b1_0.category_id,
        b1_0.id,
        b1_0.about,
        b1_0.audio_file_url,
        b1_0.author,
        b1_0.available_copies,
        b1_0.book_cover_url,
        b1_0.created_at,
        b1_0.format,
        b1_0.isbn,
        b1_0.name,
        b1_0.pdf_file_url,
        b1_0.publication_year,
        b1_0.short_details,
        b1_0.total_copies,
        b1_0.updated_at 
    from
        books b1_0 
    where
        b1_0.category_id=?
2025-08-28 16:12:49 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    select
        b1_0.category_id,
        b1_0.id,
        b1_0.about,
        b1_0.audio_file_url,
        b1_0.author,
        b1_0.available_copies,
        b1_0.book_cover_url,
        b1_0.created_at,
        b1_0.format,
        b1_0.isbn,
        b1_0.name,
        b1_0.pdf_file_url,
        b1_0.publication_year,
        b1_0.short_details,
        b1_0.total_copies,
        b1_0.updated_at 
    from
        books b1_0 
    where
        b1_0.category_id=?
2025-08-28 16:12:49 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    select
        b1_0.category_id,
        b1_0.id,
        b1_0.about,
        b1_0.audio_file_url,
        b1_0.author,
        b1_0.available_copies,
        b1_0.book_cover_url,
        b1_0.created_at,
        b1_0.format,
        b1_0.isbn,
        b1_0.name,
        b1_0.pdf_file_url,
        b1_0.publication_year,
        b1_0.short_details,
        b1_0.total_copies,
        b1_0.updated_at 
    from
        books b1_0 
    where
        b1_0.category_id=?
2025-08-28 16:12:49 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    select
        b1_0.category_id,
        b1_0.id,
        b1_0.about,
        b1_0.audio_file_url,
        b1_0.author,
        b1_0.available_copies,
        b1_0.book_cover_url,
        b1_0.created_at,
        b1_0.format,
        b1_0.isbn,
        b1_0.name,
        b1_0.pdf_file_url,
        b1_0.publication_year,
        b1_0.short_details,
        b1_0.total_copies,
        b1_0.updated_at 
    from
        books b1_0 
    where
        b1_0.category_id=?
2025-08-28 16:12:49 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    select
        b1_0.category_id,
        b1_0.id,
        b1_0.about,
        b1_0.audio_file_url,
        b1_0.author,
        b1_0.available_copies,
        b1_0.book_cover_url,
        b1_0.created_at,
        b1_0.format,
        b1_0.isbn,
        b1_0.name,
        b1_0.pdf_file_url,
        b1_0.publication_year,
        b1_0.short_details,
        b1_0.total_copies,
        b1_0.updated_at 
    from
        books b1_0 
    where
        b1_0.category_id=?
2025-08-28 16:12:49 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    select
        b1_0.category_id,
        b1_0.id,
        b1_0.about,
        b1_0.audio_file_url,
        b1_0.author,
        b1_0.available_copies,
        b1_0.book_cover_url,
        b1_0.created_at,
        b1_0.format,
        b1_0.isbn,
        b1_0.name,
        b1_0.pdf_file_url,
        b1_0.publication_year,
        b1_0.short_details,
        b1_0.total_copies,
        b1_0.updated_at 
    from
        books b1_0 
    where
        b1_0.category_id=?
2025-08-28 16:12:49 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    select
        b1_0.category_id,
        b1_0.id,
        b1_0.about,
        b1_0.audio_file_url,
        b1_0.author,
        b1_0.available_copies,
        b1_0.book_cover_url,
        b1_0.created_at,
        b1_0.format,
        b1_0.isbn,
        b1_0.name,
        b1_0.pdf_file_url,
        b1_0.publication_year,
        b1_0.short_details,
        b1_0.total_copies,
        b1_0.updated_at 
    from
        books b1_0 
    where
        b1_0.category_id=?
2025-08-28 16:12:49 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.address,
        u1_0.created_at,
        u1_0.date_of_birth,
        u1_0.email,
        u1_0.is_active,
        u1_0.name,
        u1_0.password_hash,
        u1_0.role,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.username=?
2025-08-28 16:12:49 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.created_at,
        c1_0.description,
        c1_0.name,
        c1_0.updated_at 
    from
        categories c1_0
2025-08-28 16:12:49 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    select
        b1_0.category_id,
        b1_0.id,
        b1_0.about,
        b1_0.audio_file_url,
        b1_0.author,
        b1_0.available_copies,
        b1_0.book_cover_url,
        b1_0.created_at,
        b1_0.format,
        b1_0.isbn,
        b1_0.name,
        b1_0.pdf_file_url,
        b1_0.publication_year,
        b1_0.short_details,
        b1_0.total_copies,
        b1_0.updated_at 
    from
        books b1_0 
    where
        b1_0.category_id=?
2025-08-28 16:12:49 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    select
        b1_0.category_id,
        b1_0.id,
        b1_0.about,
        b1_0.audio_file_url,
        b1_0.author,
        b1_0.available_copies,
        b1_0.book_cover_url,
        b1_0.created_at,
        b1_0.format,
        b1_0.isbn,
        b1_0.name,
        b1_0.pdf_file_url,
        b1_0.publication_year,
        b1_0.short_details,
        b1_0.total_copies,
        b1_0.updated_at 
    from
        books b1_0 
    where
        b1_0.category_id=?
2025-08-28 16:12:49 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    select
        b1_0.category_id,
        b1_0.id,
        b1_0.about,
        b1_0.audio_file_url,
        b1_0.author,
        b1_0.available_copies,
        b1_0.book_cover_url,
        b1_0.created_at,
        b1_0.format,
        b1_0.isbn,
        b1_0.name,
        b1_0.pdf_file_url,
        b1_0.publication_year,
        b1_0.short_details,
        b1_0.total_copies,
        b1_0.updated_at 
    from
        books b1_0 
    where
        b1_0.category_id=?
2025-08-28 16:12:49 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    select
        b1_0.category_id,
        b1_0.id,
        b1_0.about,
        b1_0.audio_file_url,
        b1_0.author,
        b1_0.available_copies,
        b1_0.book_cover_url,
        b1_0.created_at,
        b1_0.format,
        b1_0.isbn,
        b1_0.name,
        b1_0.pdf_file_url,
        b1_0.publication_year,
        b1_0.short_details,
        b1_0.total_copies,
        b1_0.updated_at 
    from
        books b1_0 
    where
        b1_0.category_id=?
2025-08-28 16:12:49 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    select
        b1_0.category_id,
        b1_0.id,
        b1_0.about,
        b1_0.audio_file_url,
        b1_0.author,
        b1_0.available_copies,
        b1_0.book_cover_url,
        b1_0.created_at,
        b1_0.format,
        b1_0.isbn,
        b1_0.name,
        b1_0.pdf_file_url,
        b1_0.publication_year,
        b1_0.short_details,
        b1_0.total_copies,
        b1_0.updated_at 
    from
        books b1_0 
    where
        b1_0.category_id=?
2025-08-28 16:12:49 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    select
        b1_0.category_id,
        b1_0.id,
        b1_0.about,
        b1_0.audio_file_url,
        b1_0.author,
        b1_0.available_copies,
        b1_0.book_cover_url,
        b1_0.created_at,
        b1_0.format,
        b1_0.isbn,
        b1_0.name,
        b1_0.pdf_file_url,
        b1_0.publication_year,
        b1_0.short_details,
        b1_0.total_copies,
        b1_0.updated_at 
    from
        books b1_0 
    where
        b1_0.category_id=?
2025-08-28 16:12:49 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    select
        b1_0.category_id,
        b1_0.id,
        b1_0.about,
        b1_0.audio_file_url,
        b1_0.author,
        b1_0.available_copies,
        b1_0.book_cover_url,
        b1_0.created_at,
        b1_0.format,
        b1_0.isbn,
        b1_0.name,
        b1_0.pdf_file_url,
        b1_0.publication_year,
        b1_0.short_details,
        b1_0.total_copies,
        b1_0.updated_at 
    from
        books b1_0 
    where
        b1_0.category_id=?
2025-08-28 16:12:58 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.address,
        u1_0.created_at,
        u1_0.date_of_birth,
        u1_0.email,
        u1_0.is_active,
        u1_0.name,
        u1_0.password_hash,
        u1_0.role,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.username=?
2025-08-28 16:12:58 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        dr1_0.id,
        dr1_0.admin_notes,
        dr1_0.author,
        dr1_0.book_title,
        dr1_0.created_at,
        dr1_0.description,
        dr1_0.isbn,
        dr1_0.status,
        dr1_0.updated_at,
        dr1_0.user_id 
    from
        donation_requests dr1_0 
    offset
        ? rows 
    fetch
        first ? rows only
2025-08-28 16:12:58 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.address,
        u1_0.created_at,
        u1_0.date_of_birth,
        u1_0.email,
        u1_0.is_active,
        u1_0.name,
        u1_0.password_hash,
        u1_0.role,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.id=?
2025-08-28 16:12:58 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        b1_0.user_id,
        b1_0.id,
        b1_0.book_id,
        b1_0.borrow_date,
        b1_0.created_at,
        b1_0.due_date,
        b1_0.extension_count,
        b1_0.return_date,
        b1_0.status,
        b1_0.updated_at 
    from
        borrows b1_0 
    where
        b1_0.user_id=?
2025-08-28 16:12:58 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.address,
        u1_0.created_at,
        u1_0.date_of_birth,
        u1_0.email,
        u1_0.is_active,
        u1_0.name,
        u1_0.password_hash,
        u1_0.role,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.username=?
2025-08-28 16:12:58 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    select
        dr1_0.id,
        dr1_0.admin_notes,
        dr1_0.author,
        dr1_0.book_title,
        dr1_0.created_at,
        dr1_0.description,
        dr1_0.isbn,
        dr1_0.status,
        dr1_0.updated_at,
        dr1_0.user_id 
    from
        donation_requests dr1_0 
    offset
        ? rows 
    fetch
        first ? rows only
2025-08-28 16:12:58 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.address,
        u1_0.created_at,
        u1_0.date_of_birth,
        u1_0.email,
        u1_0.is_active,
        u1_0.name,
        u1_0.password_hash,
        u1_0.role,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.id=?
2025-08-28 16:12:58 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    select
        b1_0.user_id,
        b1_0.id,
        b1_0.book_id,
        b1_0.borrow_date,
        b1_0.created_at,
        b1_0.due_date,
        b1_0.extension_count,
        b1_0.return_date,
        b1_0.status,
        b1_0.updated_at 
    from
        borrows b1_0 
    where
        b1_0.user_id=?
2025-08-28 16:13:04 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.address,
        u1_0.created_at,
        u1_0.date_of_birth,
        u1_0.email,
        u1_0.is_active,
        u1_0.name,
        u1_0.password_hash,
        u1_0.role,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.username=?
2025-08-28 16:13:04 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    select
        dr1_0.id,
        dr1_0.admin_notes,
        dr1_0.author,
        dr1_0.book_title,
        dr1_0.created_at,
        dr1_0.description,
        dr1_0.isbn,
        dr1_0.status,
        dr1_0.updated_at,
        dr1_0.user_id 
    from
        donation_requests dr1_0 
    where
        dr1_0.id=?
2025-08-28 16:13:04 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.address,
        u1_0.created_at,
        u1_0.date_of_birth,
        u1_0.email,
        u1_0.is_active,
        u1_0.name,
        u1_0.password_hash,
        u1_0.role,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.id=?
2025-08-28 16:13:04 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    select
        b1_0.user_id,
        b1_0.id,
        b1_0.book_id,
        b1_0.borrow_date,
        b1_0.created_at,
        b1_0.due_date,
        b1_0.extension_count,
        b1_0.return_date,
        b1_0.status,
        b1_0.updated_at 
    from
        borrows b1_0 
    where
        b1_0.user_id=?
2025-08-28 16:13:04 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    update
        donation_requests 
    set
        admin_notes=?,
        author=?,
        book_title=?,
        description=?,
        isbn=?,
        status=?,
        updated_at=?,
        user_id=? 
    where
        id=?
2025-08-28 16:13:04 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.address,
        u1_0.created_at,
        u1_0.date_of_birth,
        u1_0.email,
        u1_0.is_active,
        u1_0.name,
        u1_0.password_hash,
        u1_0.role,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.username=?
2025-08-28 16:13:04 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        dr1_0.id,
        dr1_0.admin_notes,
        dr1_0.author,
        dr1_0.book_title,
        dr1_0.created_at,
        dr1_0.description,
        dr1_0.isbn,
        dr1_0.status,
        dr1_0.updated_at,
        dr1_0.user_id 
    from
        donation_requests dr1_0 
    offset
        ? rows 
    fetch
        first ? rows only
2025-08-28 16:13:04 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.address,
        u1_0.created_at,
        u1_0.date_of_birth,
        u1_0.email,
        u1_0.is_active,
        u1_0.name,
        u1_0.password_hash,
        u1_0.role,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.id=?
2025-08-28 16:13:04 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        b1_0.user_id,
        b1_0.id,
        b1_0.book_id,
        b1_0.borrow_date,
        b1_0.created_at,
        b1_0.due_date,
        b1_0.extension_count,
        b1_0.return_date,
        b1_0.status,
        b1_0.updated_at 
    from
        borrows b1_0 
    where
        b1_0.user_id=?
2025-08-28 16:13:21 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.address,
        u1_0.created_at,
        u1_0.date_of_birth,
        u1_0.email,
        u1_0.is_active,
        u1_0.name,
        u1_0.password_hash,
        u1_0.role,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.username=?
2025-08-28 16:13:21 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.address,
        u1_0.created_at,
        u1_0.date_of_birth,
        u1_0.email,
        u1_0.is_active,
        u1_0.name,
        u1_0.password_hash,
        u1_0.role,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.username=?
2025-08-28 16:13:21 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    select
        b1_0.id,
        b1_0.about,
        b1_0.audio_file_url,
        b1_0.author,
        b1_0.available_copies,
        b1_0.book_cover_url,
        b1_0.category_id,
        b1_0.created_at,
        b1_0.format,
        b1_0.isbn,
        b1_0.name,
        b1_0.pdf_file_url,
        b1_0.publication_year,
        b1_0.short_details,
        b1_0.total_copies,
        b1_0.updated_at 
    from
        books b1_0 
    left join
        categories c1_0 
            on c1_0.id=b1_0.category_id 
    where
        c1_0.id=? 
    fetch
        first ? rows only
2025-08-28 16:13:21 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    select
        b1_0.id,
        b1_0.about,
        b1_0.audio_file_url,
        b1_0.author,
        b1_0.available_copies,
        b1_0.book_cover_url,
        b1_0.category_id,
        b1_0.created_at,
        b1_0.format,
        b1_0.isbn,
        b1_0.name,
        b1_0.pdf_file_url,
        b1_0.publication_year,
        b1_0.short_details,
        b1_0.total_copies,
        b1_0.updated_at 
    from
        books b1_0 
    offset
        ? rows 
    fetch
        first ? rows only
2025-08-28 16:13:21 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.created_at,
        c1_0.description,
        c1_0.name,
        c1_0.updated_at 
    from
        categories c1_0 
    where
        c1_0.id=?
2025-08-28 16:13:21 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    select
        b1_0.category_id,
        b1_0.id,
        b1_0.about,
        b1_0.audio_file_url,
        b1_0.author,
        b1_0.available_copies,
        b1_0.book_cover_url,
        b1_0.created_at,
        b1_0.format,
        b1_0.isbn,
        b1_0.name,
        b1_0.pdf_file_url,
        b1_0.publication_year,
        b1_0.short_details,
        b1_0.total_copies,
        b1_0.updated_at 
    from
        books b1_0 
    where
        b1_0.category_id=?
2025-08-28 16:13:21 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    select
        r1_0.book_id,
        r1_0.id,
        r1_0.comment,
        r1_0.created_at,
        r1_0.rating,
        r1_0.updated_at,
        r1_0.user_id 
    from
        reviews r1_0 
    where
        r1_0.book_id=?
2025-08-28 16:13:21 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.created_at,
        c1_0.description,
        c1_0.name,
        c1_0.updated_at 
    from
        categories c1_0 
    where
        c1_0.id=?
2025-08-28 16:13:21 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    select
        b1_0.category_id,
        b1_0.id,
        b1_0.about,
        b1_0.audio_file_url,
        b1_0.author,
        b1_0.available_copies,
        b1_0.book_cover_url,
        b1_0.created_at,
        b1_0.format,
        b1_0.isbn,
        b1_0.name,
        b1_0.pdf_file_url,
        b1_0.publication_year,
        b1_0.short_details,
        b1_0.total_copies,
        b1_0.updated_at 
    from
        books b1_0 
    where
        b1_0.category_id=?
2025-08-28 16:13:21 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    select
        r1_0.book_id,
        r1_0.id,
        r1_0.comment,
        r1_0.created_at,
        r1_0.rating,
        r1_0.updated_at,
        r1_0.user_id 
    from
        reviews r1_0 
    where
        r1_0.book_id=?
2025-08-28 16:13:21 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    select
        r1_0.book_id,
        r1_0.id,
        r1_0.comment,
        r1_0.created_at,
        r1_0.rating,
        r1_0.updated_at,
        r1_0.user_id 
    from
        reviews r1_0 
    where
        r1_0.book_id=?
2025-08-28 16:13:21 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.created_at,
        c1_0.description,
        c1_0.name,
        c1_0.updated_at 
    from
        categories c1_0 
    where
        c1_0.id=?
2025-08-28 16:13:21 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    select
        b1_0.category_id,
        b1_0.id,
        b1_0.about,
        b1_0.audio_file_url,
        b1_0.author,
        b1_0.available_copies,
        b1_0.book_cover_url,
        b1_0.created_at,
        b1_0.format,
        b1_0.isbn,
        b1_0.name,
        b1_0.pdf_file_url,
        b1_0.publication_year,
        b1_0.short_details,
        b1_0.total_copies,
        b1_0.updated_at 
    from
        books b1_0 
    where
        b1_0.category_id=?
2025-08-28 16:13:21 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.address,
        u1_0.created_at,
        u1_0.date_of_birth,
        u1_0.email,
        u1_0.is_active,
        u1_0.name,
        u1_0.password_hash,
        u1_0.role,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.username=?
2025-08-28 16:13:21 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    select
        r1_0.book_id,
        r1_0.id,
        r1_0.comment,
        r1_0.created_at,
        r1_0.rating,
        r1_0.updated_at,
        r1_0.user_id 
    from
        reviews r1_0 
    where
        r1_0.book_id=?
2025-08-28 16:13:21 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.created_at,
        c1_0.description,
        c1_0.name,
        c1_0.updated_at 
    from
        categories c1_0 
    where
        c1_0.id=?
2025-08-28 16:13:21 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    select
        b1_0.category_id,
        b1_0.id,
        b1_0.about,
        b1_0.audio_file_url,
        b1_0.author,
        b1_0.available_copies,
        b1_0.book_cover_url,
        b1_0.created_at,
        b1_0.format,
        b1_0.isbn,
        b1_0.name,
        b1_0.pdf_file_url,
        b1_0.publication_year,
        b1_0.short_details,
        b1_0.total_copies,
        b1_0.updated_at 
    from
        books b1_0 
    where
        b1_0.category_id=?
2025-08-28 16:13:21 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    select
        r1_0.book_id,
        r1_0.id,
        r1_0.comment,
        r1_0.created_at,
        r1_0.rating,
        r1_0.updated_at,
        r1_0.user_id 
    from
        reviews r1_0 
    where
        r1_0.book_id=?
2025-08-28 16:13:21 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.created_at,
        c1_0.description,
        c1_0.name,
        c1_0.updated_at 
    from
        categories c1_0 
    where
        c1_0.id=?
2025-08-28 16:13:21 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    select
        b1_0.category_id,
        b1_0.id,
        b1_0.about,
        b1_0.audio_file_url,
        b1_0.author,
        b1_0.available_copies,
        b1_0.book_cover_url,
        b1_0.created_at,
        b1_0.format,
        b1_0.isbn,
        b1_0.name,
        b1_0.pdf_file_url,
        b1_0.publication_year,
        b1_0.short_details,
        b1_0.total_copies,
        b1_0.updated_at 
    from
        books b1_0 
    where
        b1_0.category_id=?
2025-08-28 16:13:21 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    select
        r1_0.book_id,
        r1_0.id,
        r1_0.comment,
        r1_0.created_at,
        r1_0.rating,
        r1_0.updated_at,
        r1_0.user_id 
    from
        reviews r1_0 
    where
        r1_0.book_id=?
2025-08-28 16:13:21 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        b1_0.id,
        b1_0.about,
        b1_0.audio_file_url,
        b1_0.author,
        b1_0.available_copies,
        b1_0.book_cover_url,
        b1_0.category_id,
        b1_0.created_at,
        b1_0.format,
        b1_0.isbn,
        b1_0.name,
        b1_0.pdf_file_url,
        b1_0.publication_year,
        b1_0.short_details,
        b1_0.total_copies,
        b1_0.updated_at 
    from
        books b1_0 
    left join
        categories c1_0 
            on c1_0.id=b1_0.category_id 
    where
        c1_0.id=? 
    fetch
        first ? rows only
2025-08-28 16:13:21 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.created_at,
        c1_0.description,
        c1_0.name,
        c1_0.updated_at 
    from
        categories c1_0 
    where
        c1_0.id=?
2025-08-28 16:13:21 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    select
        b1_0.category_id,
        b1_0.id,
        b1_0.about,
        b1_0.audio_file_url,
        b1_0.author,
        b1_0.available_copies,
        b1_0.book_cover_url,
        b1_0.created_at,
        b1_0.format,
        b1_0.isbn,
        b1_0.name,
        b1_0.pdf_file_url,
        b1_0.publication_year,
        b1_0.short_details,
        b1_0.total_copies,
        b1_0.updated_at 
    from
        books b1_0 
    where
        b1_0.category_id=?
2025-08-28 16:13:21 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.created_at,
        c1_0.description,
        c1_0.name,
        c1_0.updated_at 
    from
        categories c1_0 
    where
        c1_0.id=?
2025-08-28 16:13:21 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    select
        r1_0.book_id,
        r1_0.id,
        r1_0.comment,
        r1_0.created_at,
        r1_0.rating,
        r1_0.updated_at,
        r1_0.user_id 
    from
        reviews r1_0 
    where
        r1_0.book_id=?
2025-08-28 16:13:21 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.created_at,
        c1_0.description,
        c1_0.name,
        c1_0.updated_at 
    from
        categories c1_0 
    where
        c1_0.id=?
2025-08-28 16:13:21 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        b1_0.category_id,
        b1_0.id,
        b1_0.about,
        b1_0.audio_file_url,
        b1_0.author,
        b1_0.available_copies,
        b1_0.book_cover_url,
        b1_0.created_at,
        b1_0.format,
        b1_0.isbn,
        b1_0.name,
        b1_0.pdf_file_url,
        b1_0.publication_year,
        b1_0.short_details,
        b1_0.total_copies,
        b1_0.updated_at 
    from
        books b1_0 
    where
        b1_0.category_id=?
2025-08-28 16:13:21 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    select
        b1_0.category_id,
        b1_0.id,
        b1_0.about,
        b1_0.audio_file_url,
        b1_0.author,
        b1_0.available_copies,
        b1_0.book_cover_url,
        b1_0.created_at,
        b1_0.format,
        b1_0.isbn,
        b1_0.name,
        b1_0.pdf_file_url,
        b1_0.publication_year,
        b1_0.short_details,
        b1_0.total_copies,
        b1_0.updated_at 
    from
        books b1_0 
    where
        b1_0.category_id=?
2025-08-28 16:13:21 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        r1_0.book_id,
        r1_0.id,
        r1_0.comment,
        r1_0.created_at,
        r1_0.rating,
        r1_0.updated_at,
        r1_0.user_id 
    from
        reviews r1_0 
    where
        r1_0.book_id=?
2025-08-28 16:13:21 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    select
        r1_0.book_id,
        r1_0.id,
        r1_0.comment,
        r1_0.created_at,
        r1_0.rating,
        r1_0.updated_at,
        r1_0.user_id 
    from
        reviews r1_0 
    where
        r1_0.book_id=?
2025-08-28 16:13:21 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    select
        r1_0.book_id,
        r1_0.id,
        r1_0.comment,
        r1_0.created_at,
        r1_0.rating,
        r1_0.updated_at,
        r1_0.user_id 
    from
        reviews r1_0 
    where
        r1_0.book_id=?
2025-08-28 16:13:21 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    select
        r1_0.book_id,
        r1_0.id,
        r1_0.comment,
        r1_0.created_at,
        r1_0.rating,
        r1_0.updated_at,
        r1_0.user_id 
    from
        reviews r1_0 
    where
        r1_0.book_id=?
2025-08-28 16:13:21 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    select
        r1_0.book_id,
        r1_0.id,
        r1_0.comment,
        r1_0.created_at,
        r1_0.rating,
        r1_0.updated_at,
        r1_0.user_id 
    from
        reviews r1_0 
    where
        r1_0.book_id=?
2025-08-28 16:13:21 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.created_at,
        c1_0.description,
        c1_0.name,
        c1_0.updated_at 
    from
        categories c1_0 
    where
        c1_0.id=?
2025-08-28 16:13:21 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    select
        b1_0.category_id,
        b1_0.id,
        b1_0.about,
        b1_0.audio_file_url,
        b1_0.author,
        b1_0.available_copies,
        b1_0.book_cover_url,
        b1_0.created_at,
        b1_0.format,
        b1_0.isbn,
        b1_0.name,
        b1_0.pdf_file_url,
        b1_0.publication_year,
        b1_0.short_details,
        b1_0.total_copies,
        b1_0.updated_at 
    from
        books b1_0 
    where
        b1_0.category_id=?
2025-08-28 16:13:21 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    select
        r1_0.book_id,
        r1_0.id,
        r1_0.comment,
        r1_0.created_at,
        r1_0.rating,
        r1_0.updated_at,
        r1_0.user_id 
    from
        reviews r1_0 
    where
        r1_0.book_id=?
2025-08-28 16:13:21 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.address,
        u1_0.created_at,
        u1_0.date_of_birth,
        u1_0.email,
        u1_0.is_active,
        u1_0.name,
        u1_0.password_hash,
        u1_0.role,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.username=?
2025-08-28 16:13:21 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    select
        b1_0.id,
        b1_0.about,
        b1_0.audio_file_url,
        b1_0.author,
        b1_0.available_copies,
        b1_0.book_cover_url,
        b1_0.category_id,
        b1_0.created_at,
        b1_0.format,
        b1_0.isbn,
        b1_0.name,
        b1_0.pdf_file_url,
        b1_0.publication_year,
        b1_0.short_details,
        b1_0.total_copies,
        b1_0.updated_at 
    from
        books b1_0 
    offset
        ? rows 
    fetch
        first ? rows only
2025-08-28 16:13:21 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.created_at,
        c1_0.description,
        c1_0.name,
        c1_0.updated_at 
    from
        categories c1_0 
    where
        c1_0.id=?
2025-08-28 16:13:21 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    select
        b1_0.category_id,
        b1_0.id,
        b1_0.about,
        b1_0.audio_file_url,
        b1_0.author,
        b1_0.available_copies,
        b1_0.book_cover_url,
        b1_0.created_at,
        b1_0.format,
        b1_0.isbn,
        b1_0.name,
        b1_0.pdf_file_url,
        b1_0.publication_year,
        b1_0.short_details,
        b1_0.total_copies,
        b1_0.updated_at 
    from
        books b1_0 
    where
        b1_0.category_id=?
2025-08-28 16:13:21 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    select
        r1_0.book_id,
        r1_0.id,
        r1_0.comment,
        r1_0.created_at,
        r1_0.rating,
        r1_0.updated_at,
        r1_0.user_id 
    from
        reviews r1_0 
    where
        r1_0.book_id=?
2025-08-28 16:13:21 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    select
        r1_0.book_id,
        r1_0.id,
        r1_0.comment,
        r1_0.created_at,
        r1_0.rating,
        r1_0.updated_at,
        r1_0.user_id 
    from
        reviews r1_0 
    where
        r1_0.book_id=?
2025-08-28 16:13:21 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.created_at,
        c1_0.description,
        c1_0.name,
        c1_0.updated_at 
    from
        categories c1_0 
    where
        c1_0.id=?
2025-08-28 16:13:21 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    select
        b1_0.category_id,
        b1_0.id,
        b1_0.about,
        b1_0.audio_file_url,
        b1_0.author,
        b1_0.available_copies,
        b1_0.book_cover_url,
        b1_0.created_at,
        b1_0.format,
        b1_0.isbn,
        b1_0.name,
        b1_0.pdf_file_url,
        b1_0.publication_year,
        b1_0.short_details,
        b1_0.total_copies,
        b1_0.updated_at 
    from
        books b1_0 
    where
        b1_0.category_id=?
2025-08-28 16:13:21 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    select
        r1_0.book_id,
        r1_0.id,
        r1_0.comment,
        r1_0.created_at,
        r1_0.rating,
        r1_0.updated_at,
        r1_0.user_id 
    from
        reviews r1_0 
    where
        r1_0.book_id=?
2025-08-28 16:13:21 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.created_at,
        c1_0.description,
        c1_0.name,
        c1_0.updated_at 
    from
        categories c1_0 
    where
        c1_0.id=?
2025-08-28 16:13:21 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    select
        b1_0.category_id,
        b1_0.id,
        b1_0.about,
        b1_0.audio_file_url,
        b1_0.author,
        b1_0.available_copies,
        b1_0.book_cover_url,
        b1_0.created_at,
        b1_0.format,
        b1_0.isbn,
        b1_0.name,
        b1_0.pdf_file_url,
        b1_0.publication_year,
        b1_0.short_details,
        b1_0.total_copies,
        b1_0.updated_at 
    from
        books b1_0 
    where
        b1_0.category_id=?
2025-08-28 16:13:21 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    select
        r1_0.book_id,
        r1_0.id,
        r1_0.comment,
        r1_0.created_at,
        r1_0.rating,
        r1_0.updated_at,
        r1_0.user_id 
    from
        reviews r1_0 
    where
        r1_0.book_id=?
2025-08-28 16:13:21 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.created_at,
        c1_0.description,
        c1_0.name,
        c1_0.updated_at 
    from
        categories c1_0 
    where
        c1_0.id=?
2025-08-28 16:13:21 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    select
        b1_0.category_id,
        b1_0.id,
        b1_0.about,
        b1_0.audio_file_url,
        b1_0.author,
        b1_0.available_copies,
        b1_0.book_cover_url,
        b1_0.created_at,
        b1_0.format,
        b1_0.isbn,
        b1_0.name,
        b1_0.pdf_file_url,
        b1_0.publication_year,
        b1_0.short_details,
        b1_0.total_copies,
        b1_0.updated_at 
    from
        books b1_0 
    where
        b1_0.category_id=?
2025-08-28 16:13:21 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    select
        r1_0.book_id,
        r1_0.id,
        r1_0.comment,
        r1_0.created_at,
        r1_0.rating,
        r1_0.updated_at,
        r1_0.user_id 
    from
        reviews r1_0 
    where
        r1_0.book_id=?
2025-08-28 16:13:21 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.created_at,
        c1_0.description,
        c1_0.name,
        c1_0.updated_at 
    from
        categories c1_0 
    where
        c1_0.id=?
2025-08-28 16:13:21 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    select
        b1_0.category_id,
        b1_0.id,
        b1_0.about,
        b1_0.audio_file_url,
        b1_0.author,
        b1_0.available_copies,
        b1_0.book_cover_url,
        b1_0.created_at,
        b1_0.format,
        b1_0.isbn,
        b1_0.name,
        b1_0.pdf_file_url,
        b1_0.publication_year,
        b1_0.short_details,
        b1_0.total_copies,
        b1_0.updated_at 
    from
        books b1_0 
    where
        b1_0.category_id=?
2025-08-28 16:13:21 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    select
        r1_0.book_id,
        r1_0.id,
        r1_0.comment,
        r1_0.created_at,
        r1_0.rating,
        r1_0.updated_at,
        r1_0.user_id 
    from
        reviews r1_0 
    where
        r1_0.book_id=?
2025-08-28 16:13:21 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.created_at,
        c1_0.description,
        c1_0.name,
        c1_0.updated_at 
    from
        categories c1_0 
    where
        c1_0.id=?
2025-08-28 16:13:21 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    select
        b1_0.category_id,
        b1_0.id,
        b1_0.about,
        b1_0.audio_file_url,
        b1_0.author,
        b1_0.available_copies,
        b1_0.book_cover_url,
        b1_0.created_at,
        b1_0.format,
        b1_0.isbn,
        b1_0.name,
        b1_0.pdf_file_url,
        b1_0.publication_year,
        b1_0.short_details,
        b1_0.total_copies,
        b1_0.updated_at 
    from
        books b1_0 
    where
        b1_0.category_id=?
2025-08-28 16:13:21 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    select
        r1_0.book_id,
        r1_0.id,
        r1_0.comment,
        r1_0.created_at,
        r1_0.rating,
        r1_0.updated_at,
        r1_0.user_id 
    from
        reviews r1_0 
    where
        r1_0.book_id=?
2025-08-28 16:13:21 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    select
        r1_0.book_id,
        r1_0.id,
        r1_0.comment,
        r1_0.created_at,
        r1_0.rating,
        r1_0.updated_at,
        r1_0.user_id 
    from
        reviews r1_0 
    where
        r1_0.book_id=?
2025-08-28 16:13:21 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    select
        r1_0.book_id,
        r1_0.id,
        r1_0.comment,
        r1_0.created_at,
        r1_0.rating,
        r1_0.updated_at,
        r1_0.user_id 
    from
        reviews r1_0 
    where
        r1_0.book_id=?
2025-08-28 16:13:21 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    select
        r1_0.book_id,
        r1_0.id,
        r1_0.comment,
        r1_0.created_at,
        r1_0.rating,
        r1_0.updated_at,
        r1_0.user_id 
    from
        reviews r1_0 
    where
        r1_0.book_id=?
2025-08-28 16:13:21 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.created_at,
        c1_0.description,
        c1_0.name,
        c1_0.updated_at 
    from
        categories c1_0 
    where
        c1_0.id=?
2025-08-28 16:13:21 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    select
        b1_0.category_id,
        b1_0.id,
        b1_0.about,
        b1_0.audio_file_url,
        b1_0.author,
        b1_0.available_copies,
        b1_0.book_cover_url,
        b1_0.created_at,
        b1_0.format,
        b1_0.isbn,
        b1_0.name,
        b1_0.pdf_file_url,
        b1_0.publication_year,
        b1_0.short_details,
        b1_0.total_copies,
        b1_0.updated_at 
    from
        books b1_0 
    where
        b1_0.category_id=?
2025-08-28 16:13:21 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    select
        r1_0.book_id,
        r1_0.id,
        r1_0.comment,
        r1_0.created_at,
        r1_0.rating,
        r1_0.updated_at,
        r1_0.user_id 
    from
        reviews r1_0 
    where
        r1_0.book_id=?
2025-08-28 16:13:26 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.address,
        u1_0.created_at,
        u1_0.date_of_birth,
        u1_0.email,
        u1_0.is_active,
        u1_0.name,
        u1_0.password_hash,
        u1_0.role,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.username=?
2025-08-28 16:13:26 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    select
        b1_0.id,
        b1_0.about,
        b1_0.audio_file_url,
        b1_0.author,
        b1_0.available_copies,
        b1_0.book_cover_url,
        b1_0.category_id,
        b1_0.created_at,
        b1_0.format,
        b1_0.isbn,
        b1_0.name,
        b1_0.pdf_file_url,
        b1_0.publication_year,
        b1_0.short_details,
        b1_0.total_copies,
        b1_0.updated_at 
    from
        books b1_0 
    where
        b1_0.id=?
2025-08-28 16:13:26 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.created_at,
        c1_0.description,
        c1_0.name,
        c1_0.updated_at 
    from
        categories c1_0 
    where
        c1_0.id=?
2025-08-28 16:13:26 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    select
        b1_0.category_id,
        b1_0.id,
        b1_0.about,
        b1_0.audio_file_url,
        b1_0.author,
        b1_0.available_copies,
        b1_0.book_cover_url,
        b1_0.created_at,
        b1_0.format,
        b1_0.isbn,
        b1_0.name,
        b1_0.pdf_file_url,
        b1_0.publication_year,
        b1_0.short_details,
        b1_0.total_copies,
        b1_0.updated_at 
    from
        books b1_0 
    where
        b1_0.category_id=?
2025-08-28 16:13:26 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    select
        r1_0.book_id,
        r1_0.id,
        r1_0.comment,
        r1_0.created_at,
        r1_0.rating,
        r1_0.updated_at,
        r1_0.user_id 
    from
        reviews r1_0 
    where
        r1_0.book_id=?
2025-08-28 16:13:26 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    update
        books 
    set
        about=?,
        audio_file_url=?,
        author=?,
        available_copies=?,
        book_cover_url=?,
        category_id=?,
        format=?,
        isbn=?,
        name=?,
        pdf_file_url=?,
        publication_year=?,
        short_details=?,
        total_copies=?,
        updated_at=? 
    where
        id=?
2025-08-28 16:13:26 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.address,
        u1_0.created_at,
        u1_0.date_of_birth,
        u1_0.email,
        u1_0.is_active,
        u1_0.name,
        u1_0.password_hash,
        u1_0.role,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.username=?
2025-08-28 16:13:26 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.address,
        u1_0.created_at,
        u1_0.date_of_birth,
        u1_0.email,
        u1_0.is_active,
        u1_0.name,
        u1_0.password_hash,
        u1_0.role,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.username=?
2025-08-28 16:13:26 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    select
        b1_0.id,
        b1_0.about,
        b1_0.audio_file_url,
        b1_0.author,
        b1_0.available_copies,
        b1_0.book_cover_url,
        b1_0.category_id,
        b1_0.created_at,
        b1_0.format,
        b1_0.isbn,
        b1_0.name,
        b1_0.pdf_file_url,
        b1_0.publication_year,
        b1_0.short_details,
        b1_0.total_copies,
        b1_0.updated_at 
    from
        books b1_0 
    offset
        ? rows 
    fetch
        first ? rows only
2025-08-28 16:13:26 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.created_at,
        c1_0.description,
        c1_0.name,
        c1_0.updated_at 
    from
        categories c1_0 
    where
        c1_0.id=?
2025-08-28 16:13:26 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    select
        b1_0.category_id,
        b1_0.id,
        b1_0.about,
        b1_0.audio_file_url,
        b1_0.author,
        b1_0.available_copies,
        b1_0.book_cover_url,
        b1_0.created_at,
        b1_0.format,
        b1_0.isbn,
        b1_0.name,
        b1_0.pdf_file_url,
        b1_0.publication_year,
        b1_0.short_details,
        b1_0.total_copies,
        b1_0.updated_at 
    from
        books b1_0 
    where
        b1_0.category_id=?
2025-08-28 16:13:26 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    select
        r1_0.book_id,
        r1_0.id,
        r1_0.comment,
        r1_0.created_at,
        r1_0.rating,
        r1_0.updated_at,
        r1_0.user_id 
    from
        reviews r1_0 
    where
        r1_0.book_id=?
2025-08-28 16:13:26 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.created_at,
        c1_0.description,
        c1_0.name,
        c1_0.updated_at 
    from
        categories c1_0 
    where
        c1_0.id=?
2025-08-28 16:13:26 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    select
        b1_0.category_id,
        b1_0.id,
        b1_0.about,
        b1_0.audio_file_url,
        b1_0.author,
        b1_0.available_copies,
        b1_0.book_cover_url,
        b1_0.created_at,
        b1_0.format,
        b1_0.isbn,
        b1_0.name,
        b1_0.pdf_file_url,
        b1_0.publication_year,
        b1_0.short_details,
        b1_0.total_copies,
        b1_0.updated_at 
    from
        books b1_0 
    where
        b1_0.category_id=?
2025-08-28 16:13:26 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    select
        r1_0.book_id,
        r1_0.id,
        r1_0.comment,
        r1_0.created_at,
        r1_0.rating,
        r1_0.updated_at,
        r1_0.user_id 
    from
        reviews r1_0 
    where
        r1_0.book_id=?
2025-08-28 16:13:26 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.created_at,
        c1_0.description,
        c1_0.name,
        c1_0.updated_at 
    from
        categories c1_0 
    where
        c1_0.id=?
2025-08-28 16:13:26 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    select
        b1_0.category_id,
        b1_0.id,
        b1_0.about,
        b1_0.audio_file_url,
        b1_0.author,
        b1_0.available_copies,
        b1_0.book_cover_url,
        b1_0.created_at,
        b1_0.format,
        b1_0.isbn,
        b1_0.name,
        b1_0.pdf_file_url,
        b1_0.publication_year,
        b1_0.short_details,
        b1_0.total_copies,
        b1_0.updated_at 
    from
        books b1_0 
    where
        b1_0.category_id=?
2025-08-28 16:13:26 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    select
        b1_0.id,
        b1_0.about,
        b1_0.audio_file_url,
        b1_0.author,
        b1_0.available_copies,
        b1_0.book_cover_url,
        b1_0.category_id,
        b1_0.created_at,
        b1_0.format,
        b1_0.isbn,
        b1_0.name,
        b1_0.pdf_file_url,
        b1_0.publication_year,
        b1_0.short_details,
        b1_0.total_copies,
        b1_0.updated_at 
    from
        books b1_0 
    left join
        categories c1_0 
            on c1_0.id=b1_0.category_id 
    where
        c1_0.id=? 
    fetch
        first ? rows only
2025-08-28 16:13:26 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    select
        r1_0.book_id,
        r1_0.id,
        r1_0.comment,
        r1_0.created_at,
        r1_0.rating,
        r1_0.updated_at,
        r1_0.user_id 
    from
        reviews r1_0 
    where
        r1_0.book_id=?
2025-08-28 16:13:26 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.created_at,
        c1_0.description,
        c1_0.name,
        c1_0.updated_at 
    from
        categories c1_0 
    where
        c1_0.id=?
2025-08-28 16:13:26 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    select
        b1_0.category_id,
        b1_0.id,
        b1_0.about,
        b1_0.audio_file_url,
        b1_0.author,
        b1_0.available_copies,
        b1_0.book_cover_url,
        b1_0.created_at,
        b1_0.format,
        b1_0.isbn,
        b1_0.name,
        b1_0.pdf_file_url,
        b1_0.publication_year,
        b1_0.short_details,
        b1_0.total_copies,
        b1_0.updated_at 
    from
        books b1_0 
    where
        b1_0.category_id=?
2025-08-28 16:13:26 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.created_at,
        c1_0.description,
        c1_0.name,
        c1_0.updated_at 
    from
        categories c1_0 
    where
        c1_0.id=?
2025-08-28 16:13:26 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    select
        r1_0.book_id,
        r1_0.id,
        r1_0.comment,
        r1_0.created_at,
        r1_0.rating,
        r1_0.updated_at,
        r1_0.user_id 
    from
        reviews r1_0 
    where
        r1_0.book_id=?
2025-08-28 16:13:26 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    select
        b1_0.category_id,
        b1_0.id,
        b1_0.about,
        b1_0.audio_file_url,
        b1_0.author,
        b1_0.available_copies,
        b1_0.book_cover_url,
        b1_0.created_at,
        b1_0.format,
        b1_0.isbn,
        b1_0.name,
        b1_0.pdf_file_url,
        b1_0.publication_year,
        b1_0.short_details,
        b1_0.total_copies,
        b1_0.updated_at 
    from
        books b1_0 
    where
        b1_0.category_id=?
2025-08-28 16:13:26 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.created_at,
        c1_0.description,
        c1_0.name,
        c1_0.updated_at 
    from
        categories c1_0 
    where
        c1_0.id=?
2025-08-28 16:13:26 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    select
        r1_0.book_id,
        r1_0.id,
        r1_0.comment,
        r1_0.created_at,
        r1_0.rating,
        r1_0.updated_at,
        r1_0.user_id 
    from
        reviews r1_0 
    where
        r1_0.book_id=?
2025-08-28 16:13:26 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    select
        b1_0.category_id,
        b1_0.id,
        b1_0.about,
        b1_0.audio_file_url,
        b1_0.author,
        b1_0.available_copies,
        b1_0.book_cover_url,
        b1_0.created_at,
        b1_0.format,
        b1_0.isbn,
        b1_0.name,
        b1_0.pdf_file_url,
        b1_0.publication_year,
        b1_0.short_details,
        b1_0.total_copies,
        b1_0.updated_at 
    from
        books b1_0 
    where
        b1_0.category_id=?
2025-08-28 16:13:27 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    select
        r1_0.book_id,
        r1_0.id,
        r1_0.comment,
        r1_0.created_at,
        r1_0.rating,
        r1_0.updated_at,
        r1_0.user_id 
    from
        reviews r1_0 
    where
        r1_0.book_id=?
2025-08-28 16:13:27 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    select
        r1_0.book_id,
        r1_0.id,
        r1_0.comment,
        r1_0.created_at,
        r1_0.rating,
        r1_0.updated_at,
        r1_0.user_id 
    from
        reviews r1_0 
    where
        r1_0.book_id=?
2025-08-28 16:13:27 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.created_at,
        c1_0.description,
        c1_0.name,
        c1_0.updated_at 
    from
        categories c1_0 
    where
        c1_0.id=?
2025-08-28 16:13:27 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    select
        b1_0.category_id,
        b1_0.id,
        b1_0.about,
        b1_0.audio_file_url,
        b1_0.author,
        b1_0.available_copies,
        b1_0.book_cover_url,
        b1_0.created_at,
        b1_0.format,
        b1_0.isbn,
        b1_0.name,
        b1_0.pdf_file_url,
        b1_0.publication_year,
        b1_0.short_details,
        b1_0.total_copies,
        b1_0.updated_at 
    from
        books b1_0 
    where
        b1_0.category_id=?
2025-08-28 16:13:27 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    select
        r1_0.book_id,
        r1_0.id,
        r1_0.comment,
        r1_0.created_at,
        r1_0.rating,
        r1_0.updated_at,
        r1_0.user_id 
    from
        reviews r1_0 
    where
        r1_0.book_id=?
2025-08-28 16:13:27 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.created_at,
        c1_0.description,
        c1_0.name,
        c1_0.updated_at 
    from
        categories c1_0 
    where
        c1_0.id=?
2025-08-28 16:13:27 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    select
        b1_0.category_id,
        b1_0.id,
        b1_0.about,
        b1_0.audio_file_url,
        b1_0.author,
        b1_0.available_copies,
        b1_0.book_cover_url,
        b1_0.created_at,
        b1_0.format,
        b1_0.isbn,
        b1_0.name,
        b1_0.pdf_file_url,
        b1_0.publication_year,
        b1_0.short_details,
        b1_0.total_copies,
        b1_0.updated_at 
    from
        books b1_0 
    where
        b1_0.category_id=?
2025-08-28 16:13:27 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    select
        r1_0.book_id,
        r1_0.id,
        r1_0.comment,
        r1_0.created_at,
        r1_0.rating,
        r1_0.updated_at,
        r1_0.user_id 
    from
        reviews r1_0 
    where
        r1_0.book_id=?
2025-08-28 16:13:27 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    select
        r1_0.book_id,
        r1_0.id,
        r1_0.comment,
        r1_0.created_at,
        r1_0.rating,
        r1_0.updated_at,
        r1_0.user_id 
    from
        reviews r1_0 
    where
        r1_0.book_id=?
2025-08-28 16:13:27 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    select
        r1_0.book_id,
        r1_0.id,
        r1_0.comment,
        r1_0.created_at,
        r1_0.rating,
        r1_0.updated_at,
        r1_0.user_id 
    from
        reviews r1_0 
    where
        r1_0.book_id=?
2025-08-28 16:13:27 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    select
        r1_0.book_id,
        r1_0.id,
        r1_0.comment,
        r1_0.created_at,
        r1_0.rating,
        r1_0.updated_at,
        r1_0.user_id 
    from
        reviews r1_0 
    where
        r1_0.book_id=?
2025-08-28 16:13:27 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    select
        r1_0.book_id,
        r1_0.id,
        r1_0.comment,
        r1_0.created_at,
        r1_0.rating,
        r1_0.updated_at,
        r1_0.user_id 
    from
        reviews r1_0 
    where
        r1_0.book_id=?
2025-08-28 16:13:29 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.address,
        u1_0.created_at,
        u1_0.date_of_birth,
        u1_0.email,
        u1_0.is_active,
        u1_0.name,
        u1_0.password_hash,
        u1_0.role,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.username=?
2025-08-28 16:13:29 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        dr1_0.id,
        dr1_0.admin_notes,
        dr1_0.author,
        dr1_0.book_title,
        dr1_0.created_at,
        dr1_0.description,
        dr1_0.isbn,
        dr1_0.status,
        dr1_0.updated_at,
        dr1_0.user_id 
    from
        donation_requests dr1_0 
    offset
        ? rows 
    fetch
        first ? rows only
2025-08-28 16:13:29 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.address,
        u1_0.created_at,
        u1_0.date_of_birth,
        u1_0.email,
        u1_0.is_active,
        u1_0.name,
        u1_0.password_hash,
        u1_0.role,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.id=?
2025-08-28 16:13:29 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        b1_0.user_id,
        b1_0.id,
        b1_0.book_id,
        b1_0.borrow_date,
        b1_0.created_at,
        b1_0.due_date,
        b1_0.extension_count,
        b1_0.return_date,
        b1_0.status,
        b1_0.updated_at 
    from
        borrows b1_0 
    where
        b1_0.user_id=?
2025-08-28 16:13:29 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.address,
        u1_0.created_at,
        u1_0.date_of_birth,
        u1_0.email,
        u1_0.is_active,
        u1_0.name,
        u1_0.password_hash,
        u1_0.role,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.username=?
2025-08-28 16:13:29 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    select
        dr1_0.id,
        dr1_0.admin_notes,
        dr1_0.author,
        dr1_0.book_title,
        dr1_0.created_at,
        dr1_0.description,
        dr1_0.isbn,
        dr1_0.status,
        dr1_0.updated_at,
        dr1_0.user_id 
    from
        donation_requests dr1_0 
    offset
        ? rows 
    fetch
        first ? rows only
2025-08-28 16:13:29 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.address,
        u1_0.created_at,
        u1_0.date_of_birth,
        u1_0.email,
        u1_0.is_active,
        u1_0.name,
        u1_0.password_hash,
        u1_0.role,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.id=?
2025-08-28 16:13:29 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    select
        b1_0.user_id,
        b1_0.id,
        b1_0.book_id,
        b1_0.borrow_date,
        b1_0.created_at,
        b1_0.due_date,
        b1_0.extension_count,
        b1_0.return_date,
        b1_0.status,
        b1_0.updated_at 
    from
        borrows b1_0 
    where
        b1_0.user_id=?
2025-08-28 16:13:30 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.address,
        u1_0.created_at,
        u1_0.date_of_birth,
        u1_0.email,
        u1_0.is_active,
        u1_0.name,
        u1_0.password_hash,
        u1_0.role,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.username=?
2025-08-28 16:13:30 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.address,
        u1_0.created_at,
        u1_0.date_of_birth,
        u1_0.email,
        u1_0.is_active,
        u1_0.name,
        u1_0.password_hash,
        u1_0.role,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.username=?
2025-08-28 16:13:30 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    select
        b1_0.id,
        b1_0.about,
        b1_0.audio_file_url,
        b1_0.author,
        b1_0.available_copies,
        b1_0.book_cover_url,
        b1_0.category_id,
        b1_0.created_at,
        b1_0.format,
        b1_0.isbn,
        b1_0.name,
        b1_0.pdf_file_url,
        b1_0.publication_year,
        b1_0.short_details,
        b1_0.total_copies,
        b1_0.updated_at 
    from
        books b1_0 
    offset
        ? rows 
    fetch
        first ? rows only
2025-08-28 16:13:30 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.created_at,
        c1_0.description,
        c1_0.name,
        c1_0.updated_at 
    from
        categories c1_0 
    where
        c1_0.id=?
2025-08-28 16:13:30 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    select
        b1_0.category_id,
        b1_0.id,
        b1_0.about,
        b1_0.audio_file_url,
        b1_0.author,
        b1_0.available_copies,
        b1_0.book_cover_url,
        b1_0.created_at,
        b1_0.format,
        b1_0.isbn,
        b1_0.name,
        b1_0.pdf_file_url,
        b1_0.publication_year,
        b1_0.short_details,
        b1_0.total_copies,
        b1_0.updated_at 
    from
        books b1_0 
    where
        b1_0.category_id=?
2025-08-28 16:13:30 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    select
        r1_0.book_id,
        r1_0.id,
        r1_0.comment,
        r1_0.created_at,
        r1_0.rating,
        r1_0.updated_at,
        r1_0.user_id 
    from
        reviews r1_0 
    where
        r1_0.book_id=?
2025-08-28 16:13:30 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.created_at,
        c1_0.description,
        c1_0.name,
        c1_0.updated_at 
    from
        categories c1_0 
    where
        c1_0.id=?
2025-08-28 16:13:30 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    select
        b1_0.category_id,
        b1_0.id,
        b1_0.about,
        b1_0.audio_file_url,
        b1_0.author,
        b1_0.available_copies,
        b1_0.book_cover_url,
        b1_0.created_at,
        b1_0.format,
        b1_0.isbn,
        b1_0.name,
        b1_0.pdf_file_url,
        b1_0.publication_year,
        b1_0.short_details,
        b1_0.total_copies,
        b1_0.updated_at 
    from
        books b1_0 
    where
        b1_0.category_id=?
2025-08-28 16:13:30 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    select
        r1_0.book_id,
        r1_0.id,
        r1_0.comment,
        r1_0.created_at,
        r1_0.rating,
        r1_0.updated_at,
        r1_0.user_id 
    from
        reviews r1_0 
    where
        r1_0.book_id=?
2025-08-28 16:13:30 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.created_at,
        c1_0.description,
        c1_0.name,
        c1_0.updated_at 
    from
        categories c1_0 
    where
        c1_0.id=?
2025-08-28 16:13:30 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    select
        b1_0.category_id,
        b1_0.id,
        b1_0.about,
        b1_0.audio_file_url,
        b1_0.author,
        b1_0.available_copies,
        b1_0.book_cover_url,
        b1_0.created_at,
        b1_0.format,
        b1_0.isbn,
        b1_0.name,
        b1_0.pdf_file_url,
        b1_0.publication_year,
        b1_0.short_details,
        b1_0.total_copies,
        b1_0.updated_at 
    from
        books b1_0 
    where
        b1_0.category_id=?
2025-08-28 16:13:30 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    select
        r1_0.book_id,
        r1_0.id,
        r1_0.comment,
        r1_0.created_at,
        r1_0.rating,
        r1_0.updated_at,
        r1_0.user_id 
    from
        reviews r1_0 
    where
        r1_0.book_id=?
2025-08-28 16:13:30 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.created_at,
        c1_0.description,
        c1_0.name,
        c1_0.updated_at 
    from
        categories c1_0 
    where
        c1_0.id=?
2025-08-28 16:13:30 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    select
        b1_0.category_id,
        b1_0.id,
        b1_0.about,
        b1_0.audio_file_url,
        b1_0.author,
        b1_0.available_copies,
        b1_0.book_cover_url,
        b1_0.created_at,
        b1_0.format,
        b1_0.isbn,
        b1_0.name,
        b1_0.pdf_file_url,
        b1_0.publication_year,
        b1_0.short_details,
        b1_0.total_copies,
        b1_0.updated_at 
    from
        books b1_0 
    where
        b1_0.category_id=?
2025-08-28 16:13:30 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    select
        r1_0.book_id,
        r1_0.id,
        r1_0.comment,
        r1_0.created_at,
        r1_0.rating,
        r1_0.updated_at,
        r1_0.user_id 
    from
        reviews r1_0 
    where
        r1_0.book_id=?
2025-08-28 16:13:30 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.created_at,
        c1_0.description,
        c1_0.name,
        c1_0.updated_at 
    from
        categories c1_0 
    where
        c1_0.id=?
2025-08-28 16:13:30 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    select
        b1_0.category_id,
        b1_0.id,
        b1_0.about,
        b1_0.audio_file_url,
        b1_0.author,
        b1_0.available_copies,
        b1_0.book_cover_url,
        b1_0.created_at,
        b1_0.format,
        b1_0.isbn,
        b1_0.name,
        b1_0.pdf_file_url,
        b1_0.publication_year,
        b1_0.short_details,
        b1_0.total_copies,
        b1_0.updated_at 
    from
        books b1_0 
    where
        b1_0.category_id=?
2025-08-28 16:13:30 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    select
        r1_0.book_id,
        r1_0.id,
        r1_0.comment,
        r1_0.created_at,
        r1_0.rating,
        r1_0.updated_at,
        r1_0.user_id 
    from
        reviews r1_0 
    where
        r1_0.book_id=?
2025-08-28 16:13:30 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.created_at,
        c1_0.description,
        c1_0.name,
        c1_0.updated_at 
    from
        categories c1_0 
    where
        c1_0.id=?
2025-08-28 16:13:30 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    select
        b1_0.category_id,
        b1_0.id,
        b1_0.about,
        b1_0.audio_file_url,
        b1_0.author,
        b1_0.available_copies,
        b1_0.book_cover_url,
        b1_0.created_at,
        b1_0.format,
        b1_0.isbn,
        b1_0.name,
        b1_0.pdf_file_url,
        b1_0.publication_year,
        b1_0.short_details,
        b1_0.total_copies,
        b1_0.updated_at 
    from
        books b1_0 
    where
        b1_0.category_id=?
2025-08-28 16:13:30 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    select
        b1_0.id,
        b1_0.about,
        b1_0.audio_file_url,
        b1_0.author,
        b1_0.available_copies,
        b1_0.book_cover_url,
        b1_0.category_id,
        b1_0.created_at,
        b1_0.format,
        b1_0.isbn,
        b1_0.name,
        b1_0.pdf_file_url,
        b1_0.publication_year,
        b1_0.short_details,
        b1_0.total_copies,
        b1_0.updated_at 
    from
        books b1_0 
    left join
        categories c1_0 
            on c1_0.id=b1_0.category_id 
    where
        c1_0.id=? 
    fetch
        first ? rows only
2025-08-28 16:13:30 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    select
        r1_0.book_id,
        r1_0.id,
        r1_0.comment,
        r1_0.created_at,
        r1_0.rating,
        r1_0.updated_at,
        r1_0.user_id 
    from
        reviews r1_0 
    where
        r1_0.book_id=?
2025-08-28 16:13:30 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.created_at,
        c1_0.description,
        c1_0.name,
        c1_0.updated_at 
    from
        categories c1_0 
    where
        c1_0.id=?
2025-08-28 16:13:30 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.created_at,
        c1_0.description,
        c1_0.name,
        c1_0.updated_at 
    from
        categories c1_0 
    where
        c1_0.id=?
2025-08-28 16:13:30 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    select
        b1_0.category_id,
        b1_0.id,
        b1_0.about,
        b1_0.audio_file_url,
        b1_0.author,
        b1_0.available_copies,
        b1_0.book_cover_url,
        b1_0.created_at,
        b1_0.format,
        b1_0.isbn,
        b1_0.name,
        b1_0.pdf_file_url,
        b1_0.publication_year,
        b1_0.short_details,
        b1_0.total_copies,
        b1_0.updated_at 
    from
        books b1_0 
    where
        b1_0.category_id=?
2025-08-28 16:13:30 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    select
        b1_0.category_id,
        b1_0.id,
        b1_0.about,
        b1_0.audio_file_url,
        b1_0.author,
        b1_0.available_copies,
        b1_0.book_cover_url,
        b1_0.created_at,
        b1_0.format,
        b1_0.isbn,
        b1_0.name,
        b1_0.pdf_file_url,
        b1_0.publication_year,
        b1_0.short_details,
        b1_0.total_copies,
        b1_0.updated_at 
    from
        books b1_0 
    where
        b1_0.category_id=?
2025-08-28 16:13:30 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    select
        r1_0.book_id,
        r1_0.id,
        r1_0.comment,
        r1_0.created_at,
        r1_0.rating,
        r1_0.updated_at,
        r1_0.user_id 
    from
        reviews r1_0 
    where
        r1_0.book_id=?
2025-08-28 16:13:30 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    select
        r1_0.book_id,
        r1_0.id,
        r1_0.comment,
        r1_0.created_at,
        r1_0.rating,
        r1_0.updated_at,
        r1_0.user_id 
    from
        reviews r1_0 
    where
        r1_0.book_id=?
2025-08-28 16:13:30 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    select
        r1_0.book_id,
        r1_0.id,
        r1_0.comment,
        r1_0.created_at,
        r1_0.rating,
        r1_0.updated_at,
        r1_0.user_id 
    from
        reviews r1_0 
    where
        r1_0.book_id=?
2025-08-28 16:13:30 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    select
        r1_0.book_id,
        r1_0.id,
        r1_0.comment,
        r1_0.created_at,
        r1_0.rating,
        r1_0.updated_at,
        r1_0.user_id 
    from
        reviews r1_0 
    where
        r1_0.book_id=?
2025-08-28 16:13:30 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    select
        r1_0.book_id,
        r1_0.id,
        r1_0.comment,
        r1_0.created_at,
        r1_0.rating,
        r1_0.updated_at,
        r1_0.user_id 
    from
        reviews r1_0 
    where
        r1_0.book_id=?
2025-08-28 16:13:30 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    select
        r1_0.book_id,
        r1_0.id,
        r1_0.comment,
        r1_0.created_at,
        r1_0.rating,
        r1_0.updated_at,
        r1_0.user_id 
    from
        reviews r1_0 
    where
        r1_0.book_id=?
2025-08-28 16:13:30 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    select
        r1_0.book_id,
        r1_0.id,
        r1_0.comment,
        r1_0.created_at,
        r1_0.rating,
        r1_0.updated_at,
        r1_0.user_id 
    from
        reviews r1_0 
    where
        r1_0.book_id=?
2025-08-28 16:13:30 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.address,
        u1_0.created_at,
        u1_0.date_of_birth,
        u1_0.email,
        u1_0.is_active,
        u1_0.name,
        u1_0.password_hash,
        u1_0.role,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.username=?
2025-08-28 16:13:30 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.address,
        u1_0.created_at,
        u1_0.date_of_birth,
        u1_0.email,
        u1_0.is_active,
        u1_0.name,
        u1_0.password_hash,
        u1_0.role,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.username=?
2025-08-28 16:13:30 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL - 
    select
        b1_0.id,
        b1_0.about,
        b1_0.audio_file_url,
        b1_0.author,
        b1_0.available_copies,
        b1_0.book_cover_url,
        b1_0.category_id,
        b1_0.created_at,
        b1_0.format,
        b1_0.isbn,
        b1_0.name,
        b1_0.pdf_file_url,
        b1_0.publication_year,
        b1_0.short_details,
        b1_0.total_copies,
        b1_0.updated_at 
    from
        books b1_0 
    offset
        ? rows 
    fetch
        first ? rows only
2025-08-28 16:13:30 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    select
        b1_0.id,
        b1_0.about,
        b1_0.audio_file_url,
        b1_0.author,
        b1_0.available_copies,
        b1_0.book_cover_url,
        b1_0.category_id,
        b1_0.created_at,
        b1_0.format,
        b1_0.isbn,
        b1_0.name,
        b1_0.pdf_file_url,
        b1_0.publication_year,
        b1_0.short_details,
        b1_0.total_copies,
        b1_0.updated_at 
    from
        books b1_0 
    left join
        categories c1_0 
            on c1_0.id=b1_0.category_id 
    where
        c1_0.id=? 
    fetch
        first ? rows only
2025-08-28 16:13:30 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.created_at,
        c1_0.description,
        c1_0.name,
        c1_0.updated_at 
    from
        categories c1_0 
    where
        c1_0.id=?
2025-08-28 16:13:30 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL - 
    select
        b1_0.category_id,
        b1_0.id,
        b1_0.about,
        b1_0.audio_file_url,
        b1_0.author,
        b1_0.available_copies,
        b1_0.book_cover_url,
        b1_0.created_at,
        b1_0.format,
        b1_0.isbn,
        b1_0.name,
        b1_0.pdf_file_url,
        b1_0.publication_year,
        b1_0.short_details,
        b1_0.total_copies,
        b1_0.updated_at 
    from
        books b1_0 
    where
        b1_0.category_id=?
2025-08-28 16:13:30 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL - 
    select
        r1_0.book_id,
        r1_0.id,
        r1_0.comment,
        r1_0.created_at,
        r1_0.rating,
        r1_0.updated_at,
        r1_0.user_id 
    from
        reviews r1_0 
    where
        r1_0.book_id=?
2025-08-28 16:13:30 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.created_at,
        c1_0.description,
        c1_0.name,
        c1_0.updated_at 
    from
        categories c1_0 
    where
        c1_0.id=?
2025-08-28 16:13:30 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.created_at,
        c1_0.description,
        c1_0.name,
        c1_0.updated_at 
    from
        categories c1_0 
    where
        c1_0.id=?
2025-08-28 16:13:30 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    select
        b1_0.category_id,
        b1_0.id,
        b1_0.about,
        b1_0.audio_file_url,
        b1_0.author,
        b1_0.available_copies,
        b1_0.book_cover_url,
        b1_0.created_at,
        b1_0.format,
        b1_0.isbn,
        b1_0.name,
        b1_0.pdf_file_url,
        b1_0.publication_year,
        b1_0.short_details,
        b1_0.total_copies,
        b1_0.updated_at 
    from
        books b1_0 
    where
        b1_0.category_id=?
2025-08-28 16:13:30 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    select
        r1_0.book_id,
        r1_0.id,
        r1_0.comment,
        r1_0.created_at,
        r1_0.rating,
        r1_0.updated_at,
        r1_0.user_id 
    from
        reviews r1_0 
    where
        r1_0.book_id=?
2025-08-28 16:13:30 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL - 
    select
        b1_0.category_id,
        b1_0.id,
        b1_0.about,
        b1_0.audio_file_url,
        b1_0.author,
        b1_0.available_copies,
        b1_0.book_cover_url,
        b1_0.created_at,
        b1_0.format,
        b1_0.isbn,
        b1_0.name,
        b1_0.pdf_file_url,
        b1_0.publication_year,
        b1_0.short_details,
        b1_0.total_copies,
        b1_0.updated_at 
    from
        books b1_0 
    where
        b1_0.category_id=?
2025-08-28 16:13:30 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    select
        r1_0.book_id,
        r1_0.id,
        r1_0.comment,
        r1_0.created_at,
        r1_0.rating,
        r1_0.updated_at,
        r1_0.user_id 
    from
        reviews r1_0 
    where
        r1_0.book_id=?
2025-08-28 16:13:30 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL - 
    select
        r1_0.book_id,
        r1_0.id,
        r1_0.comment,
        r1_0.created_at,
        r1_0.rating,
        r1_0.updated_at,
        r1_0.user_id 
    from
        reviews r1_0 
    where
        r1_0.book_id=?
2025-08-28 16:13:30 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.created_at,
        c1_0.description,
        c1_0.name,
        c1_0.updated_at 
    from
        categories c1_0 
    where
        c1_0.id=?
2025-08-28 16:13:30 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL - 
    select
        b1_0.category_id,
        b1_0.id,
        b1_0.about,
        b1_0.audio_file_url,
        b1_0.author,
        b1_0.available_copies,
        b1_0.book_cover_url,
        b1_0.created_at,
        b1_0.format,
        b1_0.isbn,
        b1_0.name,
        b1_0.pdf_file_url,
        b1_0.publication_year,
        b1_0.short_details,
        b1_0.total_copies,
        b1_0.updated_at 
    from
        books b1_0 
    where
        b1_0.category_id=?
2025-08-28 16:13:30 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL - 
    select
        r1_0.book_id,
        r1_0.id,
        r1_0.comment,
        r1_0.created_at,
        r1_0.rating,
        r1_0.updated_at,
        r1_0.user_id 
    from
        reviews r1_0 
    where
        r1_0.book_id=?
2025-08-28 16:13:30 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.created_at,
        c1_0.description,
        c1_0.name,
        c1_0.updated_at 
    from
        categories c1_0 
    where
        c1_0.id=?
2025-08-28 16:13:30 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL - 
    select
        b1_0.category_id,
        b1_0.id,
        b1_0.about,
        b1_0.audio_file_url,
        b1_0.author,
        b1_0.available_copies,
        b1_0.book_cover_url,
        b1_0.created_at,
        b1_0.format,
        b1_0.isbn,
        b1_0.name,
        b1_0.pdf_file_url,
        b1_0.publication_year,
        b1_0.short_details,
        b1_0.total_copies,
        b1_0.updated_at 
    from
        books b1_0 
    where
        b1_0.category_id=?
2025-08-28 16:13:30 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL - 
    select
        r1_0.book_id,
        r1_0.id,
        r1_0.comment,
        r1_0.created_at,
        r1_0.rating,
        r1_0.updated_at,
        r1_0.user_id 
    from
        reviews r1_0 
    where
        r1_0.book_id=?
2025-08-28 16:13:30 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.created_at,
        c1_0.description,
        c1_0.name,
        c1_0.updated_at 
    from
        categories c1_0 
    where
        c1_0.id=?
2025-08-28 16:13:30 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL - 
    select
        b1_0.category_id,
        b1_0.id,
        b1_0.about,
        b1_0.audio_file_url,
        b1_0.author,
        b1_0.available_copies,
        b1_0.book_cover_url,
        b1_0.created_at,
        b1_0.format,
        b1_0.isbn,
        b1_0.name,
        b1_0.pdf_file_url,
        b1_0.publication_year,
        b1_0.short_details,
        b1_0.total_copies,
        b1_0.updated_at 
    from
        books b1_0 
    where
        b1_0.category_id=?
2025-08-28 16:13:30 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL - 
    select
        r1_0.book_id,
        r1_0.id,
        r1_0.comment,
        r1_0.created_at,
        r1_0.rating,
        r1_0.updated_at,
        r1_0.user_id 
    from
        reviews r1_0 
    where
        r1_0.book_id=?
2025-08-28 16:13:30 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.created_at,
        c1_0.description,
        c1_0.name,
        c1_0.updated_at 
    from
        categories c1_0 
    where
        c1_0.id=?
2025-08-28 16:13:30 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL - 
    select
        b1_0.category_id,
        b1_0.id,
        b1_0.about,
        b1_0.audio_file_url,
        b1_0.author,
        b1_0.available_copies,
        b1_0.book_cover_url,
        b1_0.created_at,
        b1_0.format,
        b1_0.isbn,
        b1_0.name,
        b1_0.pdf_file_url,
        b1_0.publication_year,
        b1_0.short_details,
        b1_0.total_copies,
        b1_0.updated_at 
    from
        books b1_0 
    where
        b1_0.category_id=?
2025-08-28 16:13:30 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL - 
    select
        r1_0.book_id,
        r1_0.id,
        r1_0.comment,
        r1_0.created_at,
        r1_0.rating,
        r1_0.updated_at,
        r1_0.user_id 
    from
        reviews r1_0 
    where
        r1_0.book_id=?
2025-08-28 16:13:30 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.created_at,
        c1_0.description,
        c1_0.name,
        c1_0.updated_at 
    from
        categories c1_0 
    where
        c1_0.id=?
2025-08-28 16:13:31 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL - 
    select
        b1_0.category_id,
        b1_0.id,
        b1_0.about,
        b1_0.audio_file_url,
        b1_0.author,
        b1_0.available_copies,
        b1_0.book_cover_url,
        b1_0.created_at,
        b1_0.format,
        b1_0.isbn,
        b1_0.name,
        b1_0.pdf_file_url,
        b1_0.publication_year,
        b1_0.short_details,
        b1_0.total_copies,
        b1_0.updated_at 
    from
        books b1_0 
    where
        b1_0.category_id=?
2025-08-28 16:13:31 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL - 
    select
        r1_0.book_id,
        r1_0.id,
        r1_0.comment,
        r1_0.created_at,
        r1_0.rating,
        r1_0.updated_at,
        r1_0.user_id 
    from
        reviews r1_0 
    where
        r1_0.book_id=?
2025-08-28 16:13:31 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL - 
    select
        r1_0.book_id,
        r1_0.id,
        r1_0.comment,
        r1_0.created_at,
        r1_0.rating,
        r1_0.updated_at,
        r1_0.user_id 
    from
        reviews r1_0 
    where
        r1_0.book_id=?
2025-08-28 16:13:31 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL - 
    select
        r1_0.book_id,
        r1_0.id,
        r1_0.comment,
        r1_0.created_at,
        r1_0.rating,
        r1_0.updated_at,
        r1_0.user_id 
    from
        reviews r1_0 
    where
        r1_0.book_id=?
2025-08-28 16:13:31 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL - 
    select
        r1_0.book_id,
        r1_0.id,
        r1_0.comment,
        r1_0.created_at,
        r1_0.rating,
        r1_0.updated_at,
        r1_0.user_id 
    from
        reviews r1_0 
    where
        r1_0.book_id=?
2025-08-28 16:13:31 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL - 
    select
        r1_0.book_id,
        r1_0.id,
        r1_0.comment,
        r1_0.created_at,
        r1_0.rating,
        r1_0.updated_at,
        r1_0.user_id 
    from
        reviews r1_0 
    where
        r1_0.book_id=?
2025-08-28 16:13:39 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.address,
        u1_0.created_at,
        u1_0.date_of_birth,
        u1_0.email,
        u1_0.is_active,
        u1_0.name,
        u1_0.password_hash,
        u1_0.role,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.username=?
2025-08-28 16:13:39 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.address,
        u1_0.created_at,
        u1_0.date_of_birth,
        u1_0.email,
        u1_0.is_active,
        u1_0.name,
        u1_0.password_hash,
        u1_0.role,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.username=?
2025-08-28 16:13:39 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.address,
        u1_0.created_at,
        u1_0.date_of_birth,
        u1_0.email,
        u1_0.is_active,
        u1_0.name,
        u1_0.password_hash,
        u1_0.role,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.username=?
2025-08-28 16:13:39 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        b1_0.id,
        b1_0.about,
        b1_0.audio_file_url,
        b1_0.author,
        b1_0.available_copies,
        b1_0.book_cover_url,
        b1_0.category_id,
        b1_0.created_at,
        b1_0.format,
        b1_0.isbn,
        b1_0.name,
        b1_0.pdf_file_url,
        b1_0.publication_year,
        b1_0.short_details,
        b1_0.total_copies,
        b1_0.updated_at 
    from
        books b1_0 
    order by
        b1_0.created_at desc 
    fetch
        first ? rows only
2025-08-28 16:13:39 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    select
        b1_0.id,
        b1_0.about,
        b1_0.audio_file_url,
        b1_0.author,
        b1_0.available_copies,
        b1_0.book_cover_url,
        b1_0.category_id,
        b1_0.created_at,
        b1_0.format,
        b1_0.isbn,
        b1_0.name,
        b1_0.pdf_file_url,
        b1_0.publication_year,
        b1_0.short_details,
        b1_0.total_copies,
        b1_0.updated_at 
    from
        books b1_0 
    order by
        b1_0.id desc 
    fetch
        first ? rows only
2025-08-28 16:13:39 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    select
        count(b1_0.id) 
    from
        books b1_0
2025-08-28 16:13:39 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.created_at,
        c1_0.description,
        c1_0.name,
        c1_0.updated_at 
    from
        categories c1_0 
    where
        c1_0.id=?
2025-08-28 16:13:39 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    select
        b1_0.category_id,
        b1_0.id,
        b1_0.about,
        b1_0.audio_file_url,
        b1_0.author,
        b1_0.available_copies,
        b1_0.book_cover_url,
        b1_0.created_at,
        b1_0.format,
        b1_0.isbn,
        b1_0.name,
        b1_0.pdf_file_url,
        b1_0.publication_year,
        b1_0.short_details,
        b1_0.total_copies,
        b1_0.updated_at 
    from
        books b1_0 
    where
        b1_0.category_id=?
2025-08-28 16:13:39 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.created_at,
        c1_0.description,
        c1_0.name,
        c1_0.updated_at 
    from
        categories c1_0 
    where
        c1_0.id=?
2025-08-28 16:13:39 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        b1_0.category_id,
        b1_0.id,
        b1_0.about,
        b1_0.audio_file_url,
        b1_0.author,
        b1_0.available_copies,
        b1_0.book_cover_url,
        b1_0.created_at,
        b1_0.format,
        b1_0.isbn,
        b1_0.name,
        b1_0.pdf_file_url,
        b1_0.publication_year,
        b1_0.short_details,
        b1_0.total_copies,
        b1_0.updated_at 
    from
        books b1_0 
    where
        b1_0.category_id=?
2025-08-28 16:13:39 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        r1_0.book_id,
        r1_0.id,
        r1_0.comment,
        r1_0.created_at,
        r1_0.rating,
        r1_0.updated_at,
        r1_0.user_id 
    from
        reviews r1_0 
    where
        r1_0.book_id=?
2025-08-28 16:13:39 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.created_at,
        c1_0.description,
        c1_0.name,
        c1_0.updated_at 
    from
        categories c1_0 
    where
        c1_0.id=?
2025-08-28 16:13:39 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        b1_0.category_id,
        b1_0.id,
        b1_0.about,
        b1_0.audio_file_url,
        b1_0.author,
        b1_0.available_copies,
        b1_0.book_cover_url,
        b1_0.created_at,
        b1_0.format,
        b1_0.isbn,
        b1_0.name,
        b1_0.pdf_file_url,
        b1_0.publication_year,
        b1_0.short_details,
        b1_0.total_copies,
        b1_0.updated_at 
    from
        books b1_0 
    where
        b1_0.category_id=?
2025-08-28 16:13:39 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        r1_0.book_id,
        r1_0.id,
        r1_0.comment,
        r1_0.created_at,
        r1_0.rating,
        r1_0.updated_at,
        r1_0.user_id 
    from
        reviews r1_0 
    where
        r1_0.book_id=?
2025-08-28 16:13:39 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.created_at,
        c1_0.description,
        c1_0.name,
        c1_0.updated_at 
    from
        categories c1_0 
    where
        c1_0.id=?
2025-08-28 16:13:39 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    select
        b1_0.id,
        b1_0.about,
        b1_0.audio_file_url,
        b1_0.author,
        b1_0.available_copies,
        b1_0.book_cover_url,
        b1_0.category_id,
        b1_0.created_at,
        b1_0.format,
        b1_0.isbn,
        b1_0.name,
        b1_0.pdf_file_url,
        b1_0.publication_year,
        b1_0.short_details,
        b1_0.total_copies,
        b1_0.updated_at 
    from
        books b1_0 
    order by
        b1_0.id desc 
    fetch
        first ? rows only
2025-08-28 16:13:39 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        b1_0.category_id,
        b1_0.id,
        b1_0.about,
        b1_0.audio_file_url,
        b1_0.author,
        b1_0.available_copies,
        b1_0.book_cover_url,
        b1_0.created_at,
        b1_0.format,
        b1_0.isbn,
        b1_0.name,
        b1_0.pdf_file_url,
        b1_0.publication_year,
        b1_0.short_details,
        b1_0.total_copies,
        b1_0.updated_at 
    from
        books b1_0 
    where
        b1_0.category_id=?
2025-08-28 16:13:39 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        r1_0.book_id,
        r1_0.id,
        r1_0.comment,
        r1_0.created_at,
        r1_0.rating,
        r1_0.updated_at,
        r1_0.user_id 
    from
        reviews r1_0 
    where
        r1_0.book_id=?
2025-08-28 16:13:39 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.created_at,
        c1_0.description,
        c1_0.name,
        c1_0.updated_at 
    from
        categories c1_0 
    where
        c1_0.id=?
2025-08-28 16:13:39 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        b1_0.category_id,
        b1_0.id,
        b1_0.about,
        b1_0.audio_file_url,
        b1_0.author,
        b1_0.available_copies,
        b1_0.book_cover_url,
        b1_0.created_at,
        b1_0.format,
        b1_0.isbn,
        b1_0.name,
        b1_0.pdf_file_url,
        b1_0.publication_year,
        b1_0.short_details,
        b1_0.total_copies,
        b1_0.updated_at 
    from
        books b1_0 
    where
        b1_0.category_id=?
2025-08-28 16:13:39 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        r1_0.book_id,
        r1_0.id,
        r1_0.comment,
        r1_0.created_at,
        r1_0.rating,
        r1_0.updated_at,
        r1_0.user_id 
    from
        reviews r1_0 
    where
        r1_0.book_id=?
2025-08-28 16:13:39 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.created_at,
        c1_0.description,
        c1_0.name,
        c1_0.updated_at 
    from
        categories c1_0 
    where
        c1_0.id=?
2025-08-28 16:13:39 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        b1_0.category_id,
        b1_0.id,
        b1_0.about,
        b1_0.audio_file_url,
        b1_0.author,
        b1_0.available_copies,
        b1_0.book_cover_url,
        b1_0.created_at,
        b1_0.format,
        b1_0.isbn,
        b1_0.name,
        b1_0.pdf_file_url,
        b1_0.publication_year,
        b1_0.short_details,
        b1_0.total_copies,
        b1_0.updated_at 
    from
        books b1_0 
    where
        b1_0.category_id=?
2025-08-28 16:13:39 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        r1_0.book_id,
        r1_0.id,
        r1_0.comment,
        r1_0.created_at,
        r1_0.rating,
        r1_0.updated_at,
        r1_0.user_id 
    from
        reviews r1_0 
    where
        r1_0.book_id=?
2025-08-28 16:13:39 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        r1_0.book_id,
        r1_0.id,
        r1_0.comment,
        r1_0.created_at,
        r1_0.rating,
        r1_0.updated_at,
        r1_0.user_id 
    from
        reviews r1_0 
    where
        r1_0.book_id=?
2025-08-28 16:13:39 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.created_at,
        c1_0.description,
        c1_0.name,
        c1_0.updated_at 
    from
        categories c1_0 
    where
        c1_0.id=?
2025-08-28 16:13:39 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        b1_0.category_id,
        b1_0.id,
        b1_0.about,
        b1_0.audio_file_url,
        b1_0.author,
        b1_0.available_copies,
        b1_0.book_cover_url,
        b1_0.created_at,
        b1_0.format,
        b1_0.isbn,
        b1_0.name,
        b1_0.pdf_file_url,
        b1_0.publication_year,
        b1_0.short_details,
        b1_0.total_copies,
        b1_0.updated_at 
    from
        books b1_0 
    where
        b1_0.category_id=?
2025-08-28 16:13:39 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        r1_0.book_id,
        r1_0.id,
        r1_0.comment,
        r1_0.created_at,
        r1_0.rating,
        r1_0.updated_at,
        r1_0.user_id 
    from
        reviews r1_0 
    where
        r1_0.book_id=?
2025-08-28 16:13:39 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        r1_0.book_id,
        r1_0.id,
        r1_0.comment,
        r1_0.created_at,
        r1_0.rating,
        r1_0.updated_at,
        r1_0.user_id 
    from
        reviews r1_0 
    where
        r1_0.book_id=?
2025-08-28 16:13:39 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        r1_0.book_id,
        r1_0.id,
        r1_0.comment,
        r1_0.created_at,
        r1_0.rating,
        r1_0.updated_at,
        r1_0.user_id 
    from
        reviews r1_0 
    where
        r1_0.book_id=?
2025-08-28 16:13:39 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    select
        r1_0.book_id,
        r1_0.id,
        r1_0.comment,
        r1_0.created_at,
        r1_0.rating,
        r1_0.updated_at,
        r1_0.user_id 
    from
        reviews r1_0 
    where
        r1_0.book_id=?
2025-08-28 16:13:39 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.created_at,
        c1_0.description,
        c1_0.name,
        c1_0.updated_at 
    from
        categories c1_0 
    where
        c1_0.id=?
2025-08-28 16:13:39 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.created_at,
        c1_0.description,
        c1_0.name,
        c1_0.updated_at 
    from
        categories c1_0 
    where
        c1_0.id=?
2025-08-28 16:13:39 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    select
        b1_0.category_id,
        b1_0.id,
        b1_0.about,
        b1_0.audio_file_url,
        b1_0.author,
        b1_0.available_copies,
        b1_0.book_cover_url,
        b1_0.created_at,
        b1_0.format,
        b1_0.isbn,
        b1_0.name,
        b1_0.pdf_file_url,
        b1_0.publication_year,
        b1_0.short_details,
        b1_0.total_copies,
        b1_0.updated_at 
    from
        books b1_0 
    where
        b1_0.category_id=?
2025-08-28 16:13:39 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.created_at,
        c1_0.description,
        c1_0.name,
        c1_0.updated_at 
    from
        categories c1_0 
    where
        c1_0.id=?
2025-08-28 16:13:39 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        b1_0.category_id,
        b1_0.id,
        b1_0.about,
        b1_0.audio_file_url,
        b1_0.author,
        b1_0.available_copies,
        b1_0.book_cover_url,
        b1_0.created_at,
        b1_0.format,
        b1_0.isbn,
        b1_0.name,
        b1_0.pdf_file_url,
        b1_0.publication_year,
        b1_0.short_details,
        b1_0.total_copies,
        b1_0.updated_at 
    from
        books b1_0 
    where
        b1_0.category_id=?
2025-08-28 16:13:39 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    select
        r1_0.book_id,
        r1_0.id,
        r1_0.comment,
        r1_0.created_at,
        r1_0.rating,
        r1_0.updated_at,
        r1_0.user_id 
    from
        reviews r1_0 
    where
        r1_0.book_id=?
2025-08-28 16:13:39 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    select
        b1_0.category_id,
        b1_0.id,
        b1_0.about,
        b1_0.audio_file_url,
        b1_0.author,
        b1_0.available_copies,
        b1_0.book_cover_url,
        b1_0.created_at,
        b1_0.format,
        b1_0.isbn,
        b1_0.name,
        b1_0.pdf_file_url,
        b1_0.publication_year,
        b1_0.short_details,
        b1_0.total_copies,
        b1_0.updated_at 
    from
        books b1_0 
    where
        b1_0.category_id=?
2025-08-28 16:13:39 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        r1_0.book_id,
        r1_0.id,
        r1_0.comment,
        r1_0.created_at,
        r1_0.rating,
        r1_0.updated_at,
        r1_0.user_id 
    from
        reviews r1_0 
    where
        r1_0.book_id=?
2025-08-28 16:13:39 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    select
        r1_0.book_id,
        r1_0.id,
        r1_0.comment,
        r1_0.created_at,
        r1_0.rating,
        r1_0.updated_at,
        r1_0.user_id 
    from
        reviews r1_0 
    where
        r1_0.book_id=?
2025-08-28 16:13:39 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.created_at,
        c1_0.description,
        c1_0.name,
        c1_0.updated_at 
    from
        categories c1_0 
    where
        c1_0.id=?
2025-08-28 16:13:39 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.created_at,
        c1_0.description,
        c1_0.name,
        c1_0.updated_at 
    from
        categories c1_0 
    where
        c1_0.id=?
2025-08-28 16:13:39 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    select
        b1_0.category_id,
        b1_0.id,
        b1_0.about,
        b1_0.audio_file_url,
        b1_0.author,
        b1_0.available_copies,
        b1_0.book_cover_url,
        b1_0.created_at,
        b1_0.format,
        b1_0.isbn,
        b1_0.name,
        b1_0.pdf_file_url,
        b1_0.publication_year,
        b1_0.short_details,
        b1_0.total_copies,
        b1_0.updated_at 
    from
        books b1_0 
    where
        b1_0.category_id=?
2025-08-28 16:13:40 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    select
        r1_0.book_id,
        r1_0.id,
        r1_0.comment,
        r1_0.created_at,
        r1_0.rating,
        r1_0.updated_at,
        r1_0.user_id 
    from
        reviews r1_0 
    where
        r1_0.book_id=?
2025-08-28 16:13:40 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.created_at,
        c1_0.description,
        c1_0.name,
        c1_0.updated_at 
    from
        categories c1_0 
    where
        c1_0.id=?
2025-08-28 16:13:40 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    select
        b1_0.category_id,
        b1_0.id,
        b1_0.about,
        b1_0.audio_file_url,
        b1_0.author,
        b1_0.available_copies,
        b1_0.book_cover_url,
        b1_0.created_at,
        b1_0.format,
        b1_0.isbn,
        b1_0.name,
        b1_0.pdf_file_url,
        b1_0.publication_year,
        b1_0.short_details,
        b1_0.total_copies,
        b1_0.updated_at 
    from
        books b1_0 
    where
        b1_0.category_id=?
2025-08-28 16:13:40 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    select
        b1_0.category_id,
        b1_0.id,
        b1_0.about,
        b1_0.audio_file_url,
        b1_0.author,
        b1_0.available_copies,
        b1_0.book_cover_url,
        b1_0.created_at,
        b1_0.format,
        b1_0.isbn,
        b1_0.name,
        b1_0.pdf_file_url,
        b1_0.publication_year,
        b1_0.short_details,
        b1_0.total_copies,
        b1_0.updated_at 
    from
        books b1_0 
    where
        b1_0.category_id=?
2025-08-28 16:13:40 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    select
        r1_0.book_id,
        r1_0.id,
        r1_0.comment,
        r1_0.created_at,
        r1_0.rating,
        r1_0.updated_at,
        r1_0.user_id 
    from
        reviews r1_0 
    where
        r1_0.book_id=?
2025-08-28 16:13:40 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    select
        r1_0.book_id,
        r1_0.id,
        r1_0.comment,
        r1_0.created_at,
        r1_0.rating,
        r1_0.updated_at,
        r1_0.user_id 
    from
        reviews r1_0 
    where
        r1_0.book_id=?
2025-08-28 16:13:40 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.created_at,
        c1_0.description,
        c1_0.name,
        c1_0.updated_at 
    from
        categories c1_0 
    where
        c1_0.id=?
2025-08-28 16:13:40 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.created_at,
        c1_0.description,
        c1_0.name,
        c1_0.updated_at 
    from
        categories c1_0 
    where
        c1_0.id=?
2025-08-28 16:13:40 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    select
        b1_0.category_id,
        b1_0.id,
        b1_0.about,
        b1_0.audio_file_url,
        b1_0.author,
        b1_0.available_copies,
        b1_0.book_cover_url,
        b1_0.created_at,
        b1_0.format,
        b1_0.isbn,
        b1_0.name,
        b1_0.pdf_file_url,
        b1_0.publication_year,
        b1_0.short_details,
        b1_0.total_copies,
        b1_0.updated_at 
    from
        books b1_0 
    where
        b1_0.category_id=?
2025-08-28 16:13:40 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    select
        b1_0.category_id,
        b1_0.id,
        b1_0.about,
        b1_0.audio_file_url,
        b1_0.author,
        b1_0.available_copies,
        b1_0.book_cover_url,
        b1_0.created_at,
        b1_0.format,
        b1_0.isbn,
        b1_0.name,
        b1_0.pdf_file_url,
        b1_0.publication_year,
        b1_0.short_details,
        b1_0.total_copies,
        b1_0.updated_at 
    from
        books b1_0 
    where
        b1_0.category_id=?
2025-08-28 16:13:40 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    select
        r1_0.book_id,
        r1_0.id,
        r1_0.comment,
        r1_0.created_at,
        r1_0.rating,
        r1_0.updated_at,
        r1_0.user_id 
    from
        reviews r1_0 
    where
        r1_0.book_id=?
2025-08-28 16:13:40 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.created_at,
        c1_0.description,
        c1_0.name,
        c1_0.updated_at 
    from
        categories c1_0 
    where
        c1_0.id=?
2025-08-28 16:13:40 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    select
        r1_0.book_id,
        r1_0.id,
        r1_0.comment,
        r1_0.created_at,
        r1_0.rating,
        r1_0.updated_at,
        r1_0.user_id 
    from
        reviews r1_0 
    where
        r1_0.book_id=?
2025-08-28 16:13:40 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.created_at,
        c1_0.description,
        c1_0.name,
        c1_0.updated_at 
    from
        categories c1_0 
    where
        c1_0.id=?
2025-08-28 16:13:40 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    select
        b1_0.category_id,
        b1_0.id,
        b1_0.about,
        b1_0.audio_file_url,
        b1_0.author,
        b1_0.available_copies,
        b1_0.book_cover_url,
        b1_0.created_at,
        b1_0.format,
        b1_0.isbn,
        b1_0.name,
        b1_0.pdf_file_url,
        b1_0.publication_year,
        b1_0.short_details,
        b1_0.total_copies,
        b1_0.updated_at 
    from
        books b1_0 
    where
        b1_0.category_id=?
2025-08-28 16:13:40 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    select
        b1_0.category_id,
        b1_0.id,
        b1_0.about,
        b1_0.audio_file_url,
        b1_0.author,
        b1_0.available_copies,
        b1_0.book_cover_url,
        b1_0.created_at,
        b1_0.format,
        b1_0.isbn,
        b1_0.name,
        b1_0.pdf_file_url,
        b1_0.publication_year,
        b1_0.short_details,
        b1_0.total_copies,
        b1_0.updated_at 
    from
        books b1_0 
    where
        b1_0.category_id=?
2025-08-28 16:13:40 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    select
        r1_0.book_id,
        r1_0.id,
        r1_0.comment,
        r1_0.created_at,
        r1_0.rating,
        r1_0.updated_at,
        r1_0.user_id 
    from
        reviews r1_0 
    where
        r1_0.book_id=?
2025-08-28 16:13:40 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.created_at,
        c1_0.description,
        c1_0.name,
        c1_0.updated_at 
    from
        categories c1_0 
    where
        c1_0.id=?
2025-08-28 16:13:40 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    select
        b1_0.category_id,
        b1_0.id,
        b1_0.about,
        b1_0.audio_file_url,
        b1_0.author,
        b1_0.available_copies,
        b1_0.book_cover_url,
        b1_0.created_at,
        b1_0.format,
        b1_0.isbn,
        b1_0.name,
        b1_0.pdf_file_url,
        b1_0.publication_year,
        b1_0.short_details,
        b1_0.total_copies,
        b1_0.updated_at 
    from
        books b1_0 
    where
        b1_0.category_id=?
2025-08-28 16:13:40 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    select
        r1_0.book_id,
        r1_0.id,
        r1_0.comment,
        r1_0.created_at,
        r1_0.rating,
        r1_0.updated_at,
        r1_0.user_id 
    from
        reviews r1_0 
    where
        r1_0.book_id=?
2025-08-28 16:13:40 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.created_at,
        c1_0.description,
        c1_0.name,
        c1_0.updated_at 
    from
        categories c1_0 
    where
        c1_0.id=?
2025-08-28 16:13:40 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.address,
        u1_0.created_at,
        u1_0.date_of_birth,
        u1_0.email,
        u1_0.is_active,
        u1_0.name,
        u1_0.password_hash,
        u1_0.role,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.username=?
2025-08-28 16:13:40 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    select
        r1_0.book_id,
        r1_0.id,
        r1_0.comment,
        r1_0.created_at,
        r1_0.rating,
        r1_0.updated_at,
        r1_0.user_id 
    from
        reviews r1_0 
    where
        r1_0.book_id=?
2025-08-28 16:13:40 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.created_at,
        c1_0.description,
        c1_0.name,
        c1_0.updated_at 
    from
        categories c1_0 
    where
        c1_0.id=?
2025-08-28 16:13:40 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    select
        b1_0.category_id,
        b1_0.id,
        b1_0.about,
        b1_0.audio_file_url,
        b1_0.author,
        b1_0.available_copies,
        b1_0.book_cover_url,
        b1_0.created_at,
        b1_0.format,
        b1_0.isbn,
        b1_0.name,
        b1_0.pdf_file_url,
        b1_0.publication_year,
        b1_0.short_details,
        b1_0.total_copies,
        b1_0.updated_at 
    from
        books b1_0 
    where
        b1_0.category_id=?
2025-08-28 16:13:40 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    select
        b1_0.category_id,
        b1_0.id,
        b1_0.about,
        b1_0.audio_file_url,
        b1_0.author,
        b1_0.available_copies,
        b1_0.book_cover_url,
        b1_0.created_at,
        b1_0.format,
        b1_0.isbn,
        b1_0.name,
        b1_0.pdf_file_url,
        b1_0.publication_year,
        b1_0.short_details,
        b1_0.total_copies,
        b1_0.updated_at 
    from
        books b1_0 
    where
        b1_0.category_id=?
2025-08-28 16:13:40 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    select
        b1_0.id,
        b1_0.about,
        b1_0.audio_file_url,
        b1_0.author,
        b1_0.available_copies,
        b1_0.book_cover_url,
        b1_0.category_id,
        b1_0.created_at,
        b1_0.format,
        b1_0.isbn,
        b1_0.name,
        b1_0.pdf_file_url,
        b1_0.publication_year,
        b1_0.short_details,
        b1_0.total_copies,
        b1_0.updated_at 
    from
        books b1_0 
    order by
        b1_0.created_at desc 
    fetch
        first ? rows only
2025-08-28 16:13:40 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    select
        r1_0.book_id,
        r1_0.id,
        r1_0.comment,
        r1_0.created_at,
        r1_0.rating,
        r1_0.updated_at,
        r1_0.user_id 
    from
        reviews r1_0 
    where
        r1_0.book_id=?
2025-08-28 16:13:40 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    select
        r1_0.book_id,
        r1_0.id,
        r1_0.comment,
        r1_0.created_at,
        r1_0.rating,
        r1_0.updated_at,
        r1_0.user_id 
    from
        reviews r1_0 
    where
        r1_0.book_id=?
2025-08-28 16:13:40 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.created_at,
        c1_0.description,
        c1_0.name,
        c1_0.updated_at 
    from
        categories c1_0 
    where
        c1_0.id=?
2025-08-28 16:13:40 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.created_at,
        c1_0.description,
        c1_0.name,
        c1_0.updated_at 
    from
        categories c1_0 
    where
        c1_0.id=?
2025-08-28 16:13:40 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    select
        b1_0.category_id,
        b1_0.id,
        b1_0.about,
        b1_0.audio_file_url,
        b1_0.author,
        b1_0.available_copies,
        b1_0.book_cover_url,
        b1_0.created_at,
        b1_0.format,
        b1_0.isbn,
        b1_0.name,
        b1_0.pdf_file_url,
        b1_0.publication_year,
        b1_0.short_details,
        b1_0.total_copies,
        b1_0.updated_at 
    from
        books b1_0 
    where
        b1_0.category_id=?
2025-08-28 16:13:40 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    select
        b1_0.category_id,
        b1_0.id,
        b1_0.about,
        b1_0.audio_file_url,
        b1_0.author,
        b1_0.available_copies,
        b1_0.book_cover_url,
        b1_0.created_at,
        b1_0.format,
        b1_0.isbn,
        b1_0.name,
        b1_0.pdf_file_url,
        b1_0.publication_year,
        b1_0.short_details,
        b1_0.total_copies,
        b1_0.updated_at 
    from
        books b1_0 
    where
        b1_0.category_id=?
2025-08-28 16:13:40 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    select
        r1_0.book_id,
        r1_0.id,
        r1_0.comment,
        r1_0.created_at,
        r1_0.rating,
        r1_0.updated_at,
        r1_0.user_id 
    from
        reviews r1_0 
    where
        r1_0.book_id=?
2025-08-28 16:13:40 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    select
        r1_0.book_id,
        r1_0.id,
        r1_0.comment,
        r1_0.created_at,
        r1_0.rating,
        r1_0.updated_at,
        r1_0.user_id 
    from
        reviews r1_0 
    where
        r1_0.book_id=?
2025-08-28 16:13:40 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.created_at,
        c1_0.description,
        c1_0.name,
        c1_0.updated_at 
    from
        categories c1_0 
    where
        c1_0.id=?
2025-08-28 16:13:40 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    select
        r1_0.book_id,
        r1_0.id,
        r1_0.comment,
        r1_0.created_at,
        r1_0.rating,
        r1_0.updated_at,
        r1_0.user_id 
    from
        reviews r1_0 
    where
        r1_0.book_id=?
2025-08-28 16:13:40 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    select
        r1_0.book_id,
        r1_0.id,
        r1_0.comment,
        r1_0.created_at,
        r1_0.rating,
        r1_0.updated_at,
        r1_0.user_id 
    from
        reviews r1_0 
    where
        r1_0.book_id=?
2025-08-28 16:13:40 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    select
        b1_0.category_id,
        b1_0.id,
        b1_0.about,
        b1_0.audio_file_url,
        b1_0.author,
        b1_0.available_copies,
        b1_0.book_cover_url,
        b1_0.created_at,
        b1_0.format,
        b1_0.isbn,
        b1_0.name,
        b1_0.pdf_file_url,
        b1_0.publication_year,
        b1_0.short_details,
        b1_0.total_copies,
        b1_0.updated_at 
    from
        books b1_0 
    where
        b1_0.category_id=?
2025-08-28 16:13:40 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    select
        r1_0.book_id,
        r1_0.id,
        r1_0.comment,
        r1_0.created_at,
        r1_0.rating,
        r1_0.updated_at,
        r1_0.user_id 
    from
        reviews r1_0 
    where
        r1_0.book_id=?
2025-08-28 16:13:40 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    select
        r1_0.book_id,
        r1_0.id,
        r1_0.comment,
        r1_0.created_at,
        r1_0.rating,
        r1_0.updated_at,
        r1_0.user_id 
    from
        reviews r1_0 
    where
        r1_0.book_id=?
2025-08-28 16:13:40 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    select
        r1_0.book_id,
        r1_0.id,
        r1_0.comment,
        r1_0.created_at,
        r1_0.rating,
        r1_0.updated_at,
        r1_0.user_id 
    from
        reviews r1_0 
    where
        r1_0.book_id=?
2025-08-28 16:13:40 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.created_at,
        c1_0.description,
        c1_0.name,
        c1_0.updated_at 
    from
        categories c1_0 
    where
        c1_0.id=?
2025-08-28 16:13:40 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    select
        b1_0.category_id,
        b1_0.id,
        b1_0.about,
        b1_0.audio_file_url,
        b1_0.author,
        b1_0.available_copies,
        b1_0.book_cover_url,
        b1_0.created_at,
        b1_0.format,
        b1_0.isbn,
        b1_0.name,
        b1_0.pdf_file_url,
        b1_0.publication_year,
        b1_0.short_details,
        b1_0.total_copies,
        b1_0.updated_at 
    from
        books b1_0 
    where
        b1_0.category_id=?
2025-08-28 16:13:40 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    select
        r1_0.book_id,
        r1_0.id,
        r1_0.comment,
        r1_0.created_at,
        r1_0.rating,
        r1_0.updated_at,
        r1_0.user_id 
    from
        reviews r1_0 
    where
        r1_0.book_id=?
2025-08-28 16:13:40 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.created_at,
        c1_0.description,
        c1_0.name,
        c1_0.updated_at 
    from
        categories c1_0 
    where
        c1_0.id=?
2025-08-28 16:13:40 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    select
        b1_0.category_id,
        b1_0.id,
        b1_0.about,
        b1_0.audio_file_url,
        b1_0.author,
        b1_0.available_copies,
        b1_0.book_cover_url,
        b1_0.created_at,
        b1_0.format,
        b1_0.isbn,
        b1_0.name,
        b1_0.pdf_file_url,
        b1_0.publication_year,
        b1_0.short_details,
        b1_0.total_copies,
        b1_0.updated_at 
    from
        books b1_0 
    where
        b1_0.category_id=?
2025-08-28 16:13:40 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    select
        r1_0.book_id,
        r1_0.id,
        r1_0.comment,
        r1_0.created_at,
        r1_0.rating,
        r1_0.updated_at,
        r1_0.user_id 
    from
        reviews r1_0 
    where
        r1_0.book_id=?
2025-08-28 16:13:40 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.created_at,
        c1_0.description,
        c1_0.name,
        c1_0.updated_at 
    from
        categories c1_0 
    where
        c1_0.id=?
2025-08-28 16:13:40 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    select
        r1_0.book_id,
        r1_0.id,
        r1_0.comment,
        r1_0.created_at,
        r1_0.rating,
        r1_0.updated_at,
        r1_0.user_id 
    from
        reviews r1_0 
    where
        r1_0.book_id=?
2025-08-28 16:13:40 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    select
        b1_0.category_id,
        b1_0.id,
        b1_0.about,
        b1_0.audio_file_url,
        b1_0.author,
        b1_0.available_copies,
        b1_0.book_cover_url,
        b1_0.created_at,
        b1_0.format,
        b1_0.isbn,
        b1_0.name,
        b1_0.pdf_file_url,
        b1_0.publication_year,
        b1_0.short_details,
        b1_0.total_copies,
        b1_0.updated_at 
    from
        books b1_0 
    where
        b1_0.category_id=?
2025-08-28 16:13:40 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    select
        r1_0.book_id,
        r1_0.id,
        r1_0.comment,
        r1_0.created_at,
        r1_0.rating,
        r1_0.updated_at,
        r1_0.user_id 
    from
        reviews r1_0 
    where
        r1_0.book_id=?
2025-08-28 16:13:40 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    select
        r1_0.book_id,
        r1_0.id,
        r1_0.comment,
        r1_0.created_at,
        r1_0.rating,
        r1_0.updated_at,
        r1_0.user_id 
    from
        reviews r1_0 
    where
        r1_0.book_id=?
2025-08-28 16:13:40 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    select
        r1_0.book_id,
        r1_0.id,
        r1_0.comment,
        r1_0.created_at,
        r1_0.rating,
        r1_0.updated_at,
        r1_0.user_id 
    from
        reviews r1_0 
    where
        r1_0.book_id=?
2025-08-28 16:13:40 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.created_at,
        c1_0.description,
        c1_0.name,
        c1_0.updated_at 
    from
        categories c1_0 
    where
        c1_0.id=?
2025-08-28 16:13:40 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    select
        b1_0.category_id,
        b1_0.id,
        b1_0.about,
        b1_0.audio_file_url,
        b1_0.author,
        b1_0.available_copies,
        b1_0.book_cover_url,
        b1_0.created_at,
        b1_0.format,
        b1_0.isbn,
        b1_0.name,
        b1_0.pdf_file_url,
        b1_0.publication_year,
        b1_0.short_details,
        b1_0.total_copies,
        b1_0.updated_at 
    from
        books b1_0 
    where
        b1_0.category_id=?
2025-08-28 16:13:40 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    select
        r1_0.book_id,
        r1_0.id,
        r1_0.comment,
        r1_0.created_at,
        r1_0.rating,
        r1_0.updated_at,
        r1_0.user_id 
    from
        reviews r1_0 
    where
        r1_0.book_id=?
2025-08-28 16:13:40 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    select
        r1_0.book_id,
        r1_0.id,
        r1_0.comment,
        r1_0.created_at,
        r1_0.rating,
        r1_0.updated_at,
        r1_0.user_id 
    from
        reviews r1_0 
    where
        r1_0.book_id=?
2025-08-28 16:13:40 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.address,
        u1_0.created_at,
        u1_0.date_of_birth,
        u1_0.email,
        u1_0.is_active,
        u1_0.name,
        u1_0.password_hash,
        u1_0.role,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.username=?
2025-08-28 16:13:40 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    select
        r1_0.book_id,
        r1_0.id,
        r1_0.comment,
        r1_0.created_at,
        r1_0.rating,
        r1_0.updated_at,
        r1_0.user_id 
    from
        reviews r1_0 
    where
        r1_0.book_id=?
2025-08-28 16:13:40 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.created_at,
        c1_0.description,
        c1_0.name,
        c1_0.updated_at 
    from
        categories c1_0 
    where
        c1_0.id=?
2025-08-28 16:13:40 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    select
        b1_0.id,
        b1_0.about,
        b1_0.audio_file_url,
        b1_0.author,
        b1_0.available_copies,
        b1_0.book_cover_url,
        b1_0.category_id,
        b1_0.created_at,
        b1_0.format,
        b1_0.isbn,
        b1_0.name,
        b1_0.pdf_file_url,
        b1_0.publication_year,
        b1_0.short_details,
        b1_0.total_copies,
        b1_0.updated_at 
    from
        books b1_0 
    order by
        b1_0.id desc 
    fetch
        first ? rows only
2025-08-28 16:13:40 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    select
        b1_0.category_id,
        b1_0.id,
        b1_0.about,
        b1_0.audio_file_url,
        b1_0.author,
        b1_0.available_copies,
        b1_0.book_cover_url,
        b1_0.created_at,
        b1_0.format,
        b1_0.isbn,
        b1_0.name,
        b1_0.pdf_file_url,
        b1_0.publication_year,
        b1_0.short_details,
        b1_0.total_copies,
        b1_0.updated_at 
    from
        books b1_0 
    where
        b1_0.category_id=?
2025-08-28 16:13:40 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    select
        count(b1_0.id) 
    from
        books b1_0
2025-08-28 16:13:40 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    select
        r1_0.book_id,
        r1_0.id,
        r1_0.comment,
        r1_0.created_at,
        r1_0.rating,
        r1_0.updated_at,
        r1_0.user_id 
    from
        reviews r1_0 
    where
        r1_0.book_id=?
2025-08-28 16:13:40 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.created_at,
        c1_0.description,
        c1_0.name,
        c1_0.updated_at 
    from
        categories c1_0 
    where
        c1_0.id=?
2025-08-28 16:13:40 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    select
        b1_0.category_id,
        b1_0.id,
        b1_0.about,
        b1_0.audio_file_url,
        b1_0.author,
        b1_0.available_copies,
        b1_0.book_cover_url,
        b1_0.created_at,
        b1_0.format,
        b1_0.isbn,
        b1_0.name,
        b1_0.pdf_file_url,
        b1_0.publication_year,
        b1_0.short_details,
        b1_0.total_copies,
        b1_0.updated_at 
    from
        books b1_0 
    where
        b1_0.category_id=?
2025-08-28 16:13:40 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    select
        r1_0.book_id,
        r1_0.id,
        r1_0.comment,
        r1_0.created_at,
        r1_0.rating,
        r1_0.updated_at,
        r1_0.user_id 
    from
        reviews r1_0 
    where
        r1_0.book_id=?
2025-08-28 16:13:40 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.created_at,
        c1_0.description,
        c1_0.name,
        c1_0.updated_at 
    from
        categories c1_0 
    where
        c1_0.id=?
2025-08-28 16:13:40 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    select
        b1_0.category_id,
        b1_0.id,
        b1_0.about,
        b1_0.audio_file_url,
        b1_0.author,
        b1_0.available_copies,
        b1_0.book_cover_url,
        b1_0.created_at,
        b1_0.format,
        b1_0.isbn,
        b1_0.name,
        b1_0.pdf_file_url,
        b1_0.publication_year,
        b1_0.short_details,
        b1_0.total_copies,
        b1_0.updated_at 
    from
        books b1_0 
    where
        b1_0.category_id=?
2025-08-28 16:13:40 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    select
        r1_0.book_id,
        r1_0.id,
        r1_0.comment,
        r1_0.created_at,
        r1_0.rating,
        r1_0.updated_at,
        r1_0.user_id 
    from
        reviews r1_0 
    where
        r1_0.book_id=?
2025-08-28 16:13:40 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.created_at,
        c1_0.description,
        c1_0.name,
        c1_0.updated_at 
    from
        categories c1_0 
    where
        c1_0.id=?
2025-08-28 16:13:40 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    select
        b1_0.category_id,
        b1_0.id,
        b1_0.about,
        b1_0.audio_file_url,
        b1_0.author,
        b1_0.available_copies,
        b1_0.book_cover_url,
        b1_0.created_at,
        b1_0.format,
        b1_0.isbn,
        b1_0.name,
        b1_0.pdf_file_url,
        b1_0.publication_year,
        b1_0.short_details,
        b1_0.total_copies,
        b1_0.updated_at 
    from
        books b1_0 
    where
        b1_0.category_id=?
2025-08-28 16:13:40 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    select
        r1_0.book_id,
        r1_0.id,
        r1_0.comment,
        r1_0.created_at,
        r1_0.rating,
        r1_0.updated_at,
        r1_0.user_id 
    from
        reviews r1_0 
    where
        r1_0.book_id=?
2025-08-28 16:13:40 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.created_at,
        c1_0.description,
        c1_0.name,
        c1_0.updated_at 
    from
        categories c1_0 
    where
        c1_0.id=?
2025-08-28 16:13:40 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    select
        b1_0.category_id,
        b1_0.id,
        b1_0.about,
        b1_0.audio_file_url,
        b1_0.author,
        b1_0.available_copies,
        b1_0.book_cover_url,
        b1_0.created_at,
        b1_0.format,
        b1_0.isbn,
        b1_0.name,
        b1_0.pdf_file_url,
        b1_0.publication_year,
        b1_0.short_details,
        b1_0.total_copies,
        b1_0.updated_at 
    from
        books b1_0 
    where
        b1_0.category_id=?
2025-08-28 16:13:40 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    select
        r1_0.book_id,
        r1_0.id,
        r1_0.comment,
        r1_0.created_at,
        r1_0.rating,
        r1_0.updated_at,
        r1_0.user_id 
    from
        reviews r1_0 
    where
        r1_0.book_id=?
2025-08-28 16:13:40 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.created_at,
        c1_0.description,
        c1_0.name,
        c1_0.updated_at 
    from
        categories c1_0 
    where
        c1_0.id=?
2025-08-28 16:13:40 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    select
        b1_0.category_id,
        b1_0.id,
        b1_0.about,
        b1_0.audio_file_url,
        b1_0.author,
        b1_0.available_copies,
        b1_0.book_cover_url,
        b1_0.created_at,
        b1_0.format,
        b1_0.isbn,
        b1_0.name,
        b1_0.pdf_file_url,
        b1_0.publication_year,
        b1_0.short_details,
        b1_0.total_copies,
        b1_0.updated_at 
    from
        books b1_0 
    where
        b1_0.category_id=?
2025-08-28 16:13:40 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    select
        r1_0.book_id,
        r1_0.id,
        r1_0.comment,
        r1_0.created_at,
        r1_0.rating,
        r1_0.updated_at,
        r1_0.user_id 
    from
        reviews r1_0 
    where
        r1_0.book_id=?
2025-08-28 16:13:40 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.address,
        u1_0.created_at,
        u1_0.date_of_birth,
        u1_0.email,
        u1_0.is_active,
        u1_0.name,
        u1_0.password_hash,
        u1_0.role,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.username=?
2025-08-28 16:13:40 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.created_at,
        c1_0.description,
        c1_0.name,
        c1_0.updated_at 
    from
        categories c1_0 
    where
        c1_0.id=?
2025-08-28 16:13:40 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    select
        b1_0.category_id,
        b1_0.id,
        b1_0.about,
        b1_0.audio_file_url,
        b1_0.author,
        b1_0.available_copies,
        b1_0.book_cover_url,
        b1_0.created_at,
        b1_0.format,
        b1_0.isbn,
        b1_0.name,
        b1_0.pdf_file_url,
        b1_0.publication_year,
        b1_0.short_details,
        b1_0.total_copies,
        b1_0.updated_at 
    from
        books b1_0 
    where
        b1_0.category_id=?
2025-08-28 16:13:40 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    select
        r1_0.book_id,
        r1_0.id,
        r1_0.comment,
        r1_0.created_at,
        r1_0.rating,
        r1_0.updated_at,
        r1_0.user_id 
    from
        reviews r1_0 
    where
        r1_0.book_id=?
2025-08-28 16:13:40 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.created_at,
        c1_0.description,
        c1_0.name,
        c1_0.updated_at 
    from
        categories c1_0 
    where
        c1_0.id=?
2025-08-28 16:13:40 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    select
        b1_0.category_id,
        b1_0.id,
        b1_0.about,
        b1_0.audio_file_url,
        b1_0.author,
        b1_0.available_copies,
        b1_0.book_cover_url,
        b1_0.created_at,
        b1_0.format,
        b1_0.isbn,
        b1_0.name,
        b1_0.pdf_file_url,
        b1_0.publication_year,
        b1_0.short_details,
        b1_0.total_copies,
        b1_0.updated_at 
    from
        books b1_0 
    where
        b1_0.category_id=?
2025-08-28 16:13:40 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    select
        r1_0.book_id,
        r1_0.id,
        r1_0.comment,
        r1_0.created_at,
        r1_0.rating,
        r1_0.updated_at,
        r1_0.user_id 
    from
        reviews r1_0 
    where
        r1_0.book_id=?
2025-08-28 16:13:40 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    select
        r1_0.book_id,
        r1_0.id,
        r1_0.comment,
        r1_0.created_at,
        r1_0.rating,
        r1_0.updated_at,
        r1_0.user_id 
    from
        reviews r1_0 
    where
        r1_0.book_id=?
2025-08-28 16:13:40 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    select
        r1_0.book_id,
        r1_0.id,
        r1_0.comment,
        r1_0.created_at,
        r1_0.rating,
        r1_0.updated_at,
        r1_0.user_id 
    from
        reviews r1_0 
    where
        r1_0.book_id=?
2025-08-28 16:13:40 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    select
        r1_0.book_id,
        r1_0.id,
        r1_0.comment,
        r1_0.created_at,
        r1_0.rating,
        r1_0.updated_at,
        r1_0.user_id 
    from
        reviews r1_0 
    where
        r1_0.book_id=?
2025-08-28 16:13:40 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    select
        b1_0.id,
        b1_0.about,
        b1_0.audio_file_url,
        b1_0.author,
        b1_0.available_copies,
        b1_0.book_cover_url,
        b1_0.category_id,
        b1_0.created_at,
        b1_0.format,
        b1_0.isbn,
        b1_0.name,
        b1_0.pdf_file_url,
        b1_0.publication_year,
        b1_0.short_details,
        b1_0.total_copies,
        b1_0.updated_at 
    from
        books b1_0 
    order by
        b1_0.id desc 
    fetch
        first ? rows only
2025-08-28 16:13:40 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.created_at,
        c1_0.description,
        c1_0.name,
        c1_0.updated_at 
    from
        categories c1_0 
    where
        c1_0.id=?
2025-08-28 16:13:40 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    select
        b1_0.category_id,
        b1_0.id,
        b1_0.about,
        b1_0.audio_file_url,
        b1_0.author,
        b1_0.available_copies,
        b1_0.book_cover_url,
        b1_0.created_at,
        b1_0.format,
        b1_0.isbn,
        b1_0.name,
        b1_0.pdf_file_url,
        b1_0.publication_year,
        b1_0.short_details,
        b1_0.total_copies,
        b1_0.updated_at 
    from
        books b1_0 
    where
        b1_0.category_id=?
2025-08-28 16:13:40 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    select
        r1_0.book_id,
        r1_0.id,
        r1_0.comment,
        r1_0.created_at,
        r1_0.rating,
        r1_0.updated_at,
        r1_0.user_id 
    from
        reviews r1_0 
    where
        r1_0.book_id=?
2025-08-28 16:13:40 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.created_at,
        c1_0.description,
        c1_0.name,
        c1_0.updated_at 
    from
        categories c1_0 
    where
        c1_0.id=?
2025-08-28 16:13:40 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    select
        b1_0.category_id,
        b1_0.id,
        b1_0.about,
        b1_0.audio_file_url,
        b1_0.author,
        b1_0.available_copies,
        b1_0.book_cover_url,
        b1_0.created_at,
        b1_0.format,
        b1_0.isbn,
        b1_0.name,
        b1_0.pdf_file_url,
        b1_0.publication_year,
        b1_0.short_details,
        b1_0.total_copies,
        b1_0.updated_at 
    from
        books b1_0 
    where
        b1_0.category_id=?
2025-08-28 16:13:40 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    select
        r1_0.book_id,
        r1_0.id,
        r1_0.comment,
        r1_0.created_at,
        r1_0.rating,
        r1_0.updated_at,
        r1_0.user_id 
    from
        reviews r1_0 
    where
        r1_0.book_id=?
2025-08-28 16:13:40 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.created_at,
        c1_0.description,
        c1_0.name,
        c1_0.updated_at 
    from
        categories c1_0 
    where
        c1_0.id=?
2025-08-28 16:13:40 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    select
        b1_0.category_id,
        b1_0.id,
        b1_0.about,
        b1_0.audio_file_url,
        b1_0.author,
        b1_0.available_copies,
        b1_0.book_cover_url,
        b1_0.created_at,
        b1_0.format,
        b1_0.isbn,
        b1_0.name,
        b1_0.pdf_file_url,
        b1_0.publication_year,
        b1_0.short_details,
        b1_0.total_copies,
        b1_0.updated_at 
    from
        books b1_0 
    where
        b1_0.category_id=?
2025-08-28 16:13:40 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    select
        r1_0.book_id,
        r1_0.id,
        r1_0.comment,
        r1_0.created_at,
        r1_0.rating,
        r1_0.updated_at,
        r1_0.user_id 
    from
        reviews r1_0 
    where
        r1_0.book_id=?
2025-08-28 16:13:40 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.created_at,
        c1_0.description,
        c1_0.name,
        c1_0.updated_at 
    from
        categories c1_0 
    where
        c1_0.id=?
2025-08-28 16:13:40 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    select
        b1_0.category_id,
        b1_0.id,
        b1_0.about,
        b1_0.audio_file_url,
        b1_0.author,
        b1_0.available_copies,
        b1_0.book_cover_url,
        b1_0.created_at,
        b1_0.format,
        b1_0.isbn,
        b1_0.name,
        b1_0.pdf_file_url,
        b1_0.publication_year,
        b1_0.short_details,
        b1_0.total_copies,
        b1_0.updated_at 
    from
        books b1_0 
    where
        b1_0.category_id=?
2025-08-28 16:13:40 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    select
        r1_0.book_id,
        r1_0.id,
        r1_0.comment,
        r1_0.created_at,
        r1_0.rating,
        r1_0.updated_at,
        r1_0.user_id 
    from
        reviews r1_0 
    where
        r1_0.book_id=?
2025-08-28 16:13:40 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.created_at,
        c1_0.description,
        c1_0.name,
        c1_0.updated_at 
    from
        categories c1_0 
    where
        c1_0.id=?
2025-08-28 16:13:40 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    select
        b1_0.category_id,
        b1_0.id,
        b1_0.about,
        b1_0.audio_file_url,
        b1_0.author,
        b1_0.available_copies,
        b1_0.book_cover_url,
        b1_0.created_at,
        b1_0.format,
        b1_0.isbn,
        b1_0.name,
        b1_0.pdf_file_url,
        b1_0.publication_year,
        b1_0.short_details,
        b1_0.total_copies,
        b1_0.updated_at 
    from
        books b1_0 
    where
        b1_0.category_id=?
2025-08-28 16:13:40 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    select
        r1_0.book_id,
        r1_0.id,
        r1_0.comment,
        r1_0.created_at,
        r1_0.rating,
        r1_0.updated_at,
        r1_0.user_id 
    from
        reviews r1_0 
    where
        r1_0.book_id=?
2025-08-28 16:13:40 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.created_at,
        c1_0.description,
        c1_0.name,
        c1_0.updated_at 
    from
        categories c1_0 
    where
        c1_0.id=?
2025-08-28 16:13:40 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    select
        b1_0.category_id,
        b1_0.id,
        b1_0.about,
        b1_0.audio_file_url,
        b1_0.author,
        b1_0.available_copies,
        b1_0.book_cover_url,
        b1_0.created_at,
        b1_0.format,
        b1_0.isbn,
        b1_0.name,
        b1_0.pdf_file_url,
        b1_0.publication_year,
        b1_0.short_details,
        b1_0.total_copies,
        b1_0.updated_at 
    from
        books b1_0 
    where
        b1_0.category_id=?
2025-08-28 16:13:40 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    select
        r1_0.book_id,
        r1_0.id,
        r1_0.comment,
        r1_0.created_at,
        r1_0.rating,
        r1_0.updated_at,
        r1_0.user_id 
    from
        reviews r1_0 
    where
        r1_0.book_id=?
2025-08-28 16:13:40 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.created_at,
        c1_0.description,
        c1_0.name,
        c1_0.updated_at 
    from
        categories c1_0 
    where
        c1_0.id=?
2025-08-28 16:13:40 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    select
        b1_0.category_id,
        b1_0.id,
        b1_0.about,
        b1_0.audio_file_url,
        b1_0.author,
        b1_0.available_copies,
        b1_0.book_cover_url,
        b1_0.created_at,
        b1_0.format,
        b1_0.isbn,
        b1_0.name,
        b1_0.pdf_file_url,
        b1_0.publication_year,
        b1_0.short_details,
        b1_0.total_copies,
        b1_0.updated_at 
    from
        books b1_0 
    where
        b1_0.category_id=?
2025-08-28 16:13:40 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    select
        r1_0.book_id,
        r1_0.id,
        r1_0.comment,
        r1_0.created_at,
        r1_0.rating,
        r1_0.updated_at,
        r1_0.user_id 
    from
        reviews r1_0 
    where
        r1_0.book_id=?
2025-08-28 16:13:40 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    select
        r1_0.book_id,
        r1_0.id,
        r1_0.comment,
        r1_0.created_at,
        r1_0.rating,
        r1_0.updated_at,
        r1_0.user_id 
    from
        reviews r1_0 
    where
        r1_0.book_id=?
2025-08-28 16:13:40 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    select
        r1_0.book_id,
        r1_0.id,
        r1_0.comment,
        r1_0.created_at,
        r1_0.rating,
        r1_0.updated_at,
        r1_0.user_id 
    from
        reviews r1_0 
    where
        r1_0.book_id=?
2025-08-28 16:13:40 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    select
        r1_0.book_id,
        r1_0.id,
        r1_0.comment,
        r1_0.created_at,
        r1_0.rating,
        r1_0.updated_at,
        r1_0.user_id 
    from
        reviews r1_0 
    where
        r1_0.book_id=?
2025-08-28 16:13:40 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.address,
        u1_0.created_at,
        u1_0.date_of_birth,
        u1_0.email,
        u1_0.is_active,
        u1_0.name,
        u1_0.password_hash,
        u1_0.role,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.username=?
2025-08-28 16:13:40 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.address,
        u1_0.created_at,
        u1_0.date_of_birth,
        u1_0.email,
        u1_0.is_active,
        u1_0.name,
        u1_0.password_hash,
        u1_0.role,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.username=?
2025-08-28 16:13:40 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.created_at,
        c1_0.description,
        c1_0.name,
        c1_0.updated_at 
    from
        categories c1_0
2025-08-28 16:13:40 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    select
        b1_0.category_id,
        b1_0.id,
        b1_0.about,
        b1_0.audio_file_url,
        b1_0.author,
        b1_0.available_copies,
        b1_0.book_cover_url,
        b1_0.created_at,
        b1_0.format,
        b1_0.isbn,
        b1_0.name,
        b1_0.pdf_file_url,
        b1_0.publication_year,
        b1_0.short_details,
        b1_0.total_copies,
        b1_0.updated_at 
    from
        books b1_0 
    where
        b1_0.category_id=?
2025-08-28 16:13:40 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    select
        b1_0.category_id,
        b1_0.id,
        b1_0.about,
        b1_0.audio_file_url,
        b1_0.author,
        b1_0.available_copies,
        b1_0.book_cover_url,
        b1_0.created_at,
        b1_0.format,
        b1_0.isbn,
        b1_0.name,
        b1_0.pdf_file_url,
        b1_0.publication_year,
        b1_0.short_details,
        b1_0.total_copies,
        b1_0.updated_at 
    from
        books b1_0 
    where
        b1_0.category_id=?
2025-08-28 16:13:40 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    select
        b1_0.category_id,
        b1_0.id,
        b1_0.about,
        b1_0.audio_file_url,
        b1_0.author,
        b1_0.available_copies,
        b1_0.book_cover_url,
        b1_0.created_at,
        b1_0.format,
        b1_0.isbn,
        b1_0.name,
        b1_0.pdf_file_url,
        b1_0.publication_year,
        b1_0.short_details,
        b1_0.total_copies,
        b1_0.updated_at 
    from
        books b1_0 
    where
        b1_0.category_id=?
2025-08-28 16:13:40 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    select
        b1_0.category_id,
        b1_0.id,
        b1_0.about,
        b1_0.audio_file_url,
        b1_0.author,
        b1_0.available_copies,
        b1_0.book_cover_url,
        b1_0.created_at,
        b1_0.format,
        b1_0.isbn,
        b1_0.name,
        b1_0.pdf_file_url,
        b1_0.publication_year,
        b1_0.short_details,
        b1_0.total_copies,
        b1_0.updated_at 
    from
        books b1_0 
    where
        b1_0.category_id=?
2025-08-28 16:13:40 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL - 
    select
        b1_0.id,
        b1_0.about,
        b1_0.audio_file_url,
        b1_0.author,
        b1_0.available_copies,
        b1_0.book_cover_url,
        b1_0.category_id,
        b1_0.created_at,
        b1_0.format,
        b1_0.isbn,
        b1_0.name,
        b1_0.pdf_file_url,
        b1_0.publication_year,
        b1_0.short_details,
        b1_0.total_copies,
        b1_0.updated_at 
    from
        books b1_0 
    left join
        categories c1_0 
            on c1_0.id=b1_0.category_id 
    where
        c1_0.id=? 
    fetch
        first ? rows only
2025-08-28 16:13:40 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    select
        b1_0.category_id,
        b1_0.id,
        b1_0.about,
        b1_0.audio_file_url,
        b1_0.author,
        b1_0.available_copies,
        b1_0.book_cover_url,
        b1_0.created_at,
        b1_0.format,
        b1_0.isbn,
        b1_0.name,
        b1_0.pdf_file_url,
        b1_0.publication_year,
        b1_0.short_details,
        b1_0.total_copies,
        b1_0.updated_at 
    from
        books b1_0 
    where
        b1_0.category_id=?
2025-08-28 16:13:40 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    select
        b1_0.category_id,
        b1_0.id,
        b1_0.about,
        b1_0.audio_file_url,
        b1_0.author,
        b1_0.available_copies,
        b1_0.book_cover_url,
        b1_0.created_at,
        b1_0.format,
        b1_0.isbn,
        b1_0.name,
        b1_0.pdf_file_url,
        b1_0.publication_year,
        b1_0.short_details,
        b1_0.total_copies,
        b1_0.updated_at 
    from
        books b1_0 
    where
        b1_0.category_id=?
2025-08-28 16:13:40 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.created_at,
        c1_0.description,
        c1_0.name,
        c1_0.updated_at 
    from
        categories c1_0 
    where
        c1_0.id=?
2025-08-28 16:13:40 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    select
        b1_0.category_id,
        b1_0.id,
        b1_0.about,
        b1_0.audio_file_url,
        b1_0.author,
        b1_0.available_copies,
        b1_0.book_cover_url,
        b1_0.created_at,
        b1_0.format,
        b1_0.isbn,
        b1_0.name,
        b1_0.pdf_file_url,
        b1_0.publication_year,
        b1_0.short_details,
        b1_0.total_copies,
        b1_0.updated_at 
    from
        books b1_0 
    where
        b1_0.category_id=?
2025-08-28 16:13:40 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL - 
    select
        b1_0.category_id,
        b1_0.id,
        b1_0.about,
        b1_0.audio_file_url,
        b1_0.author,
        b1_0.available_copies,
        b1_0.book_cover_url,
        b1_0.created_at,
        b1_0.format,
        b1_0.isbn,
        b1_0.name,
        b1_0.pdf_file_url,
        b1_0.publication_year,
        b1_0.short_details,
        b1_0.total_copies,
        b1_0.updated_at 
    from
        books b1_0 
    where
        b1_0.category_id=?
2025-08-28 16:13:40 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL - 
    select
        r1_0.book_id,
        r1_0.id,
        r1_0.comment,
        r1_0.created_at,
        r1_0.rating,
        r1_0.updated_at,
        r1_0.user_id 
    from
        reviews r1_0 
    where
        r1_0.book_id=?
2025-08-28 16:13:40 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL - 
    select
        r1_0.book_id,
        r1_0.id,
        r1_0.comment,
        r1_0.created_at,
        r1_0.rating,
        r1_0.updated_at,
        r1_0.user_id 
    from
        reviews r1_0 
    where
        r1_0.book_id=?
2025-08-28 16:13:40 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.address,
        u1_0.created_at,
        u1_0.date_of_birth,
        u1_0.email,
        u1_0.is_active,
        u1_0.name,
        u1_0.password_hash,
        u1_0.role,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.username=?
2025-08-28 16:13:40 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.address,
        u1_0.created_at,
        u1_0.date_of_birth,
        u1_0.email,
        u1_0.is_active,
        u1_0.name,
        u1_0.password_hash,
        u1_0.role,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.username=?
2025-08-28 16:13:40 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    select
        b1_0.id,
        b1_0.about,
        b1_0.audio_file_url,
        b1_0.author,
        b1_0.available_copies,
        b1_0.book_cover_url,
        b1_0.category_id,
        b1_0.created_at,
        b1_0.format,
        b1_0.isbn,
        b1_0.name,
        b1_0.pdf_file_url,
        b1_0.publication_year,
        b1_0.short_details,
        b1_0.total_copies,
        b1_0.updated_at 
    from
        books b1_0 
    left join
        categories c1_0 
            on c1_0.id=b1_0.category_id 
    where
        c1_0.id=? 
    fetch
        first ? rows only
2025-08-28 16:13:40 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.created_at,
        c1_0.description,
        c1_0.name,
        c1_0.updated_at 
    from
        categories c1_0
2025-08-28 16:13:40 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.created_at,
        c1_0.description,
        c1_0.name,
        c1_0.updated_at 
    from
        categories c1_0 
    where
        c1_0.id=?
2025-08-28 16:13:40 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        b1_0.category_id,
        b1_0.id,
        b1_0.about,
        b1_0.audio_file_url,
        b1_0.author,
        b1_0.available_copies,
        b1_0.book_cover_url,
        b1_0.created_at,
        b1_0.format,
        b1_0.isbn,
        b1_0.name,
        b1_0.pdf_file_url,
        b1_0.publication_year,
        b1_0.short_details,
        b1_0.total_copies,
        b1_0.updated_at 
    from
        books b1_0 
    where
        b1_0.category_id=?
2025-08-28 16:13:40 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        b1_0.category_id,
        b1_0.id,
        b1_0.about,
        b1_0.audio_file_url,
        b1_0.author,
        b1_0.available_copies,
        b1_0.book_cover_url,
        b1_0.created_at,
        b1_0.format,
        b1_0.isbn,
        b1_0.name,
        b1_0.pdf_file_url,
        b1_0.publication_year,
        b1_0.short_details,
        b1_0.total_copies,
        b1_0.updated_at 
    from
        books b1_0 
    where
        b1_0.category_id=?
2025-08-28 16:13:40 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        b1_0.category_id,
        b1_0.id,
        b1_0.about,
        b1_0.audio_file_url,
        b1_0.author,
        b1_0.available_copies,
        b1_0.book_cover_url,
        b1_0.created_at,
        b1_0.format,
        b1_0.isbn,
        b1_0.name,
        b1_0.pdf_file_url,
        b1_0.publication_year,
        b1_0.short_details,
        b1_0.total_copies,
        b1_0.updated_at 
    from
        books b1_0 
    where
        b1_0.category_id=?
2025-08-28 16:13:40 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    select
        b1_0.category_id,
        b1_0.id,
        b1_0.about,
        b1_0.audio_file_url,
        b1_0.author,
        b1_0.available_copies,
        b1_0.book_cover_url,
        b1_0.created_at,
        b1_0.format,
        b1_0.isbn,
        b1_0.name,
        b1_0.pdf_file_url,
        b1_0.publication_year,
        b1_0.short_details,
        b1_0.total_copies,
        b1_0.updated_at 
    from
        books b1_0 
    where
        b1_0.category_id=?
2025-08-28 16:13:40 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    select
        r1_0.book_id,
        r1_0.id,
        r1_0.comment,
        r1_0.created_at,
        r1_0.rating,
        r1_0.updated_at,
        r1_0.user_id 
    from
        reviews r1_0 
    where
        r1_0.book_id=?
2025-08-28 16:13:40 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        b1_0.category_id,
        b1_0.id,
        b1_0.about,
        b1_0.audio_file_url,
        b1_0.author,
        b1_0.available_copies,
        b1_0.book_cover_url,
        b1_0.created_at,
        b1_0.format,
        b1_0.isbn,
        b1_0.name,
        b1_0.pdf_file_url,
        b1_0.publication_year,
        b1_0.short_details,
        b1_0.total_copies,
        b1_0.updated_at 
    from
        books b1_0 
    where
        b1_0.category_id=?
2025-08-28 16:13:40 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    select
        r1_0.book_id,
        r1_0.id,
        r1_0.comment,
        r1_0.created_at,
        r1_0.rating,
        r1_0.updated_at,
        r1_0.user_id 
    from
        reviews r1_0 
    where
        r1_0.book_id=?
2025-08-28 16:13:40 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        b1_0.category_id,
        b1_0.id,
        b1_0.about,
        b1_0.audio_file_url,
        b1_0.author,
        b1_0.available_copies,
        b1_0.book_cover_url,
        b1_0.created_at,
        b1_0.format,
        b1_0.isbn,
        b1_0.name,
        b1_0.pdf_file_url,
        b1_0.publication_year,
        b1_0.short_details,
        b1_0.total_copies,
        b1_0.updated_at 
    from
        books b1_0 
    where
        b1_0.category_id=?
2025-08-28 16:13:40 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        b1_0.category_id,
        b1_0.id,
        b1_0.about,
        b1_0.audio_file_url,
        b1_0.author,
        b1_0.available_copies,
        b1_0.book_cover_url,
        b1_0.created_at,
        b1_0.format,
        b1_0.isbn,
        b1_0.name,
        b1_0.pdf_file_url,
        b1_0.publication_year,
        b1_0.short_details,
        b1_0.total_copies,
        b1_0.updated_at 
    from
        books b1_0 
    where
        b1_0.category_id=?
2025-08-28 16:13:40 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        b1_0.category_id,
        b1_0.id,
        b1_0.about,
        b1_0.audio_file_url,
        b1_0.author,
        b1_0.available_copies,
        b1_0.book_cover_url,
        b1_0.created_at,
        b1_0.format,
        b1_0.isbn,
        b1_0.name,
        b1_0.pdf_file_url,
        b1_0.publication_year,
        b1_0.short_details,
        b1_0.total_copies,
        b1_0.updated_at 
    from
        books b1_0 
    where
        b1_0.category_id=?
2025-08-28 16:36:20 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.address,
        u1_0.created_at,
        u1_0.date_of_birth,
        u1_0.email,
        u1_0.is_active,
        u1_0.name,
        u1_0.password_hash,
        u1_0.role,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.username=?
2025-08-28 16:36:20 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    select
        b1_0.id,
        b1_0.about,
        b1_0.audio_file_url,
        b1_0.author,
        b1_0.available_copies,
        b1_0.book_cover_url,
        b1_0.category_id,
        b1_0.created_at,
        b1_0.format,
        b1_0.isbn,
        b1_0.name,
        b1_0.pdf_file_url,
        b1_0.publication_year,
        b1_0.short_details,
        b1_0.total_copies,
        b1_0.updated_at 
    from
        books b1_0 
    offset
        ? rows 
    fetch
        first ? rows only
2025-08-28 16:36:20 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    select
        count(b1_0.id) 
    from
        books b1_0
2025-08-28 16:36:20 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.created_at,
        c1_0.description,
        c1_0.name,
        c1_0.updated_at 
    from
        categories c1_0 
    where
        c1_0.id=?
2025-08-28 16:36:20 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    select
        b1_0.category_id,
        b1_0.id,
        b1_0.about,
        b1_0.audio_file_url,
        b1_0.author,
        b1_0.available_copies,
        b1_0.book_cover_url,
        b1_0.created_at,
        b1_0.format,
        b1_0.isbn,
        b1_0.name,
        b1_0.pdf_file_url,
        b1_0.publication_year,
        b1_0.short_details,
        b1_0.total_copies,
        b1_0.updated_at 
    from
        books b1_0 
    where
        b1_0.category_id=?
2025-08-28 16:36:20 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    select
        r1_0.book_id,
        r1_0.id,
        r1_0.comment,
        r1_0.created_at,
        r1_0.rating,
        r1_0.updated_at,
        r1_0.user_id 
    from
        reviews r1_0 
    where
        r1_0.book_id=?
2025-08-28 16:36:20 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.created_at,
        c1_0.description,
        c1_0.name,
        c1_0.updated_at 
    from
        categories c1_0 
    where
        c1_0.id=?
2025-08-28 16:36:20 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    select
        b1_0.category_id,
        b1_0.id,
        b1_0.about,
        b1_0.audio_file_url,
        b1_0.author,
        b1_0.available_copies,
        b1_0.book_cover_url,
        b1_0.created_at,
        b1_0.format,
        b1_0.isbn,
        b1_0.name,
        b1_0.pdf_file_url,
        b1_0.publication_year,
        b1_0.short_details,
        b1_0.total_copies,
        b1_0.updated_at 
    from
        books b1_0 
    where
        b1_0.category_id=?
2025-08-28 16:36:20 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    select
        r1_0.book_id,
        r1_0.id,
        r1_0.comment,
        r1_0.created_at,
        r1_0.rating,
        r1_0.updated_at,
        r1_0.user_id 
    from
        reviews r1_0 
    where
        r1_0.book_id=?
2025-08-28 16:36:20 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.created_at,
        c1_0.description,
        c1_0.name,
        c1_0.updated_at 
    from
        categories c1_0 
    where
        c1_0.id=?
2025-08-28 16:36:20 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    select
        b1_0.category_id,
        b1_0.id,
        b1_0.about,
        b1_0.audio_file_url,
        b1_0.author,
        b1_0.available_copies,
        b1_0.book_cover_url,
        b1_0.created_at,
        b1_0.format,
        b1_0.isbn,
        b1_0.name,
        b1_0.pdf_file_url,
        b1_0.publication_year,
        b1_0.short_details,
        b1_0.total_copies,
        b1_0.updated_at 
    from
        books b1_0 
    where
        b1_0.category_id=?
2025-08-28 16:36:20 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    select
        r1_0.book_id,
        r1_0.id,
        r1_0.comment,
        r1_0.created_at,
        r1_0.rating,
        r1_0.updated_at,
        r1_0.user_id 
    from
        reviews r1_0 
    where
        r1_0.book_id=?
2025-08-28 16:36:20 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.created_at,
        c1_0.description,
        c1_0.name,
        c1_0.updated_at 
    from
        categories c1_0 
    where
        c1_0.id=?
2025-08-28 16:36:20 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    select
        b1_0.category_id,
        b1_0.id,
        b1_0.about,
        b1_0.audio_file_url,
        b1_0.author,
        b1_0.available_copies,
        b1_0.book_cover_url,
        b1_0.created_at,
        b1_0.format,
        b1_0.isbn,
        b1_0.name,
        b1_0.pdf_file_url,
        b1_0.publication_year,
        b1_0.short_details,
        b1_0.total_copies,
        b1_0.updated_at 
    from
        books b1_0 
    where
        b1_0.category_id=?
2025-08-28 16:36:20 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    select
        r1_0.book_id,
        r1_0.id,
        r1_0.comment,
        r1_0.created_at,
        r1_0.rating,
        r1_0.updated_at,
        r1_0.user_id 
    from
        reviews r1_0 
    where
        r1_0.book_id=?
2025-08-28 16:36:20 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.created_at,
        c1_0.description,
        c1_0.name,
        c1_0.updated_at 
    from
        categories c1_0 
    where
        c1_0.id=?
2025-08-28 16:36:20 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    select
        b1_0.category_id,
        b1_0.id,
        b1_0.about,
        b1_0.audio_file_url,
        b1_0.author,
        b1_0.available_copies,
        b1_0.book_cover_url,
        b1_0.created_at,
        b1_0.format,
        b1_0.isbn,
        b1_0.name,
        b1_0.pdf_file_url,
        b1_0.publication_year,
        b1_0.short_details,
        b1_0.total_copies,
        b1_0.updated_at 
    from
        books b1_0 
    where
        b1_0.category_id=?
2025-08-28 16:36:20 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    select
        r1_0.book_id,
        r1_0.id,
        r1_0.comment,
        r1_0.created_at,
        r1_0.rating,
        r1_0.updated_at,
        r1_0.user_id 
    from
        reviews r1_0 
    where
        r1_0.book_id=?
2025-08-28 16:36:20 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.created_at,
        c1_0.description,
        c1_0.name,
        c1_0.updated_at 
    from
        categories c1_0 
    where
        c1_0.id=?
2025-08-28 16:36:20 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    select
        b1_0.category_id,
        b1_0.id,
        b1_0.about,
        b1_0.audio_file_url,
        b1_0.author,
        b1_0.available_copies,
        b1_0.book_cover_url,
        b1_0.created_at,
        b1_0.format,
        b1_0.isbn,
        b1_0.name,
        b1_0.pdf_file_url,
        b1_0.publication_year,
        b1_0.short_details,
        b1_0.total_copies,
        b1_0.updated_at 
    from
        books b1_0 
    where
        b1_0.category_id=?
2025-08-28 16:36:20 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    select
        r1_0.book_id,
        r1_0.id,
        r1_0.comment,
        r1_0.created_at,
        r1_0.rating,
        r1_0.updated_at,
        r1_0.user_id 
    from
        reviews r1_0 
    where
        r1_0.book_id=?
2025-08-28 16:36:20 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.created_at,
        c1_0.description,
        c1_0.name,
        c1_0.updated_at 
    from
        categories c1_0 
    where
        c1_0.id=?
2025-08-28 16:36:20 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    select
        b1_0.category_id,
        b1_0.id,
        b1_0.about,
        b1_0.audio_file_url,
        b1_0.author,
        b1_0.available_copies,
        b1_0.book_cover_url,
        b1_0.created_at,
        b1_0.format,
        b1_0.isbn,
        b1_0.name,
        b1_0.pdf_file_url,
        b1_0.publication_year,
        b1_0.short_details,
        b1_0.total_copies,
        b1_0.updated_at 
    from
        books b1_0 
    where
        b1_0.category_id=?
2025-08-28 16:36:20 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    select
        r1_0.book_id,
        r1_0.id,
        r1_0.comment,
        r1_0.created_at,
        r1_0.rating,
        r1_0.updated_at,
        r1_0.user_id 
    from
        reviews r1_0 
    where
        r1_0.book_id=?
2025-08-28 16:36:20 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    select
        r1_0.book_id,
        r1_0.id,
        r1_0.comment,
        r1_0.created_at,
        r1_0.rating,
        r1_0.updated_at,
        r1_0.user_id 
    from
        reviews r1_0 
    where
        r1_0.book_id=?
2025-08-28 16:36:20 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    select
        r1_0.book_id,
        r1_0.id,
        r1_0.comment,
        r1_0.created_at,
        r1_0.rating,
        r1_0.updated_at,
        r1_0.user_id 
    from
        reviews r1_0 
    where
        r1_0.book_id=?
2025-08-28 16:36:20 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    select
        r1_0.book_id,
        r1_0.id,
        r1_0.comment,
        r1_0.created_at,
        r1_0.rating,
        r1_0.updated_at,
        r1_0.user_id 
    from
        reviews r1_0 
    where
        r1_0.book_id=?
2025-08-28 16:36:20 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.address,
        u1_0.created_at,
        u1_0.date_of_birth,
        u1_0.email,
        u1_0.is_active,
        u1_0.name,
        u1_0.password_hash,
        u1_0.role,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.username=?
2025-08-28 16:36:20 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    select
        b1_0.id,
        b1_0.about,
        b1_0.audio_file_url,
        b1_0.author,
        b1_0.available_copies,
        b1_0.book_cover_url,
        b1_0.category_id,
        b1_0.created_at,
        b1_0.format,
        b1_0.isbn,
        b1_0.name,
        b1_0.pdf_file_url,
        b1_0.publication_year,
        b1_0.short_details,
        b1_0.total_copies,
        b1_0.updated_at 
    from
        books b1_0 
    offset
        ? rows 
    fetch
        first ? rows only
2025-08-28 16:36:20 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    select
        count(b1_0.id) 
    from
        books b1_0
2025-08-28 16:36:20 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.created_at,
        c1_0.description,
        c1_0.name,
        c1_0.updated_at 
    from
        categories c1_0 
    where
        c1_0.id=?
2025-08-28 16:36:20 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    select
        b1_0.category_id,
        b1_0.id,
        b1_0.about,
        b1_0.audio_file_url,
        b1_0.author,
        b1_0.available_copies,
        b1_0.book_cover_url,
        b1_0.created_at,
        b1_0.format,
        b1_0.isbn,
        b1_0.name,
        b1_0.pdf_file_url,
        b1_0.publication_year,
        b1_0.short_details,
        b1_0.total_copies,
        b1_0.updated_at 
    from
        books b1_0 
    where
        b1_0.category_id=?
2025-08-28 16:36:20 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    select
        r1_0.book_id,
        r1_0.id,
        r1_0.comment,
        r1_0.created_at,
        r1_0.rating,
        r1_0.updated_at,
        r1_0.user_id 
    from
        reviews r1_0 
    where
        r1_0.book_id=?
2025-08-28 16:36:20 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.created_at,
        c1_0.description,
        c1_0.name,
        c1_0.updated_at 
    from
        categories c1_0 
    where
        c1_0.id=?
2025-08-28 16:36:20 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    select
        b1_0.category_id,
        b1_0.id,
        b1_0.about,
        b1_0.audio_file_url,
        b1_0.author,
        b1_0.available_copies,
        b1_0.book_cover_url,
        b1_0.created_at,
        b1_0.format,
        b1_0.isbn,
        b1_0.name,
        b1_0.pdf_file_url,
        b1_0.publication_year,
        b1_0.short_details,
        b1_0.total_copies,
        b1_0.updated_at 
    from
        books b1_0 
    where
        b1_0.category_id=?
2025-08-28 16:36:20 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    select
        r1_0.book_id,
        r1_0.id,
        r1_0.comment,
        r1_0.created_at,
        r1_0.rating,
        r1_0.updated_at,
        r1_0.user_id 
    from
        reviews r1_0 
    where
        r1_0.book_id=?
2025-08-28 16:36:20 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.created_at,
        c1_0.description,
        c1_0.name,
        c1_0.updated_at 
    from
        categories c1_0 
    where
        c1_0.id=?
2025-08-28 16:36:20 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    select
        b1_0.category_id,
        b1_0.id,
        b1_0.about,
        b1_0.audio_file_url,
        b1_0.author,
        b1_0.available_copies,
        b1_0.book_cover_url,
        b1_0.created_at,
        b1_0.format,
        b1_0.isbn,
        b1_0.name,
        b1_0.pdf_file_url,
        b1_0.publication_year,
        b1_0.short_details,
        b1_0.total_copies,
        b1_0.updated_at 
    from
        books b1_0 
    where
        b1_0.category_id=?
2025-08-28 16:36:20 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    select
        r1_0.book_id,
        r1_0.id,
        r1_0.comment,
        r1_0.created_at,
        r1_0.rating,
        r1_0.updated_at,
        r1_0.user_id 
    from
        reviews r1_0 
    where
        r1_0.book_id=?
2025-08-28 16:36:20 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.created_at,
        c1_0.description,
        c1_0.name,
        c1_0.updated_at 
    from
        categories c1_0 
    where
        c1_0.id=?
2025-08-28 16:36:20 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    select
        b1_0.category_id,
        b1_0.id,
        b1_0.about,
        b1_0.audio_file_url,
        b1_0.author,
        b1_0.available_copies,
        b1_0.book_cover_url,
        b1_0.created_at,
        b1_0.format,
        b1_0.isbn,
        b1_0.name,
        b1_0.pdf_file_url,
        b1_0.publication_year,
        b1_0.short_details,
        b1_0.total_copies,
        b1_0.updated_at 
    from
        books b1_0 
    where
        b1_0.category_id=?
2025-08-28 16:36:20 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    select
        r1_0.book_id,
        r1_0.id,
        r1_0.comment,
        r1_0.created_at,
        r1_0.rating,
        r1_0.updated_at,
        r1_0.user_id 
    from
        reviews r1_0 
    where
        r1_0.book_id=?
2025-08-28 16:36:20 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.created_at,
        c1_0.description,
        c1_0.name,
        c1_0.updated_at 
    from
        categories c1_0 
    where
        c1_0.id=?
2025-08-28 16:36:20 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    select
        b1_0.category_id,
        b1_0.id,
        b1_0.about,
        b1_0.audio_file_url,
        b1_0.author,
        b1_0.available_copies,
        b1_0.book_cover_url,
        b1_0.created_at,
        b1_0.format,
        b1_0.isbn,
        b1_0.name,
        b1_0.pdf_file_url,
        b1_0.publication_year,
        b1_0.short_details,
        b1_0.total_copies,
        b1_0.updated_at 
    from
        books b1_0 
    where
        b1_0.category_id=?
2025-08-28 16:36:20 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    select
        r1_0.book_id,
        r1_0.id,
        r1_0.comment,
        r1_0.created_at,
        r1_0.rating,
        r1_0.updated_at,
        r1_0.user_id 
    from
        reviews r1_0 
    where
        r1_0.book_id=?
2025-08-28 16:36:20 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.created_at,
        c1_0.description,
        c1_0.name,
        c1_0.updated_at 
    from
        categories c1_0 
    where
        c1_0.id=?
2025-08-28 16:36:20 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    select
        b1_0.category_id,
        b1_0.id,
        b1_0.about,
        b1_0.audio_file_url,
        b1_0.author,
        b1_0.available_copies,
        b1_0.book_cover_url,
        b1_0.created_at,
        b1_0.format,
        b1_0.isbn,
        b1_0.name,
        b1_0.pdf_file_url,
        b1_0.publication_year,
        b1_0.short_details,
        b1_0.total_copies,
        b1_0.updated_at 
    from
        books b1_0 
    where
        b1_0.category_id=?
2025-08-28 16:36:20 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    select
        r1_0.book_id,
        r1_0.id,
        r1_0.comment,
        r1_0.created_at,
        r1_0.rating,
        r1_0.updated_at,
        r1_0.user_id 
    from
        reviews r1_0 
    where
        r1_0.book_id=?
2025-08-28 16:36:20 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.created_at,
        c1_0.description,
        c1_0.name,
        c1_0.updated_at 
    from
        categories c1_0 
    where
        c1_0.id=?
2025-08-28 16:36:20 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    select
        b1_0.category_id,
        b1_0.id,
        b1_0.about,
        b1_0.audio_file_url,
        b1_0.author,
        b1_0.available_copies,
        b1_0.book_cover_url,
        b1_0.created_at,
        b1_0.format,
        b1_0.isbn,
        b1_0.name,
        b1_0.pdf_file_url,
        b1_0.publication_year,
        b1_0.short_details,
        b1_0.total_copies,
        b1_0.updated_at 
    from
        books b1_0 
    where
        b1_0.category_id=?
2025-08-28 16:36:20 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    select
        r1_0.book_id,
        r1_0.id,
        r1_0.comment,
        r1_0.created_at,
        r1_0.rating,
        r1_0.updated_at,
        r1_0.user_id 
    from
        reviews r1_0 
    where
        r1_0.book_id=?
2025-08-28 16:36:20 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    select
        r1_0.book_id,
        r1_0.id,
        r1_0.comment,
        r1_0.created_at,
        r1_0.rating,
        r1_0.updated_at,
        r1_0.user_id 
    from
        reviews r1_0 
    where
        r1_0.book_id=?
2025-08-28 16:36:20 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    select
        r1_0.book_id,
        r1_0.id,
        r1_0.comment,
        r1_0.created_at,
        r1_0.rating,
        r1_0.updated_at,
        r1_0.user_id 
    from
        reviews r1_0 
    where
        r1_0.book_id=?
2025-08-28 16:36:20 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    select
        r1_0.book_id,
        r1_0.id,
        r1_0.comment,
        r1_0.created_at,
        r1_0.rating,
        r1_0.updated_at,
        r1_0.user_id 
    from
        reviews r1_0 
    where
        r1_0.book_id=?
2025-08-28 16:36:33 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.address,
        u1_0.created_at,
        u1_0.date_of_birth,
        u1_0.email,
        u1_0.is_active,
        u1_0.name,
        u1_0.password_hash,
        u1_0.role,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.username=?
2025-08-28 16:36:33 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    select
        b1_0.id,
        b1_0.about,
        b1_0.audio_file_url,
        b1_0.author,
        b1_0.available_copies,
        b1_0.book_cover_url,
        b1_0.category_id,
        b1_0.created_at,
        b1_0.format,
        b1_0.isbn,
        b1_0.name,
        b1_0.pdf_file_url,
        b1_0.publication_year,
        b1_0.short_details,
        b1_0.total_copies,
        b1_0.updated_at 
    from
        books b1_0 
    where
        upper(b1_0.name) like upper(?) escape '\' 
        or upper(b1_0.author) like upper(?) escape '\' 
        or upper(b1_0.isbn) like upper(?) escape '\' 
    fetch
        first ? rows only
2025-08-28 16:36:33 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.created_at,
        c1_0.description,
        c1_0.name,
        c1_0.updated_at 
    from
        categories c1_0 
    where
        c1_0.id=?
2025-08-28 16:36:33 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    select
        b1_0.category_id,
        b1_0.id,
        b1_0.about,
        b1_0.audio_file_url,
        b1_0.author,
        b1_0.available_copies,
        b1_0.book_cover_url,
        b1_0.created_at,
        b1_0.format,
        b1_0.isbn,
        b1_0.name,
        b1_0.pdf_file_url,
        b1_0.publication_year,
        b1_0.short_details,
        b1_0.total_copies,
        b1_0.updated_at 
    from
        books b1_0 
    where
        b1_0.category_id=?
2025-08-28 16:36:33 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    select
        r1_0.book_id,
        r1_0.id,
        r1_0.comment,
        r1_0.created_at,
        r1_0.rating,
        r1_0.updated_at,
        r1_0.user_id 
    from
        reviews r1_0 
    where
        r1_0.book_id=?
2025-08-28 16:36:33 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.created_at,
        c1_0.description,
        c1_0.name,
        c1_0.updated_at 
    from
        categories c1_0 
    where
        c1_0.id=?
2025-08-28 16:36:33 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    select
        b1_0.category_id,
        b1_0.id,
        b1_0.about,
        b1_0.audio_file_url,
        b1_0.author,
        b1_0.available_copies,
        b1_0.book_cover_url,
        b1_0.created_at,
        b1_0.format,
        b1_0.isbn,
        b1_0.name,
        b1_0.pdf_file_url,
        b1_0.publication_year,
        b1_0.short_details,
        b1_0.total_copies,
        b1_0.updated_at 
    from
        books b1_0 
    where
        b1_0.category_id=?
2025-08-28 16:36:33 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    select
        r1_0.book_id,
        r1_0.id,
        r1_0.comment,
        r1_0.created_at,
        r1_0.rating,
        r1_0.updated_at,
        r1_0.user_id 
    from
        reviews r1_0 
    where
        r1_0.book_id=?
2025-08-28 16:36:33 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.created_at,
        c1_0.description,
        c1_0.name,
        c1_0.updated_at 
    from
        categories c1_0 
    where
        c1_0.id=?
2025-08-28 16:36:33 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    select
        b1_0.category_id,
        b1_0.id,
        b1_0.about,
        b1_0.audio_file_url,
        b1_0.author,
        b1_0.available_copies,
        b1_0.book_cover_url,
        b1_0.created_at,
        b1_0.format,
        b1_0.isbn,
        b1_0.name,
        b1_0.pdf_file_url,
        b1_0.publication_year,
        b1_0.short_details,
        b1_0.total_copies,
        b1_0.updated_at 
    from
        books b1_0 
    where
        b1_0.category_id=?
2025-08-28 16:36:33 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    select
        r1_0.book_id,
        r1_0.id,
        r1_0.comment,
        r1_0.created_at,
        r1_0.rating,
        r1_0.updated_at,
        r1_0.user_id 
    from
        reviews r1_0 
    where
        r1_0.book_id=?
2025-08-28 16:36:33 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.created_at,
        c1_0.description,
        c1_0.name,
        c1_0.updated_at 
    from
        categories c1_0 
    where
        c1_0.id=?
2025-08-28 16:36:33 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    select
        b1_0.category_id,
        b1_0.id,
        b1_0.about,
        b1_0.audio_file_url,
        b1_0.author,
        b1_0.available_copies,
        b1_0.book_cover_url,
        b1_0.created_at,
        b1_0.format,
        b1_0.isbn,
        b1_0.name,
        b1_0.pdf_file_url,
        b1_0.publication_year,
        b1_0.short_details,
        b1_0.total_copies,
        b1_0.updated_at 
    from
        books b1_0 
    where
        b1_0.category_id=?
2025-08-28 16:36:33 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    select
        r1_0.book_id,
        r1_0.id,
        r1_0.comment,
        r1_0.created_at,
        r1_0.rating,
        r1_0.updated_at,
        r1_0.user_id 
    from
        reviews r1_0 
    where
        r1_0.book_id=?
2025-08-28 16:36:33 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.created_at,
        c1_0.description,
        c1_0.name,
        c1_0.updated_at 
    from
        categories c1_0 
    where
        c1_0.id=?
2025-08-28 16:36:33 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    select
        b1_0.category_id,
        b1_0.id,
        b1_0.about,
        b1_0.audio_file_url,
        b1_0.author,
        b1_0.available_copies,
        b1_0.book_cover_url,
        b1_0.created_at,
        b1_0.format,
        b1_0.isbn,
        b1_0.name,
        b1_0.pdf_file_url,
        b1_0.publication_year,
        b1_0.short_details,
        b1_0.total_copies,
        b1_0.updated_at 
    from
        books b1_0 
    where
        b1_0.category_id=?
2025-08-28 16:36:33 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    select
        r1_0.book_id,
        r1_0.id,
        r1_0.comment,
        r1_0.created_at,
        r1_0.rating,
        r1_0.updated_at,
        r1_0.user_id 
    from
        reviews r1_0 
    where
        r1_0.book_id=?
2025-08-28 16:36:33 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    select
        r1_0.book_id,
        r1_0.id,
        r1_0.comment,
        r1_0.created_at,
        r1_0.rating,
        r1_0.updated_at,
        r1_0.user_id 
    from
        reviews r1_0 
    where
        r1_0.book_id=?
2025-08-28 16:36:33 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    select
        r1_0.book_id,
        r1_0.id,
        r1_0.comment,
        r1_0.created_at,
        r1_0.rating,
        r1_0.updated_at,
        r1_0.user_id 
    from
        reviews r1_0 
    where
        r1_0.book_id=?
2025-08-28 16:36:33 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.created_at,
        c1_0.description,
        c1_0.name,
        c1_0.updated_at 
    from
        categories c1_0 
    where
        c1_0.id=?
2025-08-28 16:36:33 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    select
        b1_0.category_id,
        b1_0.id,
        b1_0.about,
        b1_0.audio_file_url,
        b1_0.author,
        b1_0.available_copies,
        b1_0.book_cover_url,
        b1_0.created_at,
        b1_0.format,
        b1_0.isbn,
        b1_0.name,
        b1_0.pdf_file_url,
        b1_0.publication_year,
        b1_0.short_details,
        b1_0.total_copies,
        b1_0.updated_at 
    from
        books b1_0 
    where
        b1_0.category_id=?
2025-08-28 16:36:33 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    select
        r1_0.book_id,
        r1_0.id,
        r1_0.comment,
        r1_0.created_at,
        r1_0.rating,
        r1_0.updated_at,
        r1_0.user_id 
    from
        reviews r1_0 
    where
        r1_0.book_id=?
2025-08-28 16:36:33 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.address,
        u1_0.created_at,
        u1_0.date_of_birth,
        u1_0.email,
        u1_0.is_active,
        u1_0.name,
        u1_0.password_hash,
        u1_0.role,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.username=?
2025-08-28 16:36:33 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        b1_0.id,
        b1_0.about,
        b1_0.audio_file_url,
        b1_0.author,
        b1_0.available_copies,
        b1_0.book_cover_url,
        b1_0.category_id,
        b1_0.created_at,
        b1_0.format,
        b1_0.isbn,
        b1_0.name,
        b1_0.pdf_file_url,
        b1_0.publication_year,
        b1_0.short_details,
        b1_0.total_copies,
        b1_0.updated_at 
    from
        books b1_0 
    where
        upper(b1_0.name) like upper(?) escape '\' 
        or upper(b1_0.author) like upper(?) escape '\' 
        or upper(b1_0.isbn) like upper(?) escape '\' 
    fetch
        first ? rows only
2025-08-28 16:36:33 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.created_at,
        c1_0.description,
        c1_0.name,
        c1_0.updated_at 
    from
        categories c1_0 
    where
        c1_0.id=?
2025-08-28 16:36:33 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        b1_0.category_id,
        b1_0.id,
        b1_0.about,
        b1_0.audio_file_url,
        b1_0.author,
        b1_0.available_copies,
        b1_0.book_cover_url,
        b1_0.created_at,
        b1_0.format,
        b1_0.isbn,
        b1_0.name,
        b1_0.pdf_file_url,
        b1_0.publication_year,
        b1_0.short_details,
        b1_0.total_copies,
        b1_0.updated_at 
    from
        books b1_0 
    where
        b1_0.category_id=?
2025-08-28 16:36:33 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        r1_0.book_id,
        r1_0.id,
        r1_0.comment,
        r1_0.created_at,
        r1_0.rating,
        r1_0.updated_at,
        r1_0.user_id 
    from
        reviews r1_0 
    where
        r1_0.book_id=?
2025-08-28 16:36:33 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.created_at,
        c1_0.description,
        c1_0.name,
        c1_0.updated_at 
    from
        categories c1_0 
    where
        c1_0.id=?
2025-08-28 16:36:33 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        b1_0.category_id,
        b1_0.id,
        b1_0.about,
        b1_0.audio_file_url,
        b1_0.author,
        b1_0.available_copies,
        b1_0.book_cover_url,
        b1_0.created_at,
        b1_0.format,
        b1_0.isbn,
        b1_0.name,
        b1_0.pdf_file_url,
        b1_0.publication_year,
        b1_0.short_details,
        b1_0.total_copies,
        b1_0.updated_at 
    from
        books b1_0 
    where
        b1_0.category_id=?
2025-08-28 16:36:33 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        r1_0.book_id,
        r1_0.id,
        r1_0.comment,
        r1_0.created_at,
        r1_0.rating,
        r1_0.updated_at,
        r1_0.user_id 
    from
        reviews r1_0 
    where
        r1_0.book_id=?
2025-08-28 16:36:33 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.address,
        u1_0.created_at,
        u1_0.date_of_birth,
        u1_0.email,
        u1_0.is_active,
        u1_0.name,
        u1_0.password_hash,
        u1_0.role,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.username=?
2025-08-28 16:36:33 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    select
        b1_0.id,
        b1_0.about,
        b1_0.audio_file_url,
        b1_0.author,
        b1_0.available_copies,
        b1_0.book_cover_url,
        b1_0.category_id,
        b1_0.created_at,
        b1_0.format,
        b1_0.isbn,
        b1_0.name,
        b1_0.pdf_file_url,
        b1_0.publication_year,
        b1_0.short_details,
        b1_0.total_copies,
        b1_0.updated_at 
    from
        books b1_0 
    where
        upper(b1_0.name) like upper(?) escape '\' 
        or upper(b1_0.author) like upper(?) escape '\' 
        or upper(b1_0.isbn) like upper(?) escape '\' 
    fetch
        first ? rows only
2025-08-28 16:36:33 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.created_at,
        c1_0.description,
        c1_0.name,
        c1_0.updated_at 
    from
        categories c1_0 
    where
        c1_0.id=?
2025-08-28 16:36:33 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    select
        b1_0.category_id,
        b1_0.id,
        b1_0.about,
        b1_0.audio_file_url,
        b1_0.author,
        b1_0.available_copies,
        b1_0.book_cover_url,
        b1_0.created_at,
        b1_0.format,
        b1_0.isbn,
        b1_0.name,
        b1_0.pdf_file_url,
        b1_0.publication_year,
        b1_0.short_details,
        b1_0.total_copies,
        b1_0.updated_at 
    from
        books b1_0 
    where
        b1_0.category_id=?
2025-08-28 16:36:33 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    select
        r1_0.book_id,
        r1_0.id,
        r1_0.comment,
        r1_0.created_at,
        r1_0.rating,
        r1_0.updated_at,
        r1_0.user_id 
    from
        reviews r1_0 
    where
        r1_0.book_id=?
2025-08-28 16:36:33 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.created_at,
        c1_0.description,
        c1_0.name,
        c1_0.updated_at 
    from
        categories c1_0 
    where
        c1_0.id=?
2025-08-28 16:36:33 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    select
        b1_0.category_id,
        b1_0.id,
        b1_0.about,
        b1_0.audio_file_url,
        b1_0.author,
        b1_0.available_copies,
        b1_0.book_cover_url,
        b1_0.created_at,
        b1_0.format,
        b1_0.isbn,
        b1_0.name,
        b1_0.pdf_file_url,
        b1_0.publication_year,
        b1_0.short_details,
        b1_0.total_copies,
        b1_0.updated_at 
    from
        books b1_0 
    where
        b1_0.category_id=?
2025-08-28 16:36:33 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    select
        r1_0.book_id,
        r1_0.id,
        r1_0.comment,
        r1_0.created_at,
        r1_0.rating,
        r1_0.updated_at,
        r1_0.user_id 
    from
        reviews r1_0 
    where
        r1_0.book_id=?
2025-08-28 16:36:34 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.address,
        u1_0.created_at,
        u1_0.date_of_birth,
        u1_0.email,
        u1_0.is_active,
        u1_0.name,
        u1_0.password_hash,
        u1_0.role,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.username=?
2025-08-28 16:36:34 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    select
        b1_0.id,
        b1_0.about,
        b1_0.audio_file_url,
        b1_0.author,
        b1_0.available_copies,
        b1_0.book_cover_url,
        b1_0.category_id,
        b1_0.created_at,
        b1_0.format,
        b1_0.isbn,
        b1_0.name,
        b1_0.pdf_file_url,
        b1_0.publication_year,
        b1_0.short_details,
        b1_0.total_copies,
        b1_0.updated_at 
    from
        books b1_0 
    where
        upper(b1_0.name) like upper(?) escape '\' 
        or upper(b1_0.author) like upper(?) escape '\' 
        or upper(b1_0.isbn) like upper(?) escape '\' 
    fetch
        first ? rows only
2025-08-28 16:36:34 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.created_at,
        c1_0.description,
        c1_0.name,
        c1_0.updated_at 
    from
        categories c1_0 
    where
        c1_0.id=?
2025-08-28 16:36:34 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    select
        b1_0.category_id,
        b1_0.id,
        b1_0.about,
        b1_0.audio_file_url,
        b1_0.author,
        b1_0.available_copies,
        b1_0.book_cover_url,
        b1_0.created_at,
        b1_0.format,
        b1_0.isbn,
        b1_0.name,
        b1_0.pdf_file_url,
        b1_0.publication_year,
        b1_0.short_details,
        b1_0.total_copies,
        b1_0.updated_at 
    from
        books b1_0 
    where
        b1_0.category_id=?
2025-08-28 16:36:34 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    select
        r1_0.book_id,
        r1_0.id,
        r1_0.comment,
        r1_0.created_at,
        r1_0.rating,
        r1_0.updated_at,
        r1_0.user_id 
    from
        reviews r1_0 
    where
        r1_0.book_id=?
2025-08-28 16:36:34 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.created_at,
        c1_0.description,
        c1_0.name,
        c1_0.updated_at 
    from
        categories c1_0 
    where
        c1_0.id=?
2025-08-28 16:36:34 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    select
        b1_0.category_id,
        b1_0.id,
        b1_0.about,
        b1_0.audio_file_url,
        b1_0.author,
        b1_0.available_copies,
        b1_0.book_cover_url,
        b1_0.created_at,
        b1_0.format,
        b1_0.isbn,
        b1_0.name,
        b1_0.pdf_file_url,
        b1_0.publication_year,
        b1_0.short_details,
        b1_0.total_copies,
        b1_0.updated_at 
    from
        books b1_0 
    where
        b1_0.category_id=?
2025-08-28 16:36:34 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    select
        r1_0.book_id,
        r1_0.id,
        r1_0.comment,
        r1_0.created_at,
        r1_0.rating,
        r1_0.updated_at,
        r1_0.user_id 
    from
        reviews r1_0 
    where
        r1_0.book_id=?
2025-08-28 16:36:34 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.address,
        u1_0.created_at,
        u1_0.date_of_birth,
        u1_0.email,
        u1_0.is_active,
        u1_0.name,
        u1_0.password_hash,
        u1_0.role,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.username=?
2025-08-28 16:36:34 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    select
        b1_0.id,
        b1_0.about,
        b1_0.audio_file_url,
        b1_0.author,
        b1_0.available_copies,
        b1_0.book_cover_url,
        b1_0.category_id,
        b1_0.created_at,
        b1_0.format,
        b1_0.isbn,
        b1_0.name,
        b1_0.pdf_file_url,
        b1_0.publication_year,
        b1_0.short_details,
        b1_0.total_copies,
        b1_0.updated_at 
    from
        books b1_0 
    where
        upper(b1_0.name) like upper(?) escape '\' 
        or upper(b1_0.author) like upper(?) escape '\' 
        or upper(b1_0.isbn) like upper(?) escape '\' 
    fetch
        first ? rows only
2025-08-28 16:36:34 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.created_at,
        c1_0.description,
        c1_0.name,
        c1_0.updated_at 
    from
        categories c1_0 
    where
        c1_0.id=?
2025-08-28 16:36:34 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    select
        b1_0.category_id,
        b1_0.id,
        b1_0.about,
        b1_0.audio_file_url,
        b1_0.author,
        b1_0.available_copies,
        b1_0.book_cover_url,
        b1_0.created_at,
        b1_0.format,
        b1_0.isbn,
        b1_0.name,
        b1_0.pdf_file_url,
        b1_0.publication_year,
        b1_0.short_details,
        b1_0.total_copies,
        b1_0.updated_at 
    from
        books b1_0 
    where
        b1_0.category_id=?
2025-08-28 16:36:34 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    select
        r1_0.book_id,
        r1_0.id,
        r1_0.comment,
        r1_0.created_at,
        r1_0.rating,
        r1_0.updated_at,
        r1_0.user_id 
    from
        reviews r1_0 
    where
        r1_0.book_id=?
2025-08-28 16:36:34 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.created_at,
        c1_0.description,
        c1_0.name,
        c1_0.updated_at 
    from
        categories c1_0 
    where
        c1_0.id=?
2025-08-28 16:36:34 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    select
        b1_0.category_id,
        b1_0.id,
        b1_0.about,
        b1_0.audio_file_url,
        b1_0.author,
        b1_0.available_copies,
        b1_0.book_cover_url,
        b1_0.created_at,
        b1_0.format,
        b1_0.isbn,
        b1_0.name,
        b1_0.pdf_file_url,
        b1_0.publication_year,
        b1_0.short_details,
        b1_0.total_copies,
        b1_0.updated_at 
    from
        books b1_0 
    where
        b1_0.category_id=?
2025-08-28 16:36:34 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    select
        r1_0.book_id,
        r1_0.id,
        r1_0.comment,
        r1_0.created_at,
        r1_0.rating,
        r1_0.updated_at,
        r1_0.user_id 
    from
        reviews r1_0 
    where
        r1_0.book_id=?
2025-08-28 16:36:49 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.address,
        u1_0.created_at,
        u1_0.date_of_birth,
        u1_0.email,
        u1_0.is_active,
        u1_0.name,
        u1_0.password_hash,
        u1_0.role,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.username=?
2025-08-28 16:36:49 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    select
        b1_0.id,
        b1_0.about,
        b1_0.audio_file_url,
        b1_0.author,
        b1_0.available_copies,
        b1_0.book_cover_url,
        b1_0.category_id,
        b1_0.created_at,
        b1_0.format,
        b1_0.isbn,
        b1_0.name,
        b1_0.pdf_file_url,
        b1_0.publication_year,
        b1_0.short_details,
        b1_0.total_copies,
        b1_0.updated_at 
    from
        books b1_0 
    where
        upper(b1_0.name) like upper(?) escape '\' 
        or upper(b1_0.author) like upper(?) escape '\' 
        or upper(b1_0.isbn) like upper(?) escape '\' 
    fetch
        first ? rows only
2025-08-28 16:36:49 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.created_at,
        c1_0.description,
        c1_0.name,
        c1_0.updated_at 
    from
        categories c1_0 
    where
        c1_0.id=?
2025-08-28 16:36:49 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    select
        b1_0.category_id,
        b1_0.id,
        b1_0.about,
        b1_0.audio_file_url,
        b1_0.author,
        b1_0.available_copies,
        b1_0.book_cover_url,
        b1_0.created_at,
        b1_0.format,
        b1_0.isbn,
        b1_0.name,
        b1_0.pdf_file_url,
        b1_0.publication_year,
        b1_0.short_details,
        b1_0.total_copies,
        b1_0.updated_at 
    from
        books b1_0 
    where
        b1_0.category_id=?
2025-08-28 16:36:49 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    select
        r1_0.book_id,
        r1_0.id,
        r1_0.comment,
        r1_0.created_at,
        r1_0.rating,
        r1_0.updated_at,
        r1_0.user_id 
    from
        reviews r1_0 
    where
        r1_0.book_id=?
2025-08-28 16:36:49 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.created_at,
        c1_0.description,
        c1_0.name,
        c1_0.updated_at 
    from
        categories c1_0 
    where
        c1_0.id=?
2025-08-28 16:36:49 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    select
        b1_0.category_id,
        b1_0.id,
        b1_0.about,
        b1_0.audio_file_url,
        b1_0.author,
        b1_0.available_copies,
        b1_0.book_cover_url,
        b1_0.created_at,
        b1_0.format,
        b1_0.isbn,
        b1_0.name,
        b1_0.pdf_file_url,
        b1_0.publication_year,
        b1_0.short_details,
        b1_0.total_copies,
        b1_0.updated_at 
    from
        books b1_0 
    where
        b1_0.category_id=?
2025-08-28 16:36:49 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    select
        r1_0.book_id,
        r1_0.id,
        r1_0.comment,
        r1_0.created_at,
        r1_0.rating,
        r1_0.updated_at,
        r1_0.user_id 
    from
        reviews r1_0 
    where
        r1_0.book_id=?
2025-08-28 16:36:50 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.address,
        u1_0.created_at,
        u1_0.date_of_birth,
        u1_0.email,
        u1_0.is_active,
        u1_0.name,
        u1_0.password_hash,
        u1_0.role,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.username=?
2025-08-28 16:36:50 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    select
        b1_0.id,
        b1_0.about,
        b1_0.audio_file_url,
        b1_0.author,
        b1_0.available_copies,
        b1_0.book_cover_url,
        b1_0.category_id,
        b1_0.created_at,
        b1_0.format,
        b1_0.isbn,
        b1_0.name,
        b1_0.pdf_file_url,
        b1_0.publication_year,
        b1_0.short_details,
        b1_0.total_copies,
        b1_0.updated_at 
    from
        books b1_0 
    where
        upper(b1_0.name) like upper(?) escape '\' 
        or upper(b1_0.author) like upper(?) escape '\' 
        or upper(b1_0.isbn) like upper(?) escape '\' 
    fetch
        first ? rows only
2025-08-28 16:36:50 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.created_at,
        c1_0.description,
        c1_0.name,
        c1_0.updated_at 
    from
        categories c1_0 
    where
        c1_0.id=?
2025-08-28 16:36:50 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    select
        b1_0.category_id,
        b1_0.id,
        b1_0.about,
        b1_0.audio_file_url,
        b1_0.author,
        b1_0.available_copies,
        b1_0.book_cover_url,
        b1_0.created_at,
        b1_0.format,
        b1_0.isbn,
        b1_0.name,
        b1_0.pdf_file_url,
        b1_0.publication_year,
        b1_0.short_details,
        b1_0.total_copies,
        b1_0.updated_at 
    from
        books b1_0 
    where
        b1_0.category_id=?
2025-08-28 16:36:50 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    select
        r1_0.book_id,
        r1_0.id,
        r1_0.comment,
        r1_0.created_at,
        r1_0.rating,
        r1_0.updated_at,
        r1_0.user_id 
    from
        reviews r1_0 
    where
        r1_0.book_id=?
2025-08-28 16:36:50 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.created_at,
        c1_0.description,
        c1_0.name,
        c1_0.updated_at 
    from
        categories c1_0 
    where
        c1_0.id=?
2025-08-28 16:36:50 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    select
        b1_0.category_id,
        b1_0.id,
        b1_0.about,
        b1_0.audio_file_url,
        b1_0.author,
        b1_0.available_copies,
        b1_0.book_cover_url,
        b1_0.created_at,
        b1_0.format,
        b1_0.isbn,
        b1_0.name,
        b1_0.pdf_file_url,
        b1_0.publication_year,
        b1_0.short_details,
        b1_0.total_copies,
        b1_0.updated_at 
    from
        books b1_0 
    where
        b1_0.category_id=?
2025-08-28 16:36:50 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    select
        r1_0.book_id,
        r1_0.id,
        r1_0.comment,
        r1_0.created_at,
        r1_0.rating,
        r1_0.updated_at,
        r1_0.user_id 
    from
        reviews r1_0 
    where
        r1_0.book_id=?
2025-08-28 16:36:50 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.address,
        u1_0.created_at,
        u1_0.date_of_birth,
        u1_0.email,
        u1_0.is_active,
        u1_0.name,
        u1_0.password_hash,
        u1_0.role,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.username=?
2025-08-28 16:36:50 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL - 
    select
        b1_0.id,
        b1_0.about,
        b1_0.audio_file_url,
        b1_0.author,
        b1_0.available_copies,
        b1_0.book_cover_url,
        b1_0.category_id,
        b1_0.created_at,
        b1_0.format,
        b1_0.isbn,
        b1_0.name,
        b1_0.pdf_file_url,
        b1_0.publication_year,
        b1_0.short_details,
        b1_0.total_copies,
        b1_0.updated_at 
    from
        books b1_0 
    where
        upper(b1_0.name) like upper(?) escape '\' 
        or upper(b1_0.author) like upper(?) escape '\' 
        or upper(b1_0.isbn) like upper(?) escape '\' 
    fetch
        first ? rows only
2025-08-28 16:36:50 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.created_at,
        c1_0.description,
        c1_0.name,
        c1_0.updated_at 
    from
        categories c1_0 
    where
        c1_0.id=?
2025-08-28 16:36:50 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL - 
    select
        b1_0.category_id,
        b1_0.id,
        b1_0.about,
        b1_0.audio_file_url,
        b1_0.author,
        b1_0.available_copies,
        b1_0.book_cover_url,
        b1_0.created_at,
        b1_0.format,
        b1_0.isbn,
        b1_0.name,
        b1_0.pdf_file_url,
        b1_0.publication_year,
        b1_0.short_details,
        b1_0.total_copies,
        b1_0.updated_at 
    from
        books b1_0 
    where
        b1_0.category_id=?
2025-08-28 16:36:50 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL - 
    select
        r1_0.book_id,
        r1_0.id,
        r1_0.comment,
        r1_0.created_at,
        r1_0.rating,
        r1_0.updated_at,
        r1_0.user_id 
    from
        reviews r1_0 
    where
        r1_0.book_id=?
2025-08-28 16:36:50 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.created_at,
        c1_0.description,
        c1_0.name,
        c1_0.updated_at 
    from
        categories c1_0 
    where
        c1_0.id=?
2025-08-28 16:36:50 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL - 
    select
        b1_0.category_id,
        b1_0.id,
        b1_0.about,
        b1_0.audio_file_url,
        b1_0.author,
        b1_0.available_copies,
        b1_0.book_cover_url,
        b1_0.created_at,
        b1_0.format,
        b1_0.isbn,
        b1_0.name,
        b1_0.pdf_file_url,
        b1_0.publication_year,
        b1_0.short_details,
        b1_0.total_copies,
        b1_0.updated_at 
    from
        books b1_0 
    where
        b1_0.category_id=?
2025-08-28 16:36:50 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL - 
    select
        r1_0.book_id,
        r1_0.id,
        r1_0.comment,
        r1_0.created_at,
        r1_0.rating,
        r1_0.updated_at,
        r1_0.user_id 
    from
        reviews r1_0 
    where
        r1_0.book_id=?
2025-08-28 16:36:50 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.address,
        u1_0.created_at,
        u1_0.date_of_birth,
        u1_0.email,
        u1_0.is_active,
        u1_0.name,
        u1_0.password_hash,
        u1_0.role,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.username=?
2025-08-28 16:36:50 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        b1_0.id,
        b1_0.about,
        b1_0.audio_file_url,
        b1_0.author,
        b1_0.available_copies,
        b1_0.book_cover_url,
        b1_0.category_id,
        b1_0.created_at,
        b1_0.format,
        b1_0.isbn,
        b1_0.name,
        b1_0.pdf_file_url,
        b1_0.publication_year,
        b1_0.short_details,
        b1_0.total_copies,
        b1_0.updated_at 
    from
        books b1_0 
    where
        upper(b1_0.name) like upper(?) escape '\' 
        or upper(b1_0.author) like upper(?) escape '\' 
        or upper(b1_0.isbn) like upper(?) escape '\' 
    fetch
        first ? rows only
2025-08-28 16:36:50 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.created_at,
        c1_0.description,
        c1_0.name,
        c1_0.updated_at 
    from
        categories c1_0 
    where
        c1_0.id=?
2025-08-28 16:36:50 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        b1_0.category_id,
        b1_0.id,
        b1_0.about,
        b1_0.audio_file_url,
        b1_0.author,
        b1_0.available_copies,
        b1_0.book_cover_url,
        b1_0.created_at,
        b1_0.format,
        b1_0.isbn,
        b1_0.name,
        b1_0.pdf_file_url,
        b1_0.publication_year,
        b1_0.short_details,
        b1_0.total_copies,
        b1_0.updated_at 
    from
        books b1_0 
    where
        b1_0.category_id=?
2025-08-28 16:36:50 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        r1_0.book_id,
        r1_0.id,
        r1_0.comment,
        r1_0.created_at,
        r1_0.rating,
        r1_0.updated_at,
        r1_0.user_id 
    from
        reviews r1_0 
    where
        r1_0.book_id=?
2025-08-28 16:36:50 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.created_at,
        c1_0.description,
        c1_0.name,
        c1_0.updated_at 
    from
        categories c1_0 
    where
        c1_0.id=?
2025-08-28 16:36:50 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.address,
        u1_0.created_at,
        u1_0.date_of_birth,
        u1_0.email,
        u1_0.is_active,
        u1_0.name,
        u1_0.password_hash,
        u1_0.role,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.username=?
2025-08-28 16:36:50 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        b1_0.category_id,
        b1_0.id,
        b1_0.about,
        b1_0.audio_file_url,
        b1_0.author,
        b1_0.available_copies,
        b1_0.book_cover_url,
        b1_0.created_at,
        b1_0.format,
        b1_0.isbn,
        b1_0.name,
        b1_0.pdf_file_url,
        b1_0.publication_year,
        b1_0.short_details,
        b1_0.total_copies,
        b1_0.updated_at 
    from
        books b1_0 
    where
        b1_0.category_id=?
2025-08-28 16:36:50 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        r1_0.book_id,
        r1_0.id,
        r1_0.comment,
        r1_0.created_at,
        r1_0.rating,
        r1_0.updated_at,
        r1_0.user_id 
    from
        reviews r1_0 
    where
        r1_0.book_id=?
2025-08-28 16:36:50 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.created_at,
        c1_0.description,
        c1_0.name,
        c1_0.updated_at 
    from
        categories c1_0 
    where
        c1_0.id=?
2025-08-28 16:36:50 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        b1_0.category_id,
        b1_0.id,
        b1_0.about,
        b1_0.audio_file_url,
        b1_0.author,
        b1_0.available_copies,
        b1_0.book_cover_url,
        b1_0.created_at,
        b1_0.format,
        b1_0.isbn,
        b1_0.name,
        b1_0.pdf_file_url,
        b1_0.publication_year,
        b1_0.short_details,
        b1_0.total_copies,
        b1_0.updated_at 
    from
        books b1_0 
    where
        b1_0.category_id=?
2025-08-28 16:36:50 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        r1_0.book_id,
        r1_0.id,
        r1_0.comment,
        r1_0.created_at,
        r1_0.rating,
        r1_0.updated_at,
        r1_0.user_id 
    from
        reviews r1_0 
    where
        r1_0.book_id=?
2025-08-28 16:36:50 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.created_at,
        c1_0.description,
        c1_0.name,
        c1_0.updated_at 
    from
        categories c1_0 
    where
        c1_0.id=?
2025-08-28 16:36:50 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        b1_0.category_id,
        b1_0.id,
        b1_0.about,
        b1_0.audio_file_url,
        b1_0.author,
        b1_0.available_copies,
        b1_0.book_cover_url,
        b1_0.created_at,
        b1_0.format,
        b1_0.isbn,
        b1_0.name,
        b1_0.pdf_file_url,
        b1_0.publication_year,
        b1_0.short_details,
        b1_0.total_copies,
        b1_0.updated_at 
    from
        books b1_0 
    where
        b1_0.category_id=?
2025-08-28 16:36:50 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        r1_0.book_id,
        r1_0.id,
        r1_0.comment,
        r1_0.created_at,
        r1_0.rating,
        r1_0.updated_at,
        r1_0.user_id 
    from
        reviews r1_0 
    where
        r1_0.book_id=?
2025-08-28 16:36:50 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.created_at,
        c1_0.description,
        c1_0.name,
        c1_0.updated_at 
    from
        categories c1_0 
    where
        c1_0.id=?
2025-08-28 16:36:50 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        b1_0.category_id,
        b1_0.id,
        b1_0.about,
        b1_0.audio_file_url,
        b1_0.author,
        b1_0.available_copies,
        b1_0.book_cover_url,
        b1_0.created_at,
        b1_0.format,
        b1_0.isbn,
        b1_0.name,
        b1_0.pdf_file_url,
        b1_0.publication_year,
        b1_0.short_details,
        b1_0.total_copies,
        b1_0.updated_at 
    from
        books b1_0 
    where
        b1_0.category_id=?
2025-08-28 16:36:50 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        r1_0.book_id,
        r1_0.id,
        r1_0.comment,
        r1_0.created_at,
        r1_0.rating,
        r1_0.updated_at,
        r1_0.user_id 
    from
        reviews r1_0 
    where
        r1_0.book_id=?
2025-08-28 16:36:50 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        r1_0.book_id,
        r1_0.id,
        r1_0.comment,
        r1_0.created_at,
        r1_0.rating,
        r1_0.updated_at,
        r1_0.user_id 
    from
        reviews r1_0 
    where
        r1_0.book_id=?
2025-08-28 16:36:50 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    select
        b1_0.id,
        b1_0.about,
        b1_0.audio_file_url,
        b1_0.author,
        b1_0.available_copies,
        b1_0.book_cover_url,
        b1_0.category_id,
        b1_0.created_at,
        b1_0.format,
        b1_0.isbn,
        b1_0.name,
        b1_0.pdf_file_url,
        b1_0.publication_year,
        b1_0.short_details,
        b1_0.total_copies,
        b1_0.updated_at 
    from
        books b1_0 
    offset
        ? rows 
    fetch
        first ? rows only
2025-08-28 16:36:50 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        r1_0.book_id,
        r1_0.id,
        r1_0.comment,
        r1_0.created_at,
        r1_0.rating,
        r1_0.updated_at,
        r1_0.user_id 
    from
        reviews r1_0 
    where
        r1_0.book_id=?
2025-08-28 16:36:50 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.created_at,
        c1_0.description,
        c1_0.name,
        c1_0.updated_at 
    from
        categories c1_0 
    where
        c1_0.id=?
2025-08-28 16:36:50 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    select
        count(b1_0.id) 
    from
        books b1_0
2025-08-28 16:36:50 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        b1_0.category_id,
        b1_0.id,
        b1_0.about,
        b1_0.audio_file_url,
        b1_0.author,
        b1_0.available_copies,
        b1_0.book_cover_url,
        b1_0.created_at,
        b1_0.format,
        b1_0.isbn,
        b1_0.name,
        b1_0.pdf_file_url,
        b1_0.publication_year,
        b1_0.short_details,
        b1_0.total_copies,
        b1_0.updated_at 
    from
        books b1_0 
    where
        b1_0.category_id=?
2025-08-28 16:36:50 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.created_at,
        c1_0.description,
        c1_0.name,
        c1_0.updated_at 
    from
        categories c1_0 
    where
        c1_0.id=?
2025-08-28 16:36:50 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    select
        b1_0.category_id,
        b1_0.id,
        b1_0.about,
        b1_0.audio_file_url,
        b1_0.author,
        b1_0.available_copies,
        b1_0.book_cover_url,
        b1_0.created_at,
        b1_0.format,
        b1_0.isbn,
        b1_0.name,
        b1_0.pdf_file_url,
        b1_0.publication_year,
        b1_0.short_details,
        b1_0.total_copies,
        b1_0.updated_at 
    from
        books b1_0 
    where
        b1_0.category_id=?
2025-08-28 16:36:50 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        r1_0.book_id,
        r1_0.id,
        r1_0.comment,
        r1_0.created_at,
        r1_0.rating,
        r1_0.updated_at,
        r1_0.user_id 
    from
        reviews r1_0 
    where
        r1_0.book_id=?
2025-08-28 16:36:50 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    select
        r1_0.book_id,
        r1_0.id,
        r1_0.comment,
        r1_0.created_at,
        r1_0.rating,
        r1_0.updated_at,
        r1_0.user_id 
    from
        reviews r1_0 
    where
        r1_0.book_id=?
2025-08-28 16:36:50 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.created_at,
        c1_0.description,
        c1_0.name,
        c1_0.updated_at 
    from
        categories c1_0 
    where
        c1_0.id=?
2025-08-28 16:36:50 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    select
        b1_0.category_id,
        b1_0.id,
        b1_0.about,
        b1_0.audio_file_url,
        b1_0.author,
        b1_0.available_copies,
        b1_0.book_cover_url,
        b1_0.created_at,
        b1_0.format,
        b1_0.isbn,
        b1_0.name,
        b1_0.pdf_file_url,
        b1_0.publication_year,
        b1_0.short_details,
        b1_0.total_copies,
        b1_0.updated_at 
    from
        books b1_0 
    where
        b1_0.category_id=?
2025-08-28 16:36:50 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    select
        r1_0.book_id,
        r1_0.id,
        r1_0.comment,
        r1_0.created_at,
        r1_0.rating,
        r1_0.updated_at,
        r1_0.user_id 
    from
        reviews r1_0 
    where
        r1_0.book_id=?
2025-08-28 16:36:50 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.created_at,
        c1_0.description,
        c1_0.name,
        c1_0.updated_at 
    from
        categories c1_0 
    where
        c1_0.id=?
2025-08-28 16:36:50 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    select
        b1_0.category_id,
        b1_0.id,
        b1_0.about,
        b1_0.audio_file_url,
        b1_0.author,
        b1_0.available_copies,
        b1_0.book_cover_url,
        b1_0.created_at,
        b1_0.format,
        b1_0.isbn,
        b1_0.name,
        b1_0.pdf_file_url,
        b1_0.publication_year,
        b1_0.short_details,
        b1_0.total_copies,
        b1_0.updated_at 
    from
        books b1_0 
    where
        b1_0.category_id=?
2025-08-28 16:36:50 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    select
        r1_0.book_id,
        r1_0.id,
        r1_0.comment,
        r1_0.created_at,
        r1_0.rating,
        r1_0.updated_at,
        r1_0.user_id 
    from
        reviews r1_0 
    where
        r1_0.book_id=?
2025-08-28 16:36:50 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.created_at,
        c1_0.description,
        c1_0.name,
        c1_0.updated_at 
    from
        categories c1_0 
    where
        c1_0.id=?
2025-08-28 16:36:50 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    select
        b1_0.category_id,
        b1_0.id,
        b1_0.about,
        b1_0.audio_file_url,
        b1_0.author,
        b1_0.available_copies,
        b1_0.book_cover_url,
        b1_0.created_at,
        b1_0.format,
        b1_0.isbn,
        b1_0.name,
        b1_0.pdf_file_url,
        b1_0.publication_year,
        b1_0.short_details,
        b1_0.total_copies,
        b1_0.updated_at 
    from
        books b1_0 
    where
        b1_0.category_id=?
2025-08-28 16:36:50 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    select
        r1_0.book_id,
        r1_0.id,
        r1_0.comment,
        r1_0.created_at,
        r1_0.rating,
        r1_0.updated_at,
        r1_0.user_id 
    from
        reviews r1_0 
    where
        r1_0.book_id=?
2025-08-28 16:36:50 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.created_at,
        c1_0.description,
        c1_0.name,
        c1_0.updated_at 
    from
        categories c1_0 
    where
        c1_0.id=?
2025-08-28 16:36:50 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    select
        b1_0.category_id,
        b1_0.id,
        b1_0.about,
        b1_0.audio_file_url,
        b1_0.author,
        b1_0.available_copies,
        b1_0.book_cover_url,
        b1_0.created_at,
        b1_0.format,
        b1_0.isbn,
        b1_0.name,
        b1_0.pdf_file_url,
        b1_0.publication_year,
        b1_0.short_details,
        b1_0.total_copies,
        b1_0.updated_at 
    from
        books b1_0 
    where
        b1_0.category_id=?
2025-08-28 16:36:50 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    select
        r1_0.book_id,
        r1_0.id,
        r1_0.comment,
        r1_0.created_at,
        r1_0.rating,
        r1_0.updated_at,
        r1_0.user_id 
    from
        reviews r1_0 
    where
        r1_0.book_id=?
2025-08-28 16:36:50 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.created_at,
        c1_0.description,
        c1_0.name,
        c1_0.updated_at 
    from
        categories c1_0 
    where
        c1_0.id=?
2025-08-28 16:36:50 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    select
        b1_0.category_id,
        b1_0.id,
        b1_0.about,
        b1_0.audio_file_url,
        b1_0.author,
        b1_0.available_copies,
        b1_0.book_cover_url,
        b1_0.created_at,
        b1_0.format,
        b1_0.isbn,
        b1_0.name,
        b1_0.pdf_file_url,
        b1_0.publication_year,
        b1_0.short_details,
        b1_0.total_copies,
        b1_0.updated_at 
    from
        books b1_0 
    where
        b1_0.category_id=?
2025-08-28 16:36:50 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    select
        r1_0.book_id,
        r1_0.id,
        r1_0.comment,
        r1_0.created_at,
        r1_0.rating,
        r1_0.updated_at,
        r1_0.user_id 
    from
        reviews r1_0 
    where
        r1_0.book_id=?
2025-08-28 16:36:50 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.created_at,
        c1_0.description,
        c1_0.name,
        c1_0.updated_at 
    from
        categories c1_0 
    where
        c1_0.id=?
2025-08-28 16:36:50 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    select
        b1_0.category_id,
        b1_0.id,
        b1_0.about,
        b1_0.audio_file_url,
        b1_0.author,
        b1_0.available_copies,
        b1_0.book_cover_url,
        b1_0.created_at,
        b1_0.format,
        b1_0.isbn,
        b1_0.name,
        b1_0.pdf_file_url,
        b1_0.publication_year,
        b1_0.short_details,
        b1_0.total_copies,
        b1_0.updated_at 
    from
        books b1_0 
    where
        b1_0.category_id=?
2025-08-28 16:36:50 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    select
        r1_0.book_id,
        r1_0.id,
        r1_0.comment,
        r1_0.created_at,
        r1_0.rating,
        r1_0.updated_at,
        r1_0.user_id 
    from
        reviews r1_0 
    where
        r1_0.book_id=?
2025-08-28 16:36:50 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    select
        r1_0.book_id,
        r1_0.id,
        r1_0.comment,
        r1_0.created_at,
        r1_0.rating,
        r1_0.updated_at,
        r1_0.user_id 
    from
        reviews r1_0 
    where
        r1_0.book_id=?
2025-08-28 16:36:50 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    select
        r1_0.book_id,
        r1_0.id,
        r1_0.comment,
        r1_0.created_at,
        r1_0.rating,
        r1_0.updated_at,
        r1_0.user_id 
    from
        reviews r1_0 
    where
        r1_0.book_id=?
2025-08-28 16:36:50 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    select
        r1_0.book_id,
        r1_0.id,
        r1_0.comment,
        r1_0.created_at,
        r1_0.rating,
        r1_0.updated_at,
        r1_0.user_id 
    from
        reviews r1_0 
    where
        r1_0.book_id=?
2025-08-28 16:36:57 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.address,
        u1_0.created_at,
        u1_0.date_of_birth,
        u1_0.email,
        u1_0.is_active,
        u1_0.name,
        u1_0.password_hash,
        u1_0.role,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.username=?
2025-08-28 16:36:57 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        b1_0.id,
        b1_0.about,
        b1_0.audio_file_url,
        b1_0.author,
        b1_0.available_copies,
        b1_0.book_cover_url,
        b1_0.category_id,
        b1_0.created_at,
        b1_0.format,
        b1_0.isbn,
        b1_0.name,
        b1_0.pdf_file_url,
        b1_0.publication_year,
        b1_0.short_details,
        b1_0.total_copies,
        b1_0.updated_at 
    from
        books b1_0 
    offset
        ? rows 
    fetch
        first ? rows only
2025-08-28 16:36:57 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.created_at,
        c1_0.description,
        c1_0.name,
        c1_0.updated_at 
    from
        categories c1_0 
    where
        c1_0.id=?
2025-08-28 16:36:57 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        b1_0.category_id,
        b1_0.id,
        b1_0.about,
        b1_0.audio_file_url,
        b1_0.author,
        b1_0.available_copies,
        b1_0.book_cover_url,
        b1_0.created_at,
        b1_0.format,
        b1_0.isbn,
        b1_0.name,
        b1_0.pdf_file_url,
        b1_0.publication_year,
        b1_0.short_details,
        b1_0.total_copies,
        b1_0.updated_at 
    from
        books b1_0 
    where
        b1_0.category_id=?
2025-08-28 16:36:57 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        r1_0.book_id,
        r1_0.id,
        r1_0.comment,
        r1_0.created_at,
        r1_0.rating,
        r1_0.updated_at,
        r1_0.user_id 
    from
        reviews r1_0 
    where
        r1_0.book_id=?
2025-08-28 16:36:59 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.address,
        u1_0.created_at,
        u1_0.date_of_birth,
        u1_0.email,
        u1_0.is_active,
        u1_0.name,
        u1_0.password_hash,
        u1_0.role,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.username=?
2025-08-28 16:36:59 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    select
        b1_0.id,
        b1_0.about,
        b1_0.audio_file_url,
        b1_0.author,
        b1_0.available_copies,
        b1_0.book_cover_url,
        b1_0.category_id,
        b1_0.created_at,
        b1_0.format,
        b1_0.isbn,
        b1_0.name,
        b1_0.pdf_file_url,
        b1_0.publication_year,
        b1_0.short_details,
        b1_0.total_copies,
        b1_0.updated_at 
    from
        books b1_0 
    offset
        ? rows 
    fetch
        first ? rows only
2025-08-28 16:36:59 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    select
        count(b1_0.id) 
    from
        books b1_0
2025-08-28 16:36:59 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.created_at,
        c1_0.description,
        c1_0.name,
        c1_0.updated_at 
    from
        categories c1_0 
    where
        c1_0.id=?
2025-08-28 16:36:59 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    select
        b1_0.category_id,
        b1_0.id,
        b1_0.about,
        b1_0.audio_file_url,
        b1_0.author,
        b1_0.available_copies,
        b1_0.book_cover_url,
        b1_0.created_at,
        b1_0.format,
        b1_0.isbn,
        b1_0.name,
        b1_0.pdf_file_url,
        b1_0.publication_year,
        b1_0.short_details,
        b1_0.total_copies,
        b1_0.updated_at 
    from
        books b1_0 
    where
        b1_0.category_id=?
2025-08-28 16:36:59 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    select
        r1_0.book_id,
        r1_0.id,
        r1_0.comment,
        r1_0.created_at,
        r1_0.rating,
        r1_0.updated_at,
        r1_0.user_id 
    from
        reviews r1_0 
    where
        r1_0.book_id=?
2025-08-28 16:36:59 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.created_at,
        c1_0.description,
        c1_0.name,
        c1_0.updated_at 
    from
        categories c1_0 
    where
        c1_0.id=?
2025-08-28 16:36:59 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    select
        b1_0.category_id,
        b1_0.id,
        b1_0.about,
        b1_0.audio_file_url,
        b1_0.author,
        b1_0.available_copies,
        b1_0.book_cover_url,
        b1_0.created_at,
        b1_0.format,
        b1_0.isbn,
        b1_0.name,
        b1_0.pdf_file_url,
        b1_0.publication_year,
        b1_0.short_details,
        b1_0.total_copies,
        b1_0.updated_at 
    from
        books b1_0 
    where
        b1_0.category_id=?
2025-08-28 16:36:59 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    select
        r1_0.book_id,
        r1_0.id,
        r1_0.comment,
        r1_0.created_at,
        r1_0.rating,
        r1_0.updated_at,
        r1_0.user_id 
    from
        reviews r1_0 
    where
        r1_0.book_id=?
2025-08-28 16:36:59 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.created_at,
        c1_0.description,
        c1_0.name,
        c1_0.updated_at 
    from
        categories c1_0 
    where
        c1_0.id=?
2025-08-28 16:36:59 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    select
        b1_0.category_id,
        b1_0.id,
        b1_0.about,
        b1_0.audio_file_url,
        b1_0.author,
        b1_0.available_copies,
        b1_0.book_cover_url,
        b1_0.created_at,
        b1_0.format,
        b1_0.isbn,
        b1_0.name,
        b1_0.pdf_file_url,
        b1_0.publication_year,
        b1_0.short_details,
        b1_0.total_copies,
        b1_0.updated_at 
    from
        books b1_0 
    where
        b1_0.category_id=?
2025-08-28 16:36:59 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    select
        r1_0.book_id,
        r1_0.id,
        r1_0.comment,
        r1_0.created_at,
        r1_0.rating,
        r1_0.updated_at,
        r1_0.user_id 
    from
        reviews r1_0 
    where
        r1_0.book_id=?
2025-08-28 16:36:59 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.created_at,
        c1_0.description,
        c1_0.name,
        c1_0.updated_at 
    from
        categories c1_0 
    where
        c1_0.id=?
2025-08-28 16:36:59 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    select
        b1_0.category_id,
        b1_0.id,
        b1_0.about,
        b1_0.audio_file_url,
        b1_0.author,
        b1_0.available_copies,
        b1_0.book_cover_url,
        b1_0.created_at,
        b1_0.format,
        b1_0.isbn,
        b1_0.name,
        b1_0.pdf_file_url,
        b1_0.publication_year,
        b1_0.short_details,
        b1_0.total_copies,
        b1_0.updated_at 
    from
        books b1_0 
    where
        b1_0.category_id=?
2025-08-28 16:36:59 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    select
        r1_0.book_id,
        r1_0.id,
        r1_0.comment,
        r1_0.created_at,
        r1_0.rating,
        r1_0.updated_at,
        r1_0.user_id 
    from
        reviews r1_0 
    where
        r1_0.book_id=?
2025-08-28 16:36:59 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.created_at,
        c1_0.description,
        c1_0.name,
        c1_0.updated_at 
    from
        categories c1_0 
    where
        c1_0.id=?
2025-08-28 16:36:59 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    select
        b1_0.category_id,
        b1_0.id,
        b1_0.about,
        b1_0.audio_file_url,
        b1_0.author,
        b1_0.available_copies,
        b1_0.book_cover_url,
        b1_0.created_at,
        b1_0.format,
        b1_0.isbn,
        b1_0.name,
        b1_0.pdf_file_url,
        b1_0.publication_year,
        b1_0.short_details,
        b1_0.total_copies,
        b1_0.updated_at 
    from
        books b1_0 
    where
        b1_0.category_id=?
2025-08-28 16:36:59 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    select
        r1_0.book_id,
        r1_0.id,
        r1_0.comment,
        r1_0.created_at,
        r1_0.rating,
        r1_0.updated_at,
        r1_0.user_id 
    from
        reviews r1_0 
    where
        r1_0.book_id=?
2025-08-28 16:36:59 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.created_at,
        c1_0.description,
        c1_0.name,
        c1_0.updated_at 
    from
        categories c1_0 
    where
        c1_0.id=?
2025-08-28 16:36:59 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    select
        b1_0.category_id,
        b1_0.id,
        b1_0.about,
        b1_0.audio_file_url,
        b1_0.author,
        b1_0.available_copies,
        b1_0.book_cover_url,
        b1_0.created_at,
        b1_0.format,
        b1_0.isbn,
        b1_0.name,
        b1_0.pdf_file_url,
        b1_0.publication_year,
        b1_0.short_details,
        b1_0.total_copies,
        b1_0.updated_at 
    from
        books b1_0 
    where
        b1_0.category_id=?
2025-08-28 16:36:59 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    select
        r1_0.book_id,
        r1_0.id,
        r1_0.comment,
        r1_0.created_at,
        r1_0.rating,
        r1_0.updated_at,
        r1_0.user_id 
    from
        reviews r1_0 
    where
        r1_0.book_id=?
2025-08-28 16:36:59 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.created_at,
        c1_0.description,
        c1_0.name,
        c1_0.updated_at 
    from
        categories c1_0 
    where
        c1_0.id=?
2025-08-28 16:36:59 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    select
        b1_0.category_id,
        b1_0.id,
        b1_0.about,
        b1_0.audio_file_url,
        b1_0.author,
        b1_0.available_copies,
        b1_0.book_cover_url,
        b1_0.created_at,
        b1_0.format,
        b1_0.isbn,
        b1_0.name,
        b1_0.pdf_file_url,
        b1_0.publication_year,
        b1_0.short_details,
        b1_0.total_copies,
        b1_0.updated_at 
    from
        books b1_0 
    where
        b1_0.category_id=?
2025-08-28 16:36:59 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    select
        r1_0.book_id,
        r1_0.id,
        r1_0.comment,
        r1_0.created_at,
        r1_0.rating,
        r1_0.updated_at,
        r1_0.user_id 
    from
        reviews r1_0 
    where
        r1_0.book_id=?
2025-08-28 16:36:59 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    select
        r1_0.book_id,
        r1_0.id,
        r1_0.comment,
        r1_0.created_at,
        r1_0.rating,
        r1_0.updated_at,
        r1_0.user_id 
    from
        reviews r1_0 
    where
        r1_0.book_id=?
2025-08-28 16:36:59 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    select
        r1_0.book_id,
        r1_0.id,
        r1_0.comment,
        r1_0.created_at,
        r1_0.rating,
        r1_0.updated_at,
        r1_0.user_id 
    from
        reviews r1_0 
    where
        r1_0.book_id=?
2025-08-28 16:36:59 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    select
        r1_0.book_id,
        r1_0.id,
        r1_0.comment,
        r1_0.created_at,
        r1_0.rating,
        r1_0.updated_at,
        r1_0.user_id 
    from
        reviews r1_0 
    where
        r1_0.book_id=?
2025-08-28 16:37:17 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.address,
        u1_0.created_at,
        u1_0.date_of_birth,
        u1_0.email,
        u1_0.is_active,
        u1_0.name,
        u1_0.password_hash,
        u1_0.role,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.username=?
2025-08-28 16:37:17 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    select
        b1_0.id,
        b1_0.about,
        b1_0.audio_file_url,
        b1_0.author,
        b1_0.available_copies,
        b1_0.book_cover_url,
        b1_0.category_id,
        b1_0.created_at,
        b1_0.format,
        b1_0.isbn,
        b1_0.name,
        b1_0.pdf_file_url,
        b1_0.publication_year,
        b1_0.short_details,
        b1_0.total_copies,
        b1_0.updated_at 
    from
        books b1_0 
    where
        upper(b1_0.name) like upper(?) escape '\' 
        or upper(b1_0.author) like upper(?) escape '\' 
        or upper(b1_0.isbn) like upper(?) escape '\' 
    fetch
        first ? rows only
2025-08-28 16:37:17 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.created_at,
        c1_0.description,
        c1_0.name,
        c1_0.updated_at 
    from
        categories c1_0 
    where
        c1_0.id=?
2025-08-28 16:37:17 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    select
        b1_0.category_id,
        b1_0.id,
        b1_0.about,
        b1_0.audio_file_url,
        b1_0.author,
        b1_0.available_copies,
        b1_0.book_cover_url,
        b1_0.created_at,
        b1_0.format,
        b1_0.isbn,
        b1_0.name,
        b1_0.pdf_file_url,
        b1_0.publication_year,
        b1_0.short_details,
        b1_0.total_copies,
        b1_0.updated_at 
    from
        books b1_0 
    where
        b1_0.category_id=?
2025-08-28 16:37:17 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    select
        r1_0.book_id,
        r1_0.id,
        r1_0.comment,
        r1_0.created_at,
        r1_0.rating,
        r1_0.updated_at,
        r1_0.user_id 
    from
        reviews r1_0 
    where
        r1_0.book_id=?
2025-08-28 16:49:40 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.address,
        u1_0.created_at,
        u1_0.date_of_birth,
        u1_0.email,
        u1_0.is_active,
        u1_0.name,
        u1_0.password_hash,
        u1_0.role,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.username=?
2025-08-28 16:49:41 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.address,
        u1_0.created_at,
        u1_0.date_of_birth,
        u1_0.email,
        u1_0.is_active,
        u1_0.name,
        u1_0.password_hash,
        u1_0.role,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.username=?
2025-08-28 16:49:41 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        b1_0.id,
        b1_0.book_id,
        b1_0.borrow_date,
        b1_0.created_at,
        b1_0.due_date,
        b1_0.extension_count,
        b1_0.return_date,
        b1_0.status,
        b1_0.updated_at,
        b1_0.user_id 
    from
        borrows b1_0 
    offset
        ? rows 
    fetch
        first ? rows only
2025-08-28 16:49:41 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL - 
    select
        b1_0.id,
        b1_0.book_id,
        b1_0.borrow_date,
        b1_0.created_at,
        b1_0.due_date,
        b1_0.extension_count,
        b1_0.return_date,
        b1_0.status,
        b1_0.updated_at,
        b1_0.user_id 
    from
        borrows b1_0 
    offset
        ? rows 
    fetch
        first ? rows only
2025-08-28 16:49:41 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.address,
        u1_0.created_at,
        u1_0.date_of_birth,
        u1_0.email,
        u1_0.is_active,
        u1_0.name,
        u1_0.password_hash,
        u1_0.role,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.id=?
2025-08-28 16:49:41 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL - 
    select
        b1_0.id,
        b1_0.about,
        b1_0.audio_file_url,
        b1_0.author,
        b1_0.available_copies,
        b1_0.book_cover_url,
        b1_0.category_id,
        b1_0.created_at,
        b1_0.format,
        b1_0.isbn,
        b1_0.name,
        b1_0.pdf_file_url,
        b1_0.publication_year,
        b1_0.short_details,
        b1_0.total_copies,
        b1_0.updated_at 
    from
        books b1_0 
    where
        b1_0.id=?
2025-08-28 16:49:41 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL - 
    select
        r1_0.book_id,
        r1_0.id,
        r1_0.comment,
        r1_0.created_at,
        r1_0.rating,
        r1_0.updated_at,
        r1_0.user_id 
    from
        reviews r1_0 
    where
        r1_0.book_id=?
2025-08-28 16:49:41 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.address,
        u1_0.created_at,
        u1_0.date_of_birth,
        u1_0.email,
        u1_0.is_active,
        u1_0.name,
        u1_0.password_hash,
        u1_0.role,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.id=?
2025-08-28 16:49:41 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        b1_0.id,
        b1_0.about,
        b1_0.audio_file_url,
        b1_0.author,
        b1_0.available_copies,
        b1_0.book_cover_url,
        b1_0.category_id,
        b1_0.created_at,
        b1_0.format,
        b1_0.isbn,
        b1_0.name,
        b1_0.pdf_file_url,
        b1_0.publication_year,
        b1_0.short_details,
        b1_0.total_copies,
        b1_0.updated_at 
    from
        books b1_0 
    where
        b1_0.id=?
2025-08-28 16:49:41 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        r1_0.book_id,
        r1_0.id,
        r1_0.comment,
        r1_0.created_at,
        r1_0.rating,
        r1_0.updated_at,
        r1_0.user_id 
    from
        reviews r1_0 
    where
        r1_0.book_id=?
2025-08-28 16:49:41 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.address,
        u1_0.created_at,
        u1_0.date_of_birth,
        u1_0.email,
        u1_0.is_active,
        u1_0.name,
        u1_0.password_hash,
        u1_0.role,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.id=?
2025-08-28 16:49:41 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        b1_0.id,
        b1_0.about,
        b1_0.audio_file_url,
        b1_0.author,
        b1_0.available_copies,
        b1_0.book_cover_url,
        b1_0.category_id,
        b1_0.created_at,
        b1_0.format,
        b1_0.isbn,
        b1_0.name,
        b1_0.pdf_file_url,
        b1_0.publication_year,
        b1_0.short_details,
        b1_0.total_copies,
        b1_0.updated_at 
    from
        books b1_0 
    where
        b1_0.id=?
2025-08-28 16:49:41 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        r1_0.book_id,
        r1_0.id,
        r1_0.comment,
        r1_0.created_at,
        r1_0.rating,
        r1_0.updated_at,
        r1_0.user_id 
    from
        reviews r1_0 
    where
        r1_0.book_id=?
2025-08-28 16:49:41 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.address,
        u1_0.created_at,
        u1_0.date_of_birth,
        u1_0.email,
        u1_0.is_active,
        u1_0.name,
        u1_0.password_hash,
        u1_0.role,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.id=?
2025-08-28 16:49:41 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL - 
    select
        b1_0.id,
        b1_0.about,
        b1_0.audio_file_url,
        b1_0.author,
        b1_0.available_copies,
        b1_0.book_cover_url,
        b1_0.category_id,
        b1_0.created_at,
        b1_0.format,
        b1_0.isbn,
        b1_0.name,
        b1_0.pdf_file_url,
        b1_0.publication_year,
        b1_0.short_details,
        b1_0.total_copies,
        b1_0.updated_at 
    from
        books b1_0 
    where
        b1_0.id=?
2025-08-28 16:49:41 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL - 
    select
        r1_0.book_id,
        r1_0.id,
        r1_0.comment,
        r1_0.created_at,
        r1_0.rating,
        r1_0.updated_at,
        r1_0.user_id 
    from
        reviews r1_0 
    where
        r1_0.book_id=?
2025-08-28 16:49:41 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.address,
        u1_0.created_at,
        u1_0.date_of_birth,
        u1_0.email,
        u1_0.is_active,
        u1_0.name,
        u1_0.password_hash,
        u1_0.role,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.id=?
2025-08-28 16:49:41 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL - 
    select
        b1_0.id,
        b1_0.about,
        b1_0.audio_file_url,
        b1_0.author,
        b1_0.available_copies,
        b1_0.book_cover_url,
        b1_0.category_id,
        b1_0.created_at,
        b1_0.format,
        b1_0.isbn,
        b1_0.name,
        b1_0.pdf_file_url,
        b1_0.publication_year,
        b1_0.short_details,
        b1_0.total_copies,
        b1_0.updated_at 
    from
        books b1_0 
    where
        b1_0.id=?
2025-08-28 16:49:41 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL - 
    select
        r1_0.book_id,
        r1_0.id,
        r1_0.comment,
        r1_0.created_at,
        r1_0.rating,
        r1_0.updated_at,
        r1_0.user_id 
    from
        reviews r1_0 
    where
        r1_0.book_id=?
2025-08-28 16:49:41 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL - 
    select
        b1_0.id,
        b1_0.about,
        b1_0.audio_file_url,
        b1_0.author,
        b1_0.available_copies,
        b1_0.book_cover_url,
        b1_0.category_id,
        b1_0.created_at,
        b1_0.format,
        b1_0.isbn,
        b1_0.name,
        b1_0.pdf_file_url,
        b1_0.publication_year,
        b1_0.short_details,
        b1_0.total_copies,
        b1_0.updated_at 
    from
        books b1_0 
    where
        b1_0.id=?
2025-08-28 16:49:41 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL - 
    select
        r1_0.book_id,
        r1_0.id,
        r1_0.comment,
        r1_0.created_at,
        r1_0.rating,
        r1_0.updated_at,
        r1_0.user_id 
    from
        reviews r1_0 
    where
        r1_0.book_id=?
2025-08-28 16:49:41 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL - 
    select
        b1_0.id,
        b1_0.about,
        b1_0.audio_file_url,
        b1_0.author,
        b1_0.available_copies,
        b1_0.book_cover_url,
        b1_0.category_id,
        b1_0.created_at,
        b1_0.format,
        b1_0.isbn,
        b1_0.name,
        b1_0.pdf_file_url,
        b1_0.publication_year,
        b1_0.short_details,
        b1_0.total_copies,
        b1_0.updated_at 
    from
        books b1_0 
    where
        b1_0.id=?
2025-08-28 16:49:41 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL - 
    select
        r1_0.book_id,
        r1_0.id,
        r1_0.comment,
        r1_0.created_at,
        r1_0.rating,
        r1_0.updated_at,
        r1_0.user_id 
    from
        reviews r1_0 
    where
        r1_0.book_id=?
2025-08-28 16:49:41 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.address,
        u1_0.created_at,
        u1_0.date_of_birth,
        u1_0.email,
        u1_0.is_active,
        u1_0.name,
        u1_0.password_hash,
        u1_0.role,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.id=?
2025-08-28 16:49:41 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        b1_0.id,
        b1_0.about,
        b1_0.audio_file_url,
        b1_0.author,
        b1_0.available_copies,
        b1_0.book_cover_url,
        b1_0.category_id,
        b1_0.created_at,
        b1_0.format,
        b1_0.isbn,
        b1_0.name,
        b1_0.pdf_file_url,
        b1_0.publication_year,
        b1_0.short_details,
        b1_0.total_copies,
        b1_0.updated_at 
    from
        books b1_0 
    where
        b1_0.id=?
2025-08-28 16:49:41 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        r1_0.book_id,
        r1_0.id,
        r1_0.comment,
        r1_0.created_at,
        r1_0.rating,
        r1_0.updated_at,
        r1_0.user_id 
    from
        reviews r1_0 
    where
        r1_0.book_id=?
2025-08-28 16:49:41 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        b1_0.id,
        b1_0.about,
        b1_0.audio_file_url,
        b1_0.author,
        b1_0.available_copies,
        b1_0.book_cover_url,
        b1_0.category_id,
        b1_0.created_at,
        b1_0.format,
        b1_0.isbn,
        b1_0.name,
        b1_0.pdf_file_url,
        b1_0.publication_year,
        b1_0.short_details,
        b1_0.total_copies,
        b1_0.updated_at 
    from
        books b1_0 
    where
        b1_0.id=?
2025-08-28 16:49:41 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        r1_0.book_id,
        r1_0.id,
        r1_0.comment,
        r1_0.created_at,
        r1_0.rating,
        r1_0.updated_at,
        r1_0.user_id 
    from
        reviews r1_0 
    where
        r1_0.book_id=?
2025-08-28 16:49:41 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        b1_0.id,
        b1_0.about,
        b1_0.audio_file_url,
        b1_0.author,
        b1_0.available_copies,
        b1_0.book_cover_url,
        b1_0.category_id,
        b1_0.created_at,
        b1_0.format,
        b1_0.isbn,
        b1_0.name,
        b1_0.pdf_file_url,
        b1_0.publication_year,
        b1_0.short_details,
        b1_0.total_copies,
        b1_0.updated_at 
    from
        books b1_0 
    where
        b1_0.id=?
2025-08-28 16:49:41 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        r1_0.book_id,
        r1_0.id,
        r1_0.comment,
        r1_0.created_at,
        r1_0.rating,
        r1_0.updated_at,
        r1_0.user_id 
    from
        reviews r1_0 
    where
        r1_0.book_id=?
2025-08-28 16:49:41 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.address,
        u1_0.created_at,
        u1_0.date_of_birth,
        u1_0.email,
        u1_0.is_active,
        u1_0.name,
        u1_0.password_hash,
        u1_0.role,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.username=?
2025-08-28 16:49:41 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.address,
        u1_0.created_at,
        u1_0.date_of_birth,
        u1_0.email,
        u1_0.is_active,
        u1_0.name,
        u1_0.password_hash,
        u1_0.role,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.username=?
2025-08-28 16:49:41 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    select
        b1_0.id,
        b1_0.book_id,
        b1_0.borrow_date,
        b1_0.created_at,
        b1_0.due_date,
        b1_0.extension_count,
        b1_0.return_date,
        b1_0.status,
        b1_0.updated_at,
        b1_0.user_id 
    from
        borrows b1_0 
    offset
        ? rows 
    fetch
        first ? rows only
2025-08-28 16:49:41 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.address,
        u1_0.created_at,
        u1_0.date_of_birth,
        u1_0.email,
        u1_0.is_active,
        u1_0.name,
        u1_0.password_hash,
        u1_0.role,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.id=?
2025-08-28 16:49:41 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    select
        b1_0.id,
        b1_0.about,
        b1_0.audio_file_url,
        b1_0.author,
        b1_0.available_copies,
        b1_0.book_cover_url,
        b1_0.category_id,
        b1_0.created_at,
        b1_0.format,
        b1_0.isbn,
        b1_0.name,
        b1_0.pdf_file_url,
        b1_0.publication_year,
        b1_0.short_details,
        b1_0.total_copies,
        b1_0.updated_at 
    from
        books b1_0 
    where
        b1_0.id=?
2025-08-28 16:49:41 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    select
        r1_0.book_id,
        r1_0.id,
        r1_0.comment,
        r1_0.created_at,
        r1_0.rating,
        r1_0.updated_at,
        r1_0.user_id 
    from
        reviews r1_0 
    where
        r1_0.book_id=?
2025-08-28 16:49:41 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.address,
        u1_0.created_at,
        u1_0.date_of_birth,
        u1_0.email,
        u1_0.is_active,
        u1_0.name,
        u1_0.password_hash,
        u1_0.role,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.id=?
2025-08-28 16:49:41 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    select
        b1_0.id,
        b1_0.about,
        b1_0.audio_file_url,
        b1_0.author,
        b1_0.available_copies,
        b1_0.book_cover_url,
        b1_0.category_id,
        b1_0.created_at,
        b1_0.format,
        b1_0.isbn,
        b1_0.name,
        b1_0.pdf_file_url,
        b1_0.publication_year,
        b1_0.short_details,
        b1_0.total_copies,
        b1_0.updated_at 
    from
        books b1_0 
    where
        b1_0.id=?
2025-08-28 16:49:41 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    select
        r1_0.book_id,
        r1_0.id,
        r1_0.comment,
        r1_0.created_at,
        r1_0.rating,
        r1_0.updated_at,
        r1_0.user_id 
    from
        reviews r1_0 
    where
        r1_0.book_id=?
2025-08-28 16:49:41 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.address,
        u1_0.created_at,
        u1_0.date_of_birth,
        u1_0.email,
        u1_0.is_active,
        u1_0.name,
        u1_0.password_hash,
        u1_0.role,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.id=?
2025-08-28 16:49:41 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    select
        b1_0.id,
        b1_0.about,
        b1_0.audio_file_url,
        b1_0.author,
        b1_0.available_copies,
        b1_0.book_cover_url,
        b1_0.category_id,
        b1_0.created_at,
        b1_0.format,
        b1_0.isbn,
        b1_0.name,
        b1_0.pdf_file_url,
        b1_0.publication_year,
        b1_0.short_details,
        b1_0.total_copies,
        b1_0.updated_at 
    from
        books b1_0 
    where
        b1_0.id=?
2025-08-28 16:49:41 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    select
        r1_0.book_id,
        r1_0.id,
        r1_0.comment,
        r1_0.created_at,
        r1_0.rating,
        r1_0.updated_at,
        r1_0.user_id 
    from
        reviews r1_0 
    where
        r1_0.book_id=?
2025-08-28 16:49:41 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    select
        b1_0.id,
        b1_0.book_id,
        b1_0.borrow_date,
        b1_0.created_at,
        b1_0.due_date,
        b1_0.extension_count,
        b1_0.return_date,
        b1_0.status,
        b1_0.updated_at,
        b1_0.user_id 
    from
        borrows b1_0 
    offset
        ? rows 
    fetch
        first ? rows only
2025-08-28 16:49:41 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    select
        b1_0.id,
        b1_0.about,
        b1_0.audio_file_url,
        b1_0.author,
        b1_0.available_copies,
        b1_0.book_cover_url,
        b1_0.category_id,
        b1_0.created_at,
        b1_0.format,
        b1_0.isbn,
        b1_0.name,
        b1_0.pdf_file_url,
        b1_0.publication_year,
        b1_0.short_details,
        b1_0.total_copies,
        b1_0.updated_at 
    from
        books b1_0 
    where
        b1_0.id=?
2025-08-28 16:49:41 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    select
        r1_0.book_id,
        r1_0.id,
        r1_0.comment,
        r1_0.created_at,
        r1_0.rating,
        r1_0.updated_at,
        r1_0.user_id 
    from
        reviews r1_0 
    where
        r1_0.book_id=?
2025-08-28 16:49:41 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    select
        b1_0.id,
        b1_0.about,
        b1_0.audio_file_url,
        b1_0.author,
        b1_0.available_copies,
        b1_0.book_cover_url,
        b1_0.category_id,
        b1_0.created_at,
        b1_0.format,
        b1_0.isbn,
        b1_0.name,
        b1_0.pdf_file_url,
        b1_0.publication_year,
        b1_0.short_details,
        b1_0.total_copies,
        b1_0.updated_at 
    from
        books b1_0 
    where
        b1_0.id=?
2025-08-28 16:49:41 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    select
        r1_0.book_id,
        r1_0.id,
        r1_0.comment,
        r1_0.created_at,
        r1_0.rating,
        r1_0.updated_at,
        r1_0.user_id 
    from
        reviews r1_0 
    where
        r1_0.book_id=?
2025-08-28 16:49:41 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.address,
        u1_0.created_at,
        u1_0.date_of_birth,
        u1_0.email,
        u1_0.is_active,
        u1_0.name,
        u1_0.password_hash,
        u1_0.role,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.id=?
2025-08-28 16:49:41 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    select
        b1_0.id,
        b1_0.about,
        b1_0.audio_file_url,
        b1_0.author,
        b1_0.available_copies,
        b1_0.book_cover_url,
        b1_0.category_id,
        b1_0.created_at,
        b1_0.format,
        b1_0.isbn,
        b1_0.name,
        b1_0.pdf_file_url,
        b1_0.publication_year,
        b1_0.short_details,
        b1_0.total_copies,
        b1_0.updated_at 
    from
        books b1_0 
    where
        b1_0.id=?
2025-08-28 16:49:41 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    select
        r1_0.book_id,
        r1_0.id,
        r1_0.comment,
        r1_0.created_at,
        r1_0.rating,
        r1_0.updated_at,
        r1_0.user_id 
    from
        reviews r1_0 
    where
        r1_0.book_id=?
2025-08-28 16:49:41 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.address,
        u1_0.created_at,
        u1_0.date_of_birth,
        u1_0.email,
        u1_0.is_active,
        u1_0.name,
        u1_0.password_hash,
        u1_0.role,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.id=?
2025-08-28 16:49:41 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    select
        b1_0.id,
        b1_0.about,
        b1_0.audio_file_url,
        b1_0.author,
        b1_0.available_copies,
        b1_0.book_cover_url,
        b1_0.category_id,
        b1_0.created_at,
        b1_0.format,
        b1_0.isbn,
        b1_0.name,
        b1_0.pdf_file_url,
        b1_0.publication_year,
        b1_0.short_details,
        b1_0.total_copies,
        b1_0.updated_at 
    from
        books b1_0 
    where
        b1_0.id=?
2025-08-28 16:49:41 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    select
        r1_0.book_id,
        r1_0.id,
        r1_0.comment,
        r1_0.created_at,
        r1_0.rating,
        r1_0.updated_at,
        r1_0.user_id 
    from
        reviews r1_0 
    where
        r1_0.book_id=?
2025-08-28 16:49:41 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.address,
        u1_0.created_at,
        u1_0.date_of_birth,
        u1_0.email,
        u1_0.is_active,
        u1_0.name,
        u1_0.password_hash,
        u1_0.role,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.id=?
2025-08-28 16:49:41 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    select
        b1_0.id,
        b1_0.about,
        b1_0.audio_file_url,
        b1_0.author,
        b1_0.available_copies,
        b1_0.book_cover_url,
        b1_0.category_id,
        b1_0.created_at,
        b1_0.format,
        b1_0.isbn,
        b1_0.name,
        b1_0.pdf_file_url,
        b1_0.publication_year,
        b1_0.short_details,
        b1_0.total_copies,
        b1_0.updated_at 
    from
        books b1_0 
    where
        b1_0.id=?
2025-08-28 16:49:41 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    select
        r1_0.book_id,
        r1_0.id,
        r1_0.comment,
        r1_0.created_at,
        r1_0.rating,
        r1_0.updated_at,
        r1_0.user_id 
    from
        reviews r1_0 
    where
        r1_0.book_id=?
2025-08-28 16:49:41 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    select
        b1_0.id,
        b1_0.about,
        b1_0.audio_file_url,
        b1_0.author,
        b1_0.available_copies,
        b1_0.book_cover_url,
        b1_0.category_id,
        b1_0.created_at,
        b1_0.format,
        b1_0.isbn,
        b1_0.name,
        b1_0.pdf_file_url,
        b1_0.publication_year,
        b1_0.short_details,
        b1_0.total_copies,
        b1_0.updated_at 
    from
        books b1_0 
    where
        b1_0.id=?
2025-08-28 16:49:41 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    select
        r1_0.book_id,
        r1_0.id,
        r1_0.comment,
        r1_0.created_at,
        r1_0.rating,
        r1_0.updated_at,
        r1_0.user_id 
    from
        reviews r1_0 
    where
        r1_0.book_id=?
2025-08-28 16:49:41 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    select
        b1_0.id,
        b1_0.about,
        b1_0.audio_file_url,
        b1_0.author,
        b1_0.available_copies,
        b1_0.book_cover_url,
        b1_0.category_id,
        b1_0.created_at,
        b1_0.format,
        b1_0.isbn,
        b1_0.name,
        b1_0.pdf_file_url,
        b1_0.publication_year,
        b1_0.short_details,
        b1_0.total_copies,
        b1_0.updated_at 
    from
        books b1_0 
    where
        b1_0.id=?
2025-08-28 16:49:41 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    select
        r1_0.book_id,
        r1_0.id,
        r1_0.comment,
        r1_0.created_at,
        r1_0.rating,
        r1_0.updated_at,
        r1_0.user_id 
    from
        reviews r1_0 
    where
        r1_0.book_id=?
2025-08-28 16:49:41 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.address,
        u1_0.created_at,
        u1_0.date_of_birth,
        u1_0.email,
        u1_0.is_active,
        u1_0.name,
        u1_0.password_hash,
        u1_0.role,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.username=?
2025-08-28 16:49:41 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        b1_0.id,
        b1_0.book_id,
        b1_0.borrow_date,
        b1_0.created_at,
        b1_0.due_date,
        b1_0.extension_count,
        b1_0.return_date,
        b1_0.status,
        b1_0.updated_at,
        b1_0.user_id 
    from
        borrows b1_0 
    offset
        ? rows 
    fetch
        first ? rows only
2025-08-28 16:49:41 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.address,
        u1_0.created_at,
        u1_0.date_of_birth,
        u1_0.email,
        u1_0.is_active,
        u1_0.name,
        u1_0.password_hash,
        u1_0.role,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.id=?
2025-08-28 16:49:41 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        b1_0.id,
        b1_0.about,
        b1_0.audio_file_url,
        b1_0.author,
        b1_0.available_copies,
        b1_0.book_cover_url,
        b1_0.category_id,
        b1_0.created_at,
        b1_0.format,
        b1_0.isbn,
        b1_0.name,
        b1_0.pdf_file_url,
        b1_0.publication_year,
        b1_0.short_details,
        b1_0.total_copies,
        b1_0.updated_at 
    from
        books b1_0 
    where
        b1_0.id=?
2025-08-28 16:49:41 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        r1_0.book_id,
        r1_0.id,
        r1_0.comment,
        r1_0.created_at,
        r1_0.rating,
        r1_0.updated_at,
        r1_0.user_id 
    from
        reviews r1_0 
    where
        r1_0.book_id=?
2025-08-28 16:49:41 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.address,
        u1_0.created_at,
        u1_0.date_of_birth,
        u1_0.email,
        u1_0.is_active,
        u1_0.name,
        u1_0.password_hash,
        u1_0.role,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.id=?
2025-08-28 16:49:41 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        b1_0.id,
        b1_0.about,
        b1_0.audio_file_url,
        b1_0.author,
        b1_0.available_copies,
        b1_0.book_cover_url,
        b1_0.category_id,
        b1_0.created_at,
        b1_0.format,
        b1_0.isbn,
        b1_0.name,
        b1_0.pdf_file_url,
        b1_0.publication_year,
        b1_0.short_details,
        b1_0.total_copies,
        b1_0.updated_at 
    from
        books b1_0 
    where
        b1_0.id=?
2025-08-28 16:49:41 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        r1_0.book_id,
        r1_0.id,
        r1_0.comment,
        r1_0.created_at,
        r1_0.rating,
        r1_0.updated_at,
        r1_0.user_id 
    from
        reviews r1_0 
    where
        r1_0.book_id=?
2025-08-28 16:49:41 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.address,
        u1_0.created_at,
        u1_0.date_of_birth,
        u1_0.email,
        u1_0.is_active,
        u1_0.name,
        u1_0.password_hash,
        u1_0.role,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.id=?
2025-08-28 16:49:41 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        b1_0.id,
        b1_0.about,
        b1_0.audio_file_url,
        b1_0.author,
        b1_0.available_copies,
        b1_0.book_cover_url,
        b1_0.category_id,
        b1_0.created_at,
        b1_0.format,
        b1_0.isbn,
        b1_0.name,
        b1_0.pdf_file_url,
        b1_0.publication_year,
        b1_0.short_details,
        b1_0.total_copies,
        b1_0.updated_at 
    from
        books b1_0 
    where
        b1_0.id=?
2025-08-28 16:49:41 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        r1_0.book_id,
        r1_0.id,
        r1_0.comment,
        r1_0.created_at,
        r1_0.rating,
        r1_0.updated_at,
        r1_0.user_id 
    from
        reviews r1_0 
    where
        r1_0.book_id=?
2025-08-28 16:49:41 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        b1_0.id,
        b1_0.about,
        b1_0.audio_file_url,
        b1_0.author,
        b1_0.available_copies,
        b1_0.book_cover_url,
        b1_0.category_id,
        b1_0.created_at,
        b1_0.format,
        b1_0.isbn,
        b1_0.name,
        b1_0.pdf_file_url,
        b1_0.publication_year,
        b1_0.short_details,
        b1_0.total_copies,
        b1_0.updated_at 
    from
        books b1_0 
    where
        b1_0.id=?
2025-08-28 16:49:41 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        r1_0.book_id,
        r1_0.id,
        r1_0.comment,
        r1_0.created_at,
        r1_0.rating,
        r1_0.updated_at,
        r1_0.user_id 
    from
        reviews r1_0 
    where
        r1_0.book_id=?
2025-08-28 16:49:41 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        b1_0.id,
        b1_0.about,
        b1_0.audio_file_url,
        b1_0.author,
        b1_0.available_copies,
        b1_0.book_cover_url,
        b1_0.category_id,
        b1_0.created_at,
        b1_0.format,
        b1_0.isbn,
        b1_0.name,
        b1_0.pdf_file_url,
        b1_0.publication_year,
        b1_0.short_details,
        b1_0.total_copies,
        b1_0.updated_at 
    from
        books b1_0 
    where
        b1_0.id=?
2025-08-28 16:49:41 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        r1_0.book_id,
        r1_0.id,
        r1_0.comment,
        r1_0.created_at,
        r1_0.rating,
        r1_0.updated_at,
        r1_0.user_id 
    from
        reviews r1_0 
    where
        r1_0.book_id=?
2025-08-28 16:49:41 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.address,
        u1_0.created_at,
        u1_0.date_of_birth,
        u1_0.email,
        u1_0.is_active,
        u1_0.name,
        u1_0.password_hash,
        u1_0.role,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.username=?
2025-08-28 16:49:41 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.address,
        u1_0.created_at,
        u1_0.date_of_birth,
        u1_0.email,
        u1_0.is_active,
        u1_0.name,
        u1_0.password_hash,
        u1_0.role,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.username=?
2025-08-28 16:49:41 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    select
        b1_0.id,
        b1_0.book_id,
        b1_0.borrow_date,
        b1_0.created_at,
        b1_0.due_date,
        b1_0.extension_count,
        b1_0.return_date,
        b1_0.status,
        b1_0.updated_at,
        b1_0.user_id 
    from
        borrows b1_0 
    where
        b1_0.return_date is null 
        and b1_0.due_date<?
2025-08-28 16:49:41 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.address,
        u1_0.created_at,
        u1_0.date_of_birth,
        u1_0.email,
        u1_0.is_active,
        u1_0.name,
        u1_0.password_hash,
        u1_0.role,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.id=?
2025-08-28 16:49:41 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    select
        b1_0.id,
        b1_0.about,
        b1_0.audio_file_url,
        b1_0.author,
        b1_0.available_copies,
        b1_0.book_cover_url,
        b1_0.category_id,
        b1_0.created_at,
        b1_0.format,
        b1_0.isbn,
        b1_0.name,
        b1_0.pdf_file_url,
        b1_0.publication_year,
        b1_0.short_details,
        b1_0.total_copies,
        b1_0.updated_at 
    from
        books b1_0 
    where
        b1_0.id=?
2025-08-28 16:49:41 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    select
        r1_0.book_id,
        r1_0.id,
        r1_0.comment,
        r1_0.created_at,
        r1_0.rating,
        r1_0.updated_at,
        r1_0.user_id 
    from
        reviews r1_0 
    where
        r1_0.book_id=?
2025-08-28 16:49:41 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.address,
        u1_0.created_at,
        u1_0.date_of_birth,
        u1_0.email,
        u1_0.is_active,
        u1_0.name,
        u1_0.password_hash,
        u1_0.role,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.id=?
2025-08-28 16:49:41 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    select
        b1_0.id,
        b1_0.about,
        b1_0.audio_file_url,
        b1_0.author,
        b1_0.available_copies,
        b1_0.book_cover_url,
        b1_0.category_id,
        b1_0.created_at,
        b1_0.format,
        b1_0.isbn,
        b1_0.name,
        b1_0.pdf_file_url,
        b1_0.publication_year,
        b1_0.short_details,
        b1_0.total_copies,
        b1_0.updated_at 
    from
        books b1_0 
    where
        b1_0.id=?
2025-08-28 16:49:41 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    select
        r1_0.book_id,
        r1_0.id,
        r1_0.comment,
        r1_0.created_at,
        r1_0.rating,
        r1_0.updated_at,
        r1_0.user_id 
    from
        reviews r1_0 
    where
        r1_0.book_id=?
2025-08-28 16:49:41 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    select
        b1_0.id,
        b1_0.about,
        b1_0.audio_file_url,
        b1_0.author,
        b1_0.available_copies,
        b1_0.book_cover_url,
        b1_0.category_id,
        b1_0.created_at,
        b1_0.format,
        b1_0.isbn,
        b1_0.name,
        b1_0.pdf_file_url,
        b1_0.publication_year,
        b1_0.short_details,
        b1_0.total_copies,
        b1_0.updated_at 
    from
        books b1_0 
    where
        b1_0.id=?
2025-08-28 16:49:41 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    select
        r1_0.book_id,
        r1_0.id,
        r1_0.comment,
        r1_0.created_at,
        r1_0.rating,
        r1_0.updated_at,
        r1_0.user_id 
    from
        reviews r1_0 
    where
        r1_0.book_id=?
2025-08-28 16:49:41 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    select
        b1_0.id,
        b1_0.book_id,
        b1_0.borrow_date,
        b1_0.created_at,
        b1_0.due_date,
        b1_0.extension_count,
        b1_0.return_date,
        b1_0.status,
        b1_0.updated_at,
        b1_0.user_id 
    from
        borrows b1_0 
    offset
        ? rows 
    fetch
        first ? rows only
2025-08-28 16:49:41 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.address,
        u1_0.created_at,
        u1_0.date_of_birth,
        u1_0.email,
        u1_0.is_active,
        u1_0.name,
        u1_0.password_hash,
        u1_0.role,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.id=?
2025-08-28 16:49:41 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    select
        b1_0.id,
        b1_0.about,
        b1_0.audio_file_url,
        b1_0.author,
        b1_0.available_copies,
        b1_0.book_cover_url,
        b1_0.category_id,
        b1_0.created_at,
        b1_0.format,
        b1_0.isbn,
        b1_0.name,
        b1_0.pdf_file_url,
        b1_0.publication_year,
        b1_0.short_details,
        b1_0.total_copies,
        b1_0.updated_at 
    from
        books b1_0 
    where
        b1_0.id=?
2025-08-28 16:49:41 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    select
        r1_0.book_id,
        r1_0.id,
        r1_0.comment,
        r1_0.created_at,
        r1_0.rating,
        r1_0.updated_at,
        r1_0.user_id 
    from
        reviews r1_0 
    where
        r1_0.book_id=?
2025-08-28 16:49:41 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.address,
        u1_0.created_at,
        u1_0.date_of_birth,
        u1_0.email,
        u1_0.is_active,
        u1_0.name,
        u1_0.password_hash,
        u1_0.role,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.id=?
2025-08-28 16:49:41 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    select
        b1_0.id,
        b1_0.about,
        b1_0.audio_file_url,
        b1_0.author,
        b1_0.available_copies,
        b1_0.book_cover_url,
        b1_0.category_id,
        b1_0.created_at,
        b1_0.format,
        b1_0.isbn,
        b1_0.name,
        b1_0.pdf_file_url,
        b1_0.publication_year,
        b1_0.short_details,
        b1_0.total_copies,
        b1_0.updated_at 
    from
        books b1_0 
    where
        b1_0.id=?
2025-08-28 16:49:41 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    select
        r1_0.book_id,
        r1_0.id,
        r1_0.comment,
        r1_0.created_at,
        r1_0.rating,
        r1_0.updated_at,
        r1_0.user_id 
    from
        reviews r1_0 
    where
        r1_0.book_id=?
2025-08-28 16:49:41 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.address,
        u1_0.created_at,
        u1_0.date_of_birth,
        u1_0.email,
        u1_0.is_active,
        u1_0.name,
        u1_0.password_hash,
        u1_0.role,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.id=?
2025-08-28 16:49:41 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    select
        b1_0.id,
        b1_0.about,
        b1_0.audio_file_url,
        b1_0.author,
        b1_0.available_copies,
        b1_0.book_cover_url,
        b1_0.category_id,
        b1_0.created_at,
        b1_0.format,
        b1_0.isbn,
        b1_0.name,
        b1_0.pdf_file_url,
        b1_0.publication_year,
        b1_0.short_details,
        b1_0.total_copies,
        b1_0.updated_at 
    from
        books b1_0 
    where
        b1_0.id=?
2025-08-28 16:49:41 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    select
        r1_0.book_id,
        r1_0.id,
        r1_0.comment,
        r1_0.created_at,
        r1_0.rating,
        r1_0.updated_at,
        r1_0.user_id 
    from
        reviews r1_0 
    where
        r1_0.book_id=?
2025-08-28 16:49:41 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    select
        b1_0.id,
        b1_0.about,
        b1_0.audio_file_url,
        b1_0.author,
        b1_0.available_copies,
        b1_0.book_cover_url,
        b1_0.category_id,
        b1_0.created_at,
        b1_0.format,
        b1_0.isbn,
        b1_0.name,
        b1_0.pdf_file_url,
        b1_0.publication_year,
        b1_0.short_details,
        b1_0.total_copies,
        b1_0.updated_at 
    from
        books b1_0 
    where
        b1_0.id=?
2025-08-28 16:49:41 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    select
        r1_0.book_id,
        r1_0.id,
        r1_0.comment,
        r1_0.created_at,
        r1_0.rating,
        r1_0.updated_at,
        r1_0.user_id 
    from
        reviews r1_0 
    where
        r1_0.book_id=?
2025-08-28 16:49:41 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    select
        b1_0.id,
        b1_0.about,
        b1_0.audio_file_url,
        b1_0.author,
        b1_0.available_copies,
        b1_0.book_cover_url,
        b1_0.category_id,
        b1_0.created_at,
        b1_0.format,
        b1_0.isbn,
        b1_0.name,
        b1_0.pdf_file_url,
        b1_0.publication_year,
        b1_0.short_details,
        b1_0.total_copies,
        b1_0.updated_at 
    from
        books b1_0 
    where
        b1_0.id=?
2025-08-28 16:49:41 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    select
        r1_0.book_id,
        r1_0.id,
        r1_0.comment,
        r1_0.created_at,
        r1_0.rating,
        r1_0.updated_at,
        r1_0.user_id 
    from
        reviews r1_0 
    where
        r1_0.book_id=?
2025-08-28 16:49:41 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.address,
        u1_0.created_at,
        u1_0.date_of_birth,
        u1_0.email,
        u1_0.is_active,
        u1_0.name,
        u1_0.password_hash,
        u1_0.role,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.username=?
2025-08-28 16:49:41 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    select
        b1_0.id,
        b1_0.book_id,
        b1_0.borrow_date,
        b1_0.created_at,
        b1_0.due_date,
        b1_0.extension_count,
        b1_0.return_date,
        b1_0.status,
        b1_0.updated_at,
        b1_0.user_id 
    from
        borrows b1_0 
    where
        b1_0.return_date is null 
        and b1_0.due_date<?
2025-08-28 16:49:41 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.address,
        u1_0.created_at,
        u1_0.date_of_birth,
        u1_0.email,
        u1_0.is_active,
        u1_0.name,
        u1_0.password_hash,
        u1_0.role,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.id=?
2025-08-28 16:49:41 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    select
        b1_0.id,
        b1_0.about,
        b1_0.audio_file_url,
        b1_0.author,
        b1_0.available_copies,
        b1_0.book_cover_url,
        b1_0.category_id,
        b1_0.created_at,
        b1_0.format,
        b1_0.isbn,
        b1_0.name,
        b1_0.pdf_file_url,
        b1_0.publication_year,
        b1_0.short_details,
        b1_0.total_copies,
        b1_0.updated_at 
    from
        books b1_0 
    where
        b1_0.id=?
2025-08-28 16:49:41 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    select
        r1_0.book_id,
        r1_0.id,
        r1_0.comment,
        r1_0.created_at,
        r1_0.rating,
        r1_0.updated_at,
        r1_0.user_id 
    from
        reviews r1_0 
    where
        r1_0.book_id=?
2025-08-28 16:49:41 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.address,
        u1_0.created_at,
        u1_0.date_of_birth,
        u1_0.email,
        u1_0.is_active,
        u1_0.name,
        u1_0.password_hash,
        u1_0.role,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.id=?
2025-08-28 16:49:41 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    select
        b1_0.id,
        b1_0.about,
        b1_0.audio_file_url,
        b1_0.author,
        b1_0.available_copies,
        b1_0.book_cover_url,
        b1_0.category_id,
        b1_0.created_at,
        b1_0.format,
        b1_0.isbn,
        b1_0.name,
        b1_0.pdf_file_url,
        b1_0.publication_year,
        b1_0.short_details,
        b1_0.total_copies,
        b1_0.updated_at 
    from
        books b1_0 
    where
        b1_0.id=?
2025-08-28 16:49:41 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    select
        r1_0.book_id,
        r1_0.id,
        r1_0.comment,
        r1_0.created_at,
        r1_0.rating,
        r1_0.updated_at,
        r1_0.user_id 
    from
        reviews r1_0 
    where
        r1_0.book_id=?
2025-08-28 16:49:41 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    select
        b1_0.id,
        b1_0.about,
        b1_0.audio_file_url,
        b1_0.author,
        b1_0.available_copies,
        b1_0.book_cover_url,
        b1_0.category_id,
        b1_0.created_at,
        b1_0.format,
        b1_0.isbn,
        b1_0.name,
        b1_0.pdf_file_url,
        b1_0.publication_year,
        b1_0.short_details,
        b1_0.total_copies,
        b1_0.updated_at 
    from
        books b1_0 
    where
        b1_0.id=?
2025-08-28 16:49:41 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    select
        r1_0.book_id,
        r1_0.id,
        r1_0.comment,
        r1_0.created_at,
        r1_0.rating,
        r1_0.updated_at,
        r1_0.user_id 
    from
        reviews r1_0 
    where
        r1_0.book_id=?
2025-08-28 16:51:31 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.address,
        u1_0.created_at,
        u1_0.date_of_birth,
        u1_0.email,
        u1_0.is_active,
        u1_0.name,
        u1_0.password_hash,
        u1_0.role,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.username=?
2025-08-28 16:51:31 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        b1_0.id,
        b1_0.about,
        b1_0.audio_file_url,
        b1_0.author,
        b1_0.available_copies,
        b1_0.book_cover_url,
        b1_0.category_id,
        b1_0.created_at,
        b1_0.format,
        b1_0.isbn,
        b1_0.name,
        b1_0.pdf_file_url,
        b1_0.publication_year,
        b1_0.short_details,
        b1_0.total_copies,
        b1_0.updated_at 
    from
        books b1_0 
    where
        b1_0.id=?
2025-08-28 16:58:37 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.address,
        u1_0.created_at,
        u1_0.date_of_birth,
        u1_0.email,
        u1_0.is_active,
        u1_0.name,
        u1_0.password_hash,
        u1_0.role,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.username=?
2025-08-28 16:58:37 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    select
        b1_0.id,
        b1_0.about,
        b1_0.audio_file_url,
        b1_0.author,
        b1_0.available_copies,
        b1_0.book_cover_url,
        b1_0.category_id,
        b1_0.created_at,
        b1_0.format,
        b1_0.isbn,
        b1_0.name,
        b1_0.pdf_file_url,
        b1_0.publication_year,
        b1_0.short_details,
        b1_0.total_copies,
        b1_0.updated_at 
    from
        books b1_0 
    where
        b1_0.id=?
2025-08-28 16:58:53 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.address,
        u1_0.created_at,
        u1_0.date_of_birth,
        u1_0.email,
        u1_0.is_active,
        u1_0.name,
        u1_0.password_hash,
        u1_0.role,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.username=?
2025-08-28 16:58:53 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        b1_0.id,
        b1_0.about,
        b1_0.audio_file_url,
        b1_0.author,
        b1_0.available_copies,
        b1_0.book_cover_url,
        b1_0.category_id,
        b1_0.created_at,
        b1_0.format,
        b1_0.isbn,
        b1_0.name,
        b1_0.pdf_file_url,
        b1_0.publication_year,
        b1_0.short_details,
        b1_0.total_copies,
        b1_0.updated_at 
    from
        books b1_0 
    where
        b1_0.available_copies>? 
    fetch
        first ? rows only
2025-08-28 16:58:53 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.created_at,
        c1_0.description,
        c1_0.name,
        c1_0.updated_at 
    from
        categories c1_0 
    where
        c1_0.id=?
2025-08-28 16:58:53 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        b1_0.category_id,
        b1_0.id,
        b1_0.about,
        b1_0.audio_file_url,
        b1_0.author,
        b1_0.available_copies,
        b1_0.book_cover_url,
        b1_0.created_at,
        b1_0.format,
        b1_0.isbn,
        b1_0.name,
        b1_0.pdf_file_url,
        b1_0.publication_year,
        b1_0.short_details,
        b1_0.total_copies,
        b1_0.updated_at 
    from
        books b1_0 
    where
        b1_0.category_id=?
2025-08-28 16:58:53 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        r1_0.book_id,
        r1_0.id,
        r1_0.comment,
        r1_0.created_at,
        r1_0.rating,
        r1_0.updated_at,
        r1_0.user_id 
    from
        reviews r1_0 
    where
        r1_0.book_id=?
2025-08-28 16:58:53 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.created_at,
        c1_0.description,
        c1_0.name,
        c1_0.updated_at 
    from
        categories c1_0 
    where
        c1_0.id=?
2025-08-28 16:58:53 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        b1_0.category_id,
        b1_0.id,
        b1_0.about,
        b1_0.audio_file_url,
        b1_0.author,
        b1_0.available_copies,
        b1_0.book_cover_url,
        b1_0.created_at,
        b1_0.format,
        b1_0.isbn,
        b1_0.name,
        b1_0.pdf_file_url,
        b1_0.publication_year,
        b1_0.short_details,
        b1_0.total_copies,
        b1_0.updated_at 
    from
        books b1_0 
    where
        b1_0.category_id=?
2025-08-28 16:58:53 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        r1_0.book_id,
        r1_0.id,
        r1_0.comment,
        r1_0.created_at,
        r1_0.rating,
        r1_0.updated_at,
        r1_0.user_id 
    from
        reviews r1_0 
    where
        r1_0.book_id=?
2025-08-28 16:58:53 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.created_at,
        c1_0.description,
        c1_0.name,
        c1_0.updated_at 
    from
        categories c1_0 
    where
        c1_0.id=?
2025-08-28 16:58:53 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        b1_0.category_id,
        b1_0.id,
        b1_0.about,
        b1_0.audio_file_url,
        b1_0.author,
        b1_0.available_copies,
        b1_0.book_cover_url,
        b1_0.created_at,
        b1_0.format,
        b1_0.isbn,
        b1_0.name,
        b1_0.pdf_file_url,
        b1_0.publication_year,
        b1_0.short_details,
        b1_0.total_copies,
        b1_0.updated_at 
    from
        books b1_0 
    where
        b1_0.category_id=?
2025-08-28 16:58:53 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        r1_0.book_id,
        r1_0.id,
        r1_0.comment,
        r1_0.created_at,
        r1_0.rating,
        r1_0.updated_at,
        r1_0.user_id 
    from
        reviews r1_0 
    where
        r1_0.book_id=?
2025-08-28 16:58:53 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.created_at,
        c1_0.description,
        c1_0.name,
        c1_0.updated_at 
    from
        categories c1_0 
    where
        c1_0.id=?
2025-08-28 16:58:53 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        b1_0.category_id,
        b1_0.id,
        b1_0.about,
        b1_0.audio_file_url,
        b1_0.author,
        b1_0.available_copies,
        b1_0.book_cover_url,
        b1_0.created_at,
        b1_0.format,
        b1_0.isbn,
        b1_0.name,
        b1_0.pdf_file_url,
        b1_0.publication_year,
        b1_0.short_details,
        b1_0.total_copies,
        b1_0.updated_at 
    from
        books b1_0 
    where
        b1_0.category_id=?
2025-08-28 16:58:53 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        r1_0.book_id,
        r1_0.id,
        r1_0.comment,
        r1_0.created_at,
        r1_0.rating,
        r1_0.updated_at,
        r1_0.user_id 
    from
        reviews r1_0 
    where
        r1_0.book_id=?
2025-08-28 16:58:53 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.created_at,
        c1_0.description,
        c1_0.name,
        c1_0.updated_at 
    from
        categories c1_0 
    where
        c1_0.id=?
2025-08-28 16:58:53 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        b1_0.category_id,
        b1_0.id,
        b1_0.about,
        b1_0.audio_file_url,
        b1_0.author,
        b1_0.available_copies,
        b1_0.book_cover_url,
        b1_0.created_at,
        b1_0.format,
        b1_0.isbn,
        b1_0.name,
        b1_0.pdf_file_url,
        b1_0.publication_year,
        b1_0.short_details,
        b1_0.total_copies,
        b1_0.updated_at 
    from
        books b1_0 
    where
        b1_0.category_id=?
2025-08-28 16:58:53 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        r1_0.book_id,
        r1_0.id,
        r1_0.comment,
        r1_0.created_at,
        r1_0.rating,
        r1_0.updated_at,
        r1_0.user_id 
    from
        reviews r1_0 
    where
        r1_0.book_id=?
2025-08-28 16:58:53 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.created_at,
        c1_0.description,
        c1_0.name,
        c1_0.updated_at 
    from
        categories c1_0 
    where
        c1_0.id=?
2025-08-28 16:58:53 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        b1_0.category_id,
        b1_0.id,
        b1_0.about,
        b1_0.audio_file_url,
        b1_0.author,
        b1_0.available_copies,
        b1_0.book_cover_url,
        b1_0.created_at,
        b1_0.format,
        b1_0.isbn,
        b1_0.name,
        b1_0.pdf_file_url,
        b1_0.publication_year,
        b1_0.short_details,
        b1_0.total_copies,
        b1_0.updated_at 
    from
        books b1_0 
    where
        b1_0.category_id=?
2025-08-28 16:58:53 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        r1_0.book_id,
        r1_0.id,
        r1_0.comment,
        r1_0.created_at,
        r1_0.rating,
        r1_0.updated_at,
        r1_0.user_id 
    from
        reviews r1_0 
    where
        r1_0.book_id=?
2025-08-28 16:58:53 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.created_at,
        c1_0.description,
        c1_0.name,
        c1_0.updated_at 
    from
        categories c1_0 
    where
        c1_0.id=?
2025-08-28 16:58:53 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        b1_0.category_id,
        b1_0.id,
        b1_0.about,
        b1_0.audio_file_url,
        b1_0.author,
        b1_0.available_copies,
        b1_0.book_cover_url,
        b1_0.created_at,
        b1_0.format,
        b1_0.isbn,
        b1_0.name,
        b1_0.pdf_file_url,
        b1_0.publication_year,
        b1_0.short_details,
        b1_0.total_copies,
        b1_0.updated_at 
    from
        books b1_0 
    where
        b1_0.category_id=?
2025-08-28 16:58:53 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        r1_0.book_id,
        r1_0.id,
        r1_0.comment,
        r1_0.created_at,
        r1_0.rating,
        r1_0.updated_at,
        r1_0.user_id 
    from
        reviews r1_0 
    where
        r1_0.book_id=?
2025-08-28 16:58:53 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        r1_0.book_id,
        r1_0.id,
        r1_0.comment,
        r1_0.created_at,
        r1_0.rating,
        r1_0.updated_at,
        r1_0.user_id 
    from
        reviews r1_0 
    where
        r1_0.book_id=?
2025-08-28 16:58:53 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        r1_0.book_id,
        r1_0.id,
        r1_0.comment,
        r1_0.created_at,
        r1_0.rating,
        r1_0.updated_at,
        r1_0.user_id 
    from
        reviews r1_0 
    where
        r1_0.book_id=?
2025-08-28 16:58:53 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        r1_0.book_id,
        r1_0.id,
        r1_0.comment,
        r1_0.created_at,
        r1_0.rating,
        r1_0.updated_at,
        r1_0.user_id 
    from
        reviews r1_0 
    where
        r1_0.book_id=?
2025-08-28 16:58:53 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        r1_0.book_id,
        r1_0.id,
        r1_0.comment,
        r1_0.created_at,
        r1_0.rating,
        r1_0.updated_at,
        r1_0.user_id 
    from
        reviews r1_0 
    where
        r1_0.book_id=?
2025-08-28 17:21:28 [SpringApplicationShutdownHook] INFO  o.s.b.w.e.tomcat.GracefulShutdown - Commencing graceful shutdown. Waiting for active requests to complete
2025-08-28 17:21:28 [tomcat-shutdown] INFO  o.s.b.w.e.tomcat.GracefulShutdown - Graceful shutdown complete
2025-08-28 17:21:29 [SpringApplicationShutdownHook] INFO  o.s.o.j.LocalContainerEntityManagerFactoryBean - Closing JPA EntityManagerFactory for persistence unit 'default'
2025-08-28 17:21:29 [SpringApplicationShutdownHook] DEBUG org.hibernate.SQL - 
    drop table if exists admin_settings cascade 
2025-08-28 17:21:29 [SpringApplicationShutdownHook] DEBUG org.hibernate.SQL - 
    drop table if exists bookings cascade 
2025-08-28 17:21:29 [SpringApplicationShutdownHook] DEBUG org.hibernate.SQL - 
    drop table if exists books cascade 
2025-08-28 17:21:29 [SpringApplicationShutdownHook] DEBUG org.hibernate.SQL - 
    drop table if exists borrows cascade 
2025-08-28 17:21:29 [SpringApplicationShutdownHook] DEBUG org.hibernate.SQL - 
    drop table if exists categories cascade 
2025-08-28 17:21:29 [SpringApplicationShutdownHook] DEBUG org.hibernate.SQL - 
    drop table if exists donation_requests cascade 
2025-08-28 17:21:29 [SpringApplicationShutdownHook] DEBUG org.hibernate.SQL - 
    drop table if exists notifications cascade 
2025-08-28 17:21:29 [SpringApplicationShutdownHook] DEBUG org.hibernate.SQL - 
    drop table if exists reviews cascade 
2025-08-28 17:21:29 [SpringApplicationShutdownHook] DEBUG org.hibernate.SQL - 
    drop table if exists users cascade 
2025-08-28 17:21:29 [SpringApplicationShutdownHook] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Shutdown initiated...
2025-08-28 17:21:29 [SpringApplicationShutdownHook] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Shutdown completed.
2025-08-28 17:39:01 [main] INFO  c.l.m.LibraryManagementApplication - Starting LibraryManagementApplication using Java 24.0.2 with PID 10944 (C:\Users\c6-std14\Desktop\LMS 25\lms-backened-23\target\classes started by c6-std14 in C:\Users\c6-std14\Desktop\LMS 25\lms-backened-23)
2025-08-28 17:39:01 [main] DEBUG c.l.m.LibraryManagementApplication - Running with Spring Boot v3.5.4, Spring v6.2.9
2025-08-28 17:39:01 [main] INFO  c.l.m.LibraryManagementApplication - No active profile set, falling back to 1 default profile: "default"
2025-08-28 17:39:05 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Bootstrapping Spring Data JPA repositories in DEFAULT mode.
2025-08-28 17:39:05 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 181 ms. Found 9 JPA repository interfaces.
2025-08-28 17:39:07 [main] INFO  o.s.b.w.e.tomcat.TomcatWebServer - Tomcat initialized with port 8080 (http)
2025-08-28 17:39:07 [main] INFO  o.a.catalina.core.StandardService - Starting service [Tomcat]
2025-08-28 17:39:07 [main] INFO  o.a.catalina.core.StandardEngine - Starting Servlet engine: [Apache Tomcat/10.1.43]
2025-08-28 17:39:07 [main] INFO  o.a.c.c.C.[Tomcat].[localhost].[/] - Initializing Spring embedded WebApplicationContext
2025-08-28 17:39:07 [main] INFO  o.s.b.w.s.c.ServletWebServerApplicationContext - Root WebApplicationContext: initialization completed in 6438 ms
2025-08-28 17:39:08 [main] INFO  o.h.jpa.internal.util.LogHelper - HHH000204: Processing PersistenceUnitInfo [name: default]
2025-08-28 17:39:08 [main] INFO  org.hibernate.Version - HHH000412: Hibernate ORM core version 6.6.22.Final
2025-08-28 17:39:08 [main] INFO  o.h.c.i.RegionFactoryInitiator - HHH000026: Second-level cache disabled
2025-08-28 17:39:09 [main] INFO  o.s.o.j.p.SpringPersistenceUnitInfo - No LoadTimeWeaver setup: ignoring JPA class transformer
2025-08-28 17:39:09 [main] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Starting...
2025-08-28 17:39:10 [main] INFO  com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Added connection conn0: url=jdbc:h2:mem:testdb user=SA
2025-08-28 17:39:10 [main] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Start completed.
2025-08-28 17:39:10 [main] WARN  org.hibernate.orm.deprecation - HHH90000025: H2Dialect does not need to be specified explicitly using 'hibernate.dialect' (remove the property setting and it will be selected by default)
2025-08-28 17:39:10 [main] INFO  o.hibernate.orm.connections.pooling - HHH10001005: Database info:
	Database JDBC URL [Connecting through datasource 'HikariDataSource (HikariPool-1)']
	Database driver: undefined/unknown
	Database version: 2.3.232
	Autocommit mode: undefined/unknown
	Isolation level: undefined/unknown
	Minimum pool size: undefined/unknown
	Maximum pool size: undefined/unknown
2025-08-28 17:39:13 [main] INFO  o.h.e.t.j.p.i.JtaPlatformInitiator - HHH000489: No JTA platform available (set 'hibernate.transaction.jta.platform' to enable JTA platform integration)
2025-08-28 17:39:13 [main] DEBUG org.hibernate.SQL - 
    drop table if exists admin_settings cascade 
2025-08-28 17:39:13 [main] DEBUG org.hibernate.SQL - 
    drop table if exists bookings cascade 
2025-08-28 17:39:13 [main] DEBUG org.hibernate.SQL - 
    drop table if exists books cascade 
2025-08-28 17:39:13 [main] DEBUG org.hibernate.SQL - 
    drop table if exists borrows cascade 
2025-08-28 17:39:13 [main] DEBUG org.hibernate.SQL - 
    drop table if exists categories cascade 
2025-08-28 17:39:13 [main] DEBUG org.hibernate.SQL - 
    drop table if exists donation_requests cascade 
2025-08-28 17:39:13 [main] DEBUG org.hibernate.SQL - 
    drop table if exists notifications cascade 
2025-08-28 17:39:13 [main] DEBUG org.hibernate.SQL - 
    drop table if exists reviews cascade 
2025-08-28 17:39:13 [main] DEBUG org.hibernate.SQL - 
    drop table if exists users cascade 
2025-08-28 17:39:13 [main] DEBUG org.hibernate.SQL - 
    create table admin_settings (
        booking_days_limit integer,
        borrow_book_limit integer,
        borrow_day_limit integer,
        borrow_extend_limit integer,
        created_at timestamp(6),
        id bigint generated by default as identity,
        updated_at timestamp(6),
        primary key (id)
    )
2025-08-28 17:39:13 [main] DEBUG org.hibernate.SQL - 
    create table bookings (
        booking_date date not null,
        expected_available_date date not null,
        book_id bigint not null,
        created_at timestamp(6),
        id bigint generated by default as identity,
        updated_at timestamp(6),
        user_id bigint not null,
        status enum ('CANCELLED','EXPIRED','FULFILLED','PENDING') not null,
        primary key (id)
    )
2025-08-28 17:39:13 [main] DEBUG org.hibernate.SQL - 
    create table books (
        available_copies integer not null,
        publication_year integer,
        total_copies integer not null,
        category_id bigint not null,
        created_at timestamp(6),
        id bigint generated by default as identity,
        updated_at timestamp(6),
        about TEXT,
        audio_file_url varchar(255),
        author varchar(255) not null,
        book_cover_url varchar(255),
        isbn varchar(255) unique,
        name varchar(255) not null,
        pdf_file_url varchar(255),
        short_details varchar(255),
        format enum ('AUDIO_BOOK','E_BOOK','HARD_COPY') not null,
        primary key (id)
    )
2025-08-28 17:39:13 [main] DEBUG org.hibernate.SQL - 
    create table borrows (
        borrow_date date not null,
        due_date date not null,
        extension_count integer,
        return_date date,
        book_id bigint not null,
        created_at timestamp(6),
        id bigint generated by default as identity,
        updated_at timestamp(6),
        user_id bigint not null,
        status enum ('ACCEPTED','ACTIVE','OVERDUE','REJECTED','REQUESTED','RETURNED') not null,
        primary key (id)
    )
2025-08-28 17:39:13 [main] DEBUG org.hibernate.SQL - 
    create table categories (
        created_at timestamp(6),
        id bigint generated by default as identity,
        updated_at timestamp(6),
        description varchar(255),
        name varchar(255) not null unique,
        primary key (id)
    )
2025-08-28 17:39:13 [main] DEBUG org.hibernate.SQL - 
    create table donation_requests (
        created_at timestamp(6),
        id bigint generated by default as identity,
        updated_at timestamp(6),
        user_id bigint not null,
        admin_notes TEXT,
        author varchar(255) not null,
        book_title varchar(255) not null,
        description TEXT,
        isbn varchar(255),
        status enum ('APPROVED','PENDING','RECEIVED','REJECTED') not null,
        primary key (id)
    )
2025-08-28 17:39:13 [main] DEBUG org.hibernate.SQL - 
    create table notifications (
        read boolean not null,
        id bigint generated by default as identity,
        timestamp timestamp(6),
        message varchar(255),
        recipient varchar(255),
        primary key (id)
    )
2025-08-28 17:39:13 [main] DEBUG org.hibernate.SQL - 
    create table reviews (
        rating integer not null,
        book_id bigint not null,
        created_at timestamp(6),
        id bigint generated by default as identity,
        updated_at timestamp(6),
        user_id bigint not null,
        comment TEXT,
        primary key (id)
    )
2025-08-28 17:39:13 [main] DEBUG org.hibernate.SQL - 
    create table users (
        date_of_birth date,
        is_active boolean not null,
        created_at timestamp(6),
        id bigint generated by default as identity,
        updated_at timestamp(6),
        address varchar(255),
        email varchar(255) not null unique,
        name varchar(255) not null,
        password_hash varchar(255) not null,
        role varchar(255) not null,
        username varchar(255) not null unique,
        primary key (id)
    )
2025-08-28 17:39:13 [main] DEBUG org.hibernate.SQL - 
    alter table if exists bookings 
       add constraint FKm827phjjfy5m6q8vsjmi1gybv 
       foreign key (book_id) 
       references books
2025-08-28 17:39:13 [main] DEBUG org.hibernate.SQL - 
    alter table if exists bookings 
       add constraint FKeyog2oic85xg7hsu2je2lx3s6 
       foreign key (user_id) 
       references users
2025-08-28 17:39:13 [main] DEBUG org.hibernate.SQL - 
    alter table if exists books 
       add constraint FKleqa3hhc0uhfvurq6mil47xk0 
       foreign key (category_id) 
       references categories
2025-08-28 17:39:13 [main] DEBUG org.hibernate.SQL - 
    alter table if exists borrows 
       add constraint FK8789wjikihu9ocbhamiw789y9 
       foreign key (book_id) 
       references books
2025-08-28 17:39:13 [main] DEBUG org.hibernate.SQL - 
    alter table if exists borrows 
       add constraint FKd64ttskt7j96v1nqtpry3pp2a 
       foreign key (user_id) 
       references users
2025-08-28 17:39:13 [main] DEBUG org.hibernate.SQL - 
    alter table if exists donation_requests 
       add constraint FK42i2vj0hduc4jwntg1ute8v4g 
       foreign key (user_id) 
       references users
2025-08-28 17:39:13 [main] DEBUG org.hibernate.SQL - 
    alter table if exists reviews 
       add constraint FK6a9k6xvev80se5rreqvuqr7f9 
       foreign key (book_id) 
       references books
2025-08-28 17:39:13 [main] DEBUG org.hibernate.SQL - 
    alter table if exists reviews 
       add constraint FKcgy7qjc1r99dp117y9en6lxye 
       foreign key (user_id) 
       references users
2025-08-28 17:39:13 [main] INFO  o.s.o.j.LocalContainerEntityManagerFactoryBean - Initialized JPA EntityManagerFactory for persistence unit 'default'
2025-08-28 17:39:14 [main] INFO  o.s.d.j.r.query.QueryEnhancerFactory - Hibernate is in classpath; If applicable, HQL parser will be used.
2025-08-28 17:39:15 [main] DEBUG c.l.m.s.JwtAuthenticationFilter - Filter 'jwtAuthenticationFilter' configured for use
2025-08-28 17:39:15 [main] INFO  o.s.s.c.a.a.c.InitializeAuthenticationProviderBeanManagerConfigurer$InitializeAuthenticationProviderManagerConfigurer - Global AuthenticationManager configured with AuthenticationProvider bean with name authenticationProvider
2025-08-28 17:39:15 [main] WARN  o.s.s.c.a.a.c.InitializeUserDetailsBeanManagerConfigurer$InitializeUserDetailsManagerConfigurer - Global AuthenticationManager configured with an AuthenticationProvider bean. UserDetailsService beans will not be used by Spring Security for automatically configuring username/password login. Consider removing the AuthenticationProvider bean. Alternatively, consider using the UserDetailsService in a manually instantiated DaoAuthenticationProvider. If the current configuration is intentional, to turn off this warning, increase the logging level of 'org.springframework.security.config.annotation.authentication.configuration.InitializeUserDetailsBeanManagerConfigurer' to ERROR
2025-08-28 17:39:16 [main] INFO  o.s.b.a.e.web.EndpointLinksResolver - Exposing 2 endpoints beneath base path '/actuator'
2025-08-28 17:39:17 [main] WARN  o.s.b.a.o.j.JpaBaseConfiguration$JpaWebConfiguration - spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
2025-08-28 17:39:18 [main] INFO  o.s.b.a.h.H2ConsoleAutoConfiguration - H2 console available at '/h2-console'. Database available at 'jdbc:h2:mem:testdb'
2025-08-28 17:39:18 [main] INFO  o.s.b.w.e.tomcat.TomcatWebServer - Tomcat started on port 8080 (http) with context path '/'
2025-08-28 17:39:18 [main] INFO  c.l.m.LibraryManagementApplication - Started LibraryManagementApplication in 19.177 seconds (process running for 20.57)
2025-08-28 17:39:30 [http-nio-8080-exec-1] INFO  o.a.c.c.C.[Tomcat].[localhost].[/] - Initializing Spring DispatcherServlet 'dispatcherServlet'
2025-08-28 17:39:30 [http-nio-8080-exec-1] INFO  o.s.web.servlet.DispatcherServlet - Initializing Servlet 'dispatcherServlet'
2025-08-28 17:39:30 [http-nio-8080-exec-1] INFO  o.s.web.servlet.DispatcherServlet - Completed initialization in 3 ms
2025-08-28 17:39:38 [http-nio-8080-exec-3] INFO  o.s.api.AbstractOpenApiResource - Init duration for springdoc-openapi is: 6973 ms
2025-08-28 17:39:46 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.address,
        u1_0.created_at,
        u1_0.date_of_birth,
        u1_0.email,
        u1_0.is_active,
        u1_0.name,
        u1_0.password_hash,
        u1_0.role,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.email=?
2025-08-28 17:39:47 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.address,
        u1_0.created_at,
        u1_0.date_of_birth,
        u1_0.email,
        u1_0.is_active,
        u1_0.name,
        u1_0.password_hash,
        u1_0.role,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.username=?
2025-08-28 17:39:47 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    insert 
    into
        users
        (address, created_at, date_of_birth, email, is_active, name, password_hash, role, updated_at, username, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, default)
2025-08-28 17:40:42 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.address,
        u1_0.created_at,
        u1_0.date_of_birth,
        u1_0.email,
        u1_0.is_active,
        u1_0.name,
        u1_0.password_hash,
        u1_0.role,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.username=?
2025-08-28 17:40:42 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    select
        b1_0.id,
        b1_0.about,
        b1_0.audio_file_url,
        b1_0.author,
        b1_0.available_copies,
        b1_0.book_cover_url,
        b1_0.category_id,
        b1_0.created_at,
        b1_0.format,
        b1_0.isbn,
        b1_0.name,
        b1_0.pdf_file_url,
        b1_0.publication_year,
        b1_0.short_details,
        b1_0.total_copies,
        b1_0.updated_at 
    from
        books b1_0 
    where
        upper(b1_0.name) like upper(?) escape '\' 
        or upper(b1_0.author) like upper(?) escape '\' 
        or upper(b1_0.isbn) like upper(?) escape '\' 
    fetch
        first ? rows only
2025-08-28 17:40:42 [http-nio-8080-exec-7] WARN  o.s.d.w.c.SpringDataJacksonConfiguration$PageModule$WarningLoggingModifier - Serializing PageImpl instances as-is is not supported, meaning that there is no guarantee about the stability of the resulting JSON structure!
	For a stable JSON structure, please use Spring Data's PagedModel (globally via @EnableSpringDataWebSupport(pageSerializationMode = VIA_DTO))
	or Spring HATEOAS and Spring Data's PagedResourcesAssembler as documented in https://docs.spring.io/spring-data/commons/reference/repositories/core-extensions.html#core.web.pageables.

2025-08-28 18:00:06 [HikariPool-1:housekeeper] WARN  com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Thread starvation or clock leap detected (housekeeper delta=19m26s626ms321µs533ns).
2025-08-28 18:54:49 [SpringApplicationShutdownHook] INFO  o.s.b.w.e.tomcat.GracefulShutdown - Commencing graceful shutdown. Waiting for active requests to complete
2025-08-28 18:54:49 [tomcat-shutdown] INFO  o.s.b.w.e.tomcat.GracefulShutdown - Graceful shutdown complete
2025-08-28 18:54:49 [SpringApplicationShutdownHook] INFO  o.s.o.j.LocalContainerEntityManagerFactoryBean - Closing JPA EntityManagerFactory for persistence unit 'default'
2025-08-28 18:54:49 [SpringApplicationShutdownHook] DEBUG org.hibernate.SQL - 
    drop table if exists admin_settings cascade 
2025-08-28 18:54:49 [SpringApplicationShutdownHook] DEBUG org.hibernate.SQL - 
    drop table if exists bookings cascade 
2025-08-28 18:54:49 [SpringApplicationShutdownHook] DEBUG org.hibernate.SQL - 
    drop table if exists books cascade 
2025-08-28 18:54:49 [SpringApplicationShutdownHook] DEBUG org.hibernate.SQL - 
    drop table if exists borrows cascade 
2025-08-28 18:54:49 [SpringApplicationShutdownHook] DEBUG org.hibernate.SQL - 
    drop table if exists categories cascade 
2025-08-28 18:54:49 [SpringApplicationShutdownHook] DEBUG org.hibernate.SQL - 
    drop table if exists donation_requests cascade 
2025-08-28 18:54:49 [SpringApplicationShutdownHook] DEBUG org.hibernate.SQL - 
    drop table if exists notifications cascade 
2025-08-28 18:54:49 [SpringApplicationShutdownHook] DEBUG org.hibernate.SQL - 
    drop table if exists reviews cascade 
2025-08-28 18:54:49 [SpringApplicationShutdownHook] DEBUG org.hibernate.SQL - 
    drop table if exists users cascade 
2025-08-28 18:54:49 [SpringApplicationShutdownHook] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Shutdown initiated...
2025-08-28 18:54:49 [SpringApplicationShutdownHook] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Shutdown completed.
2025-08-28 19:56:25 [main] INFO  c.l.m.LibraryManagementApplication - Starting LibraryManagementApplication using Java 24.0.2 with PID 14484 (C:\Users\c6-std14\Desktop\LMS 28\lms-backened-23\target\classes started by c6-std14 in C:\Users\c6-std14\Desktop\LMS 28\lms-backened-23)
2025-08-28 19:56:25 [main] DEBUG c.l.m.LibraryManagementApplication - Running with Spring Boot v3.5.4, Spring v6.2.9
2025-08-28 19:56:25 [main] INFO  c.l.m.LibraryManagementApplication - No active profile set, falling back to 1 default profile: "default"
2025-08-28 19:56:37 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Bootstrapping Spring Data JPA repositories in DEFAULT mode.
2025-08-28 19:56:38 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 207 ms. Found 9 JPA repository interfaces.
2025-08-28 19:56:40 [main] INFO  o.s.b.w.e.tomcat.TomcatWebServer - Tomcat initialized with port 8080 (http)
2025-08-28 19:56:40 [main] INFO  o.a.catalina.core.StandardService - Starting service [Tomcat]
2025-08-28 19:56:40 [main] INFO  o.a.catalina.core.StandardEngine - Starting Servlet engine: [Apache Tomcat/10.1.43]
2025-08-28 19:56:40 [main] INFO  o.a.c.c.C.[Tomcat].[localhost].[/] - Initializing Spring embedded WebApplicationContext
2025-08-28 19:56:40 [main] INFO  o.s.b.w.s.c.ServletWebServerApplicationContext - Root WebApplicationContext: initialization completed in 15043 ms
2025-08-28 19:56:41 [main] INFO  o.h.jpa.internal.util.LogHelper - HHH000204: Processing PersistenceUnitInfo [name: default]
2025-08-28 19:56:42 [main] INFO  org.hibernate.Version - HHH000412: Hibernate ORM core version 6.6.22.Final
2025-08-28 19:56:42 [main] INFO  o.h.c.i.RegionFactoryInitiator - HHH000026: Second-level cache disabled
2025-08-28 19:56:43 [main] INFO  o.s.o.j.p.SpringPersistenceUnitInfo - No LoadTimeWeaver setup: ignoring JPA class transformer
2025-08-28 19:56:43 [main] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Starting...
2025-08-28 19:56:44 [main] INFO  com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Added connection conn0: url=jdbc:h2:mem:testdb user=SA
2025-08-28 19:56:44 [main] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Start completed.
2025-08-28 19:56:44 [main] WARN  org.hibernate.orm.deprecation - HHH90000025: H2Dialect does not need to be specified explicitly using 'hibernate.dialect' (remove the property setting and it will be selected by default)
2025-08-28 19:56:44 [main] INFO  o.hibernate.orm.connections.pooling - HHH10001005: Database info:
	Database JDBC URL [Connecting through datasource 'HikariDataSource (HikariPool-1)']
	Database driver: undefined/unknown
	Database version: 2.3.232
	Autocommit mode: undefined/unknown
	Isolation level: undefined/unknown
	Minimum pool size: undefined/unknown
	Maximum pool size: undefined/unknown
2025-08-28 19:56:47 [main] INFO  o.h.e.t.j.p.i.JtaPlatformInitiator - HHH000489: No JTA platform available (set 'hibernate.transaction.jta.platform' to enable JTA platform integration)
2025-08-28 19:56:47 [main] DEBUG org.hibernate.SQL - 
    drop table if exists admin_settings cascade 
2025-08-28 19:56:47 [main] DEBUG org.hibernate.SQL - 
    drop table if exists bookings cascade 
2025-08-28 19:56:47 [main] DEBUG org.hibernate.SQL - 
    drop table if exists books cascade 
2025-08-28 19:56:47 [main] DEBUG org.hibernate.SQL - 
    drop table if exists borrows cascade 
2025-08-28 19:56:47 [main] DEBUG org.hibernate.SQL - 
    drop table if exists categories cascade 
2025-08-28 19:56:47 [main] DEBUG org.hibernate.SQL - 
    drop table if exists donation_requests cascade 
2025-08-28 19:56:47 [main] DEBUG org.hibernate.SQL - 
    drop table if exists notifications cascade 
2025-08-28 19:56:47 [main] DEBUG org.hibernate.SQL - 
    drop table if exists reviews cascade 
2025-08-28 19:56:47 [main] DEBUG org.hibernate.SQL - 
    drop table if exists users cascade 
2025-08-28 19:56:47 [main] DEBUG org.hibernate.SQL - 
    create table admin_settings (
        booking_days_limit integer,
        borrow_book_limit integer,
        borrow_day_limit integer,
        borrow_extend_limit integer,
        created_at timestamp(6),
        id bigint generated by default as identity,
        updated_at timestamp(6),
        primary key (id)
    )
2025-08-28 19:56:47 [main] DEBUG org.hibernate.SQL - 
    create table bookings (
        booking_date date not null,
        expected_available_date date not null,
        book_id bigint not null,
        created_at timestamp(6),
        id bigint generated by default as identity,
        updated_at timestamp(6),
        user_id bigint not null,
        status enum ('CANCELLED','EXPIRED','FULFILLED','PENDING') not null,
        primary key (id)
    )
2025-08-28 19:56:47 [main] DEBUG org.hibernate.SQL - 
    create table books (
        available_copies integer not null,
        publication_year integer,
        total_copies integer not null,
        category_id bigint not null,
        created_at timestamp(6),
        id bigint generated by default as identity,
        updated_at timestamp(6),
        about TEXT,
        audio_file_url varchar(255),
        author varchar(255) not null,
        book_cover_url varchar(255),
        isbn varchar(255) unique,
        name varchar(255) not null,
        pdf_file_url varchar(255),
        short_details varchar(255),
        format enum ('AUDIO_BOOK','E_BOOK','HARD_COPY') not null,
        primary key (id)
    )
2025-08-28 19:56:47 [main] DEBUG org.hibernate.SQL - 
    create table borrows (
        borrow_date date not null,
        due_date date not null,
        extension_count integer,
        return_date date,
        book_id bigint not null,
        created_at timestamp(6),
        id bigint generated by default as identity,
        updated_at timestamp(6),
        user_id bigint not null,
        status enum ('ACCEPTED','ACTIVE','OVERDUE','REJECTED','REQUESTED','RETURNED') not null,
        primary key (id)
    )
2025-08-28 19:56:47 [main] DEBUG org.hibernate.SQL - 
    create table categories (
        created_at timestamp(6),
        id bigint generated by default as identity,
        updated_at timestamp(6),
        description varchar(255),
        name varchar(255) not null unique,
        primary key (id)
    )
2025-08-28 19:56:47 [main] DEBUG org.hibernate.SQL - 
    create table donation_requests (
        created_at timestamp(6),
        id bigint generated by default as identity,
        updated_at timestamp(6),
        user_id bigint not null,
        admin_notes TEXT,
        author varchar(255) not null,
        book_title varchar(255) not null,
        description TEXT,
        isbn varchar(255),
        status enum ('APPROVED','PENDING','RECEIVED','REJECTED') not null,
        primary key (id)
    )
2025-08-28 19:56:47 [main] DEBUG org.hibernate.SQL - 
    create table notifications (
        read boolean not null,
        id bigint generated by default as identity,
        timestamp timestamp(6),
        message varchar(255),
        recipient varchar(255),
        primary key (id)
    )
2025-08-28 19:56:47 [main] DEBUG org.hibernate.SQL - 
    create table reviews (
        rating integer not null,
        book_id bigint not null,
        created_at timestamp(6),
        id bigint generated by default as identity,
        updated_at timestamp(6),
        user_id bigint not null,
        comment TEXT,
        primary key (id)
    )
2025-08-28 19:56:47 [main] DEBUG org.hibernate.SQL - 
    create table users (
        date_of_birth date,
        is_active boolean not null,
        created_at timestamp(6),
        id bigint generated by default as identity,
        updated_at timestamp(6),
        address varchar(255),
        email varchar(255) not null unique,
        name varchar(255) not null,
        password_hash varchar(255) not null,
        role varchar(255) not null,
        username varchar(255) not null unique,
        primary key (id)
    )
2025-08-28 19:56:47 [main] DEBUG org.hibernate.SQL - 
    alter table if exists bookings 
       add constraint FKm827phjjfy5m6q8vsjmi1gybv 
       foreign key (book_id) 
       references books
2025-08-28 19:56:47 [main] DEBUG org.hibernate.SQL - 
    alter table if exists bookings 
       add constraint FKeyog2oic85xg7hsu2je2lx3s6 
       foreign key (user_id) 
       references users
2025-08-28 19:56:47 [main] DEBUG org.hibernate.SQL - 
    alter table if exists books 
       add constraint FKleqa3hhc0uhfvurq6mil47xk0 
       foreign key (category_id) 
       references categories
2025-08-28 19:56:47 [main] DEBUG org.hibernate.SQL - 
    alter table if exists borrows 
       add constraint FK8789wjikihu9ocbhamiw789y9 
       foreign key (book_id) 
       references books
2025-08-28 19:56:47 [main] DEBUG org.hibernate.SQL - 
    alter table if exists borrows 
       add constraint FKd64ttskt7j96v1nqtpry3pp2a 
       foreign key (user_id) 
       references users
2025-08-28 19:56:47 [main] DEBUG org.hibernate.SQL - 
    alter table if exists donation_requests 
       add constraint FK42i2vj0hduc4jwntg1ute8v4g 
       foreign key (user_id) 
       references users
2025-08-28 19:56:47 [main] DEBUG org.hibernate.SQL - 
    alter table if exists reviews 
       add constraint FK6a9k6xvev80se5rreqvuqr7f9 
       foreign key (book_id) 
       references books
2025-08-28 19:56:47 [main] DEBUG org.hibernate.SQL - 
    alter table if exists reviews 
       add constraint FKcgy7qjc1r99dp117y9en6lxye 
       foreign key (user_id) 
       references users
2025-08-28 19:56:47 [main] INFO  o.s.o.j.LocalContainerEntityManagerFactoryBean - Initialized JPA EntityManagerFactory for persistence unit 'default'
2025-08-28 19:56:48 [main] INFO  o.s.d.j.r.query.QueryEnhancerFactory - Hibernate is in classpath; If applicable, HQL parser will be used.
2025-08-28 19:56:50 [main] DEBUG c.l.m.s.JwtAuthenticationFilter - Filter 'jwtAuthenticationFilter' configured for use
2025-08-28 19:56:50 [main] INFO  o.s.s.c.a.a.c.InitializeAuthenticationProviderBeanManagerConfigurer$InitializeAuthenticationProviderManagerConfigurer - Global AuthenticationManager configured with AuthenticationProvider bean with name authenticationProvider
2025-08-28 19:56:50 [main] WARN  o.s.s.c.a.a.c.InitializeUserDetailsBeanManagerConfigurer$InitializeUserDetailsManagerConfigurer - Global AuthenticationManager configured with an AuthenticationProvider bean. UserDetailsService beans will not be used by Spring Security for automatically configuring username/password login. Consider removing the AuthenticationProvider bean. Alternatively, consider using the UserDetailsService in a manually instantiated DaoAuthenticationProvider. If the current configuration is intentional, to turn off this warning, increase the logging level of 'org.springframework.security.config.annotation.authentication.configuration.InitializeUserDetailsBeanManagerConfigurer' to ERROR
2025-08-28 19:56:52 [main] INFO  o.s.b.a.e.web.EndpointLinksResolver - Exposing 2 endpoints beneath base path '/actuator'
2025-08-28 19:56:52 [main] WARN  o.s.b.a.o.j.JpaBaseConfiguration$JpaWebConfiguration - spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
2025-08-28 19:56:53 [main] INFO  o.s.b.a.h.H2ConsoleAutoConfiguration - H2 console available at '/h2-console'. Database available at 'jdbc:h2:mem:testdb'
2025-08-28 19:56:54 [main] INFO  o.s.b.w.e.tomcat.TomcatWebServer - Tomcat started on port 8080 (http) with context path '/'
2025-08-28 19:56:54 [main] INFO  c.l.m.LibraryManagementApplication - Started LibraryManagementApplication in 29.978 seconds (process running for 31.607)
2025-08-28 19:57:00 [http-nio-8080-exec-1] INFO  o.a.c.c.C.[Tomcat].[localhost].[/] - Initializing Spring DispatcherServlet 'dispatcherServlet'
2025-08-28 19:57:00 [http-nio-8080-exec-1] INFO  o.s.web.servlet.DispatcherServlet - Initializing Servlet 'dispatcherServlet'
2025-08-28 19:57:00 [http-nio-8080-exec-1] INFO  o.s.web.servlet.DispatcherServlet - Completed initialization in 2 ms
2025-08-28 19:57:07 [http-nio-8080-exec-4] INFO  o.s.api.AbstractOpenApiResource - Init duration for springdoc-openapi is: 6582 ms
2025-08-28 19:57:51 [SpringApplicationShutdownHook] INFO  o.s.b.w.e.tomcat.GracefulShutdown - Commencing graceful shutdown. Waiting for active requests to complete
2025-08-28 19:57:51 [tomcat-shutdown] INFO  o.s.b.w.e.tomcat.GracefulShutdown - Graceful shutdown complete
2025-08-28 19:57:51 [SpringApplicationShutdownHook] INFO  o.s.o.j.LocalContainerEntityManagerFactoryBean - Closing JPA EntityManagerFactory for persistence unit 'default'
2025-08-28 19:57:51 [SpringApplicationShutdownHook] DEBUG org.hibernate.SQL - 
    drop table if exists admin_settings cascade 
2025-08-28 19:57:51 [SpringApplicationShutdownHook] DEBUG org.hibernate.SQL - 
    drop table if exists bookings cascade 
2025-08-28 19:57:51 [SpringApplicationShutdownHook] DEBUG org.hibernate.SQL - 
    drop table if exists books cascade 
2025-08-28 19:57:51 [SpringApplicationShutdownHook] DEBUG org.hibernate.SQL - 
    drop table if exists borrows cascade 
2025-08-28 19:57:51 [SpringApplicationShutdownHook] DEBUG org.hibernate.SQL - 
    drop table if exists categories cascade 
2025-08-28 19:57:51 [SpringApplicationShutdownHook] DEBUG org.hibernate.SQL - 
    drop table if exists donation_requests cascade 
2025-08-28 19:57:51 [SpringApplicationShutdownHook] DEBUG org.hibernate.SQL - 
    drop table if exists notifications cascade 
2025-08-28 19:57:51 [SpringApplicationShutdownHook] DEBUG org.hibernate.SQL - 
    drop table if exists reviews cascade 
2025-08-28 19:57:51 [SpringApplicationShutdownHook] DEBUG org.hibernate.SQL - 
    drop table if exists users cascade 
2025-08-28 19:57:51 [SpringApplicationShutdownHook] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Shutdown initiated...
2025-08-28 19:57:51 [SpringApplicationShutdownHook] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Shutdown completed.
2025-08-28 19:58:39 [main] INFO  c.l.m.LibraryManagementApplication - Starting LibraryManagementApplication using Java 24.0.2 with PID 10472 (C:\Users\c6-std14\Desktop\LMS 28\lms-backened-23\target\classes started by c6-std14 in C:\Users\c6-std14\Desktop\LMS 28\lms-backened-23)
2025-08-28 19:58:39 [main] DEBUG c.l.m.LibraryManagementApplication - Running with Spring Boot v3.5.4, Spring v6.2.9
2025-08-28 19:58:39 [main] INFO  c.l.m.LibraryManagementApplication - No active profile set, falling back to 1 default profile: "default"
2025-08-28 19:58:42 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Bootstrapping Spring Data JPA repositories in DEFAULT mode.
2025-08-28 19:58:42 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 187 ms. Found 9 JPA repository interfaces.
2025-08-28 19:58:44 [main] INFO  o.s.b.w.e.tomcat.TomcatWebServer - Tomcat initialized with port 8080 (http)
2025-08-28 19:58:44 [main] INFO  o.a.catalina.core.StandardService - Starting service [Tomcat]
2025-08-28 19:58:44 [main] INFO  o.a.catalina.core.StandardEngine - Starting Servlet engine: [Apache Tomcat/10.1.43]
2025-08-28 19:58:44 [main] INFO  o.a.c.c.C.[Tomcat].[localhost].[/] - Initializing Spring embedded WebApplicationContext
2025-08-28 19:58:44 [main] INFO  o.s.b.w.s.c.ServletWebServerApplicationContext - Root WebApplicationContext: initialization completed in 4612 ms
2025-08-28 19:58:44 [main] INFO  o.h.jpa.internal.util.LogHelper - HHH000204: Processing PersistenceUnitInfo [name: default]
2025-08-28 19:58:45 [main] INFO  org.hibernate.Version - HHH000412: Hibernate ORM core version 6.6.22.Final
2025-08-28 19:58:45 [main] INFO  o.h.c.i.RegionFactoryInitiator - HHH000026: Second-level cache disabled
2025-08-28 19:58:45 [main] INFO  o.s.o.j.p.SpringPersistenceUnitInfo - No LoadTimeWeaver setup: ignoring JPA class transformer
2025-08-28 19:58:45 [main] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Starting...
2025-08-28 19:58:46 [main] INFO  com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Added connection conn0: url=jdbc:h2:mem:testdb user=SA
2025-08-28 19:58:46 [main] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Start completed.
2025-08-28 19:58:46 [main] WARN  org.hibernate.orm.deprecation - HHH90000025: H2Dialect does not need to be specified explicitly using 'hibernate.dialect' (remove the property setting and it will be selected by default)
2025-08-28 19:58:46 [main] INFO  o.hibernate.orm.connections.pooling - HHH10001005: Database info:
	Database JDBC URL [Connecting through datasource 'HikariDataSource (HikariPool-1)']
	Database driver: undefined/unknown
	Database version: 2.3.232
	Autocommit mode: undefined/unknown
	Isolation level: undefined/unknown
	Minimum pool size: undefined/unknown
	Maximum pool size: undefined/unknown
2025-08-28 19:58:48 [main] INFO  o.h.e.t.j.p.i.JtaPlatformInitiator - HHH000489: No JTA platform available (set 'hibernate.transaction.jta.platform' to enable JTA platform integration)
2025-08-28 19:58:48 [main] DEBUG org.hibernate.SQL - 
    drop table if exists admin_settings cascade 
2025-08-28 19:58:48 [main] DEBUG org.hibernate.SQL - 
    drop table if exists bookings cascade 
2025-08-28 19:58:48 [main] DEBUG org.hibernate.SQL - 
    drop table if exists books cascade 
2025-08-28 19:58:48 [main] DEBUG org.hibernate.SQL - 
    drop table if exists borrows cascade 
2025-08-28 19:58:48 [main] DEBUG org.hibernate.SQL - 
    drop table if exists categories cascade 
2025-08-28 19:58:48 [main] DEBUG org.hibernate.SQL - 
    drop table if exists donation_requests cascade 
2025-08-28 19:58:48 [main] DEBUG org.hibernate.SQL - 
    drop table if exists notifications cascade 
2025-08-28 19:58:48 [main] DEBUG org.hibernate.SQL - 
    drop table if exists reviews cascade 
2025-08-28 19:58:48 [main] DEBUG org.hibernate.SQL - 
    drop table if exists users cascade 
2025-08-28 19:58:48 [main] DEBUG org.hibernate.SQL - 
    create table admin_settings (
        booking_days_limit integer,
        borrow_book_limit integer,
        borrow_day_limit integer,
        borrow_extend_limit integer,
        created_at timestamp(6),
        id bigint generated by default as identity,
        updated_at timestamp(6),
        primary key (id)
    )
2025-08-28 19:58:48 [main] DEBUG org.hibernate.SQL - 
    create table bookings (
        booking_date date not null,
        expected_available_date date not null,
        book_id bigint not null,
        created_at timestamp(6),
        id bigint generated by default as identity,
        updated_at timestamp(6),
        user_id bigint not null,
        status enum ('CANCELLED','EXPIRED','FULFILLED','PENDING') not null,
        primary key (id)
    )
2025-08-28 19:58:48 [main] DEBUG org.hibernate.SQL - 
    create table books (
        available_copies integer not null,
        publication_year integer,
        total_copies integer not null,
        category_id bigint not null,
        created_at timestamp(6),
        id bigint generated by default as identity,
        updated_at timestamp(6),
        about TEXT,
        audio_file_url varchar(255),
        author varchar(255) not null,
        book_cover_url varchar(255),
        isbn varchar(255) unique,
        name varchar(255) not null,
        pdf_file_url varchar(255),
        short_details varchar(255),
        format enum ('AUDIO_BOOK','E_BOOK','HARD_COPY') not null,
        primary key (id)
    )
2025-08-28 19:58:48 [main] DEBUG org.hibernate.SQL - 
    create table borrows (
        borrow_date date not null,
        due_date date not null,
        extension_count integer,
        return_date date,
        book_id bigint not null,
        created_at timestamp(6),
        id bigint generated by default as identity,
        updated_at timestamp(6),
        user_id bigint not null,
        status enum ('ACCEPTED','ACTIVE','OVERDUE','REJECTED','REQUESTED','RETURNED') not null,
        primary key (id)
    )
2025-08-28 19:58:48 [main] DEBUG org.hibernate.SQL - 
    create table categories (
        created_at timestamp(6),
        id bigint generated by default as identity,
        updated_at timestamp(6),
        description varchar(255),
        name varchar(255) not null unique,
        primary key (id)
    )
2025-08-28 19:58:48 [main] DEBUG org.hibernate.SQL - 
    create table donation_requests (
        created_at timestamp(6),
        id bigint generated by default as identity,
        updated_at timestamp(6),
        user_id bigint not null,
        admin_notes TEXT,
        author varchar(255) not null,
        book_title varchar(255) not null,
        description TEXT,
        isbn varchar(255),
        status enum ('APPROVED','PENDING','RECEIVED','REJECTED') not null,
        primary key (id)
    )
2025-08-28 19:58:48 [main] DEBUG org.hibernate.SQL - 
    create table notifications (
        read boolean not null,
        id bigint generated by default as identity,
        timestamp timestamp(6),
        message varchar(255),
        recipient varchar(255),
        primary key (id)
    )
2025-08-28 19:58:48 [main] DEBUG org.hibernate.SQL - 
    create table reviews (
        rating integer not null,
        book_id bigint not null,
        created_at timestamp(6),
        id bigint generated by default as identity,
        updated_at timestamp(6),
        user_id bigint not null,
        comment TEXT,
        primary key (id)
    )
2025-08-28 19:58:48 [main] DEBUG org.hibernate.SQL - 
    create table users (
        date_of_birth date,
        is_active boolean not null,
        created_at timestamp(6),
        id bigint generated by default as identity,
        updated_at timestamp(6),
        address varchar(255),
        email varchar(255) not null unique,
        name varchar(255) not null,
        password_hash varchar(255) not null,
        role varchar(255) not null,
        username varchar(255) not null unique,
        primary key (id)
    )
2025-08-28 19:58:48 [main] DEBUG org.hibernate.SQL - 
    alter table if exists bookings 
       add constraint FKm827phjjfy5m6q8vsjmi1gybv 
       foreign key (book_id) 
       references books
2025-08-28 19:58:48 [main] DEBUG org.hibernate.SQL - 
    alter table if exists bookings 
       add constraint FKeyog2oic85xg7hsu2je2lx3s6 
       foreign key (user_id) 
       references users
2025-08-28 19:58:48 [main] DEBUG org.hibernate.SQL - 
    alter table if exists books 
       add constraint FKleqa3hhc0uhfvurq6mil47xk0 
       foreign key (category_id) 
       references categories
2025-08-28 19:58:48 [main] DEBUG org.hibernate.SQL - 
    alter table if exists borrows 
       add constraint FK8789wjikihu9ocbhamiw789y9 
       foreign key (book_id) 
       references books
2025-08-28 19:58:48 [main] DEBUG org.hibernate.SQL - 
    alter table if exists borrows 
       add constraint FKd64ttskt7j96v1nqtpry3pp2a 
       foreign key (user_id) 
       references users
2025-08-28 19:58:48 [main] DEBUG org.hibernate.SQL - 
    alter table if exists donation_requests 
       add constraint FK42i2vj0hduc4jwntg1ute8v4g 
       foreign key (user_id) 
       references users
2025-08-28 19:58:48 [main] DEBUG org.hibernate.SQL - 
    alter table if exists reviews 
       add constraint FK6a9k6xvev80se5rreqvuqr7f9 
       foreign key (book_id) 
       references books
2025-08-28 19:58:48 [main] DEBUG org.hibernate.SQL - 
    alter table if exists reviews 
       add constraint FKcgy7qjc1r99dp117y9en6lxye 
       foreign key (user_id) 
       references users
2025-08-28 19:58:48 [main] INFO  o.s.o.j.LocalContainerEntityManagerFactoryBean - Initialized JPA EntityManagerFactory for persistence unit 'default'
2025-08-28 19:58:48 [main] INFO  o.s.d.j.r.query.QueryEnhancerFactory - Hibernate is in classpath; If applicable, HQL parser will be used.
2025-08-28 19:58:50 [main] DEBUG c.l.m.s.JwtAuthenticationFilter - Filter 'jwtAuthenticationFilter' configured for use
2025-08-28 19:58:50 [main] INFO  o.s.s.c.a.a.c.InitializeAuthenticationProviderBeanManagerConfigurer$InitializeAuthenticationProviderManagerConfigurer - Global AuthenticationManager configured with AuthenticationProvider bean with name authenticationProvider
2025-08-28 19:58:50 [main] WARN  o.s.s.c.a.a.c.InitializeUserDetailsBeanManagerConfigurer$InitializeUserDetailsManagerConfigurer - Global AuthenticationManager configured with an AuthenticationProvider bean. UserDetailsService beans will not be used by Spring Security for automatically configuring username/password login. Consider removing the AuthenticationProvider bean. Alternatively, consider using the UserDetailsService in a manually instantiated DaoAuthenticationProvider. If the current configuration is intentional, to turn off this warning, increase the logging level of 'org.springframework.security.config.annotation.authentication.configuration.InitializeUserDetailsBeanManagerConfigurer' to ERROR
2025-08-28 19:58:51 [main] INFO  o.s.b.a.e.web.EndpointLinksResolver - Exposing 2 endpoints beneath base path '/actuator'
2025-08-28 19:58:51 [main] WARN  o.s.b.a.o.j.JpaBaseConfiguration$JpaWebConfiguration - spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
2025-08-28 19:58:52 [main] INFO  o.s.b.a.h.H2ConsoleAutoConfiguration - H2 console available at '/h2-console'. Database available at 'jdbc:h2:mem:testdb'
2025-08-28 19:58:52 [main] INFO  o.s.b.w.e.tomcat.TomcatWebServer - Tomcat started on port 8080 (http) with context path '/'
2025-08-28 19:58:53 [main] INFO  c.l.m.LibraryManagementApplication - Started LibraryManagementApplication in 14.336 seconds (process running for 15.146)
2025-08-28 19:59:06 [http-nio-8080-exec-1] INFO  o.a.c.c.C.[Tomcat].[localhost].[/] - Initializing Spring DispatcherServlet 'dispatcherServlet'
2025-08-28 19:59:06 [http-nio-8080-exec-1] INFO  o.s.web.servlet.DispatcherServlet - Initializing Servlet 'dispatcherServlet'
2025-08-28 19:59:06 [http-nio-8080-exec-1] INFO  o.s.web.servlet.DispatcherServlet - Completed initialization in 2 ms
2025-08-28 19:59:14 [http-nio-8080-exec-4] INFO  o.s.api.AbstractOpenApiResource - Init duration for springdoc-openapi is: 7229 ms
2025-08-28 19:59:37 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.address,
        u1_0.created_at,
        u1_0.date_of_birth,
        u1_0.email,
        u1_0.is_active,
        u1_0.name,
        u1_0.password_hash,
        u1_0.role,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.username=?
2025-08-28 20:01:27 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.address,
        u1_0.created_at,
        u1_0.date_of_birth,
        u1_0.email,
        u1_0.is_active,
        u1_0.name,
        u1_0.password_hash,
        u1_0.role,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.username=?
2025-08-28 20:01:27 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    select
        b1_0.id,
        b1_0.about,
        b1_0.audio_file_url,
        b1_0.author,
        b1_0.available_copies,
        b1_0.book_cover_url,
        b1_0.category_id,
        b1_0.created_at,
        b1_0.format,
        b1_0.isbn,
        b1_0.name,
        b1_0.pdf_file_url,
        b1_0.publication_year,
        b1_0.short_details,
        b1_0.total_copies,
        b1_0.updated_at 
    from
        books b1_0 
    where
        b1_0.isbn=?
2025-08-28 20:01:27 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.created_at,
        c1_0.description,
        c1_0.name,
        c1_0.updated_at 
    from
        categories c1_0 
    where
        c1_0.id=?
2025-08-28 20:01:27 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    insert 
    into
        books
        (about, audio_file_url, author, available_copies, book_cover_url, category_id, created_at, format, isbn, name, pdf_file_url, publication_year, short_details, total_copies, updated_at, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, default)
2025-08-28 20:01:27 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    select
        b1_0.category_id,
        b1_0.id,
        b1_0.about,
        b1_0.audio_file_url,
        b1_0.author,
        b1_0.available_copies,
        b1_0.book_cover_url,
        b1_0.created_at,
        b1_0.format,
        b1_0.isbn,
        b1_0.name,
        b1_0.pdf_file_url,
        b1_0.publication_year,
        b1_0.short_details,
        b1_0.total_copies,
        b1_0.updated_at 
    from
        books b1_0 
    where
        b1_0.category_id=?
2025-08-28 20:02:05 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.address,
        u1_0.created_at,
        u1_0.date_of_birth,
        u1_0.email,
        u1_0.is_active,
        u1_0.name,
        u1_0.password_hash,
        u1_0.role,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.username=?
2025-08-28 20:02:05 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        b1_0.id,
        b1_0.about,
        b1_0.audio_file_url,
        b1_0.author,
        b1_0.available_copies,
        b1_0.book_cover_url,
        b1_0.category_id,
        b1_0.created_at,
        b1_0.format,
        b1_0.isbn,
        b1_0.name,
        b1_0.pdf_file_url,
        b1_0.publication_year,
        b1_0.short_details,
        b1_0.total_copies,
        b1_0.updated_at 
    from
        books b1_0 
    where
        b1_0.isbn=?
2025-08-28 20:02:05 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.created_at,
        c1_0.description,
        c1_0.name,
        c1_0.updated_at 
    from
        categories c1_0 
    where
        c1_0.id=?
2025-08-28 20:02:05 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    insert 
    into
        books
        (about, audio_file_url, author, available_copies, book_cover_url, category_id, created_at, format, isbn, name, pdf_file_url, publication_year, short_details, total_copies, updated_at, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, default)
2025-08-28 20:02:05 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        b1_0.category_id,
        b1_0.id,
        b1_0.about,
        b1_0.audio_file_url,
        b1_0.author,
        b1_0.available_copies,
        b1_0.book_cover_url,
        b1_0.created_at,
        b1_0.format,
        b1_0.isbn,
        b1_0.name,
        b1_0.pdf_file_url,
        b1_0.publication_year,
        b1_0.short_details,
        b1_0.total_copies,
        b1_0.updated_at 
    from
        books b1_0 
    where
        b1_0.category_id=?
2025-08-28 20:02:05 [http-nio-8080-exec-9] WARN  o.apache.catalina.connector.Request - Failed to deleted temporary file used for part [bookCover]
java.io.UncheckedIOException: Cannot delete C:\Users\c6-std14\AppData\Local\Temp\tomcat.8080.1054937481491301718\work\Tomcat\localhost\ROOT\upload_f9729bae_eed8_46f6_a0da_3106850f8d79_00000001.tmp
	at org.apache.tomcat.util.http.fileupload.disk.DiskFileItem.delete(DiskFileItem.java:196)
	at org.apache.catalina.core.ApplicationPart.delete(ApplicationPart.java:53)
	at org.apache.catalina.connector.Request.recycle(Request.java:470)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:422)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:398)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:63)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:903)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1769)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:52)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1189)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:658)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:63)
	at java.base/java.lang.Thread.run(Thread.java:1447)
Caused by: java.io.IOException: Cannot delete C:\Users\c6-std14\AppData\Local\Temp\tomcat.8080.1054937481491301718\work\Tomcat\localhost\ROOT\upload_f9729bae_eed8_46f6_a0da_3106850f8d79_00000001.tmp
	... 13 common frames omitted
2025-08-28 20:05:17 [SpringApplicationShutdownHook] INFO  o.s.b.w.e.tomcat.GracefulShutdown - Commencing graceful shutdown. Waiting for active requests to complete
2025-08-28 20:05:17 [tomcat-shutdown] INFO  o.s.b.w.e.tomcat.GracefulShutdown - Graceful shutdown complete
2025-08-28 20:05:17 [SpringApplicationShutdownHook] INFO  o.s.o.j.LocalContainerEntityManagerFactoryBean - Closing JPA EntityManagerFactory for persistence unit 'default'
2025-08-28 20:05:17 [SpringApplicationShutdownHook] DEBUG org.hibernate.SQL - 
    drop table if exists admin_settings cascade 
2025-08-28 20:05:17 [SpringApplicationShutdownHook] DEBUG org.hibernate.SQL - 
    drop table if exists bookings cascade 
2025-08-28 20:05:17 [SpringApplicationShutdownHook] DEBUG org.hibernate.SQL - 
    drop table if exists books cascade 
2025-08-28 20:05:17 [SpringApplicationShutdownHook] DEBUG org.hibernate.SQL - 
    drop table if exists borrows cascade 
2025-08-28 20:05:17 [SpringApplicationShutdownHook] DEBUG org.hibernate.SQL - 
    drop table if exists categories cascade 
2025-08-28 20:05:17 [SpringApplicationShutdownHook] DEBUG org.hibernate.SQL - 
    drop table if exists donation_requests cascade 
2025-08-28 20:05:17 [SpringApplicationShutdownHook] DEBUG org.hibernate.SQL - 
    drop table if exists notifications cascade 
2025-08-28 20:05:17 [SpringApplicationShutdownHook] DEBUG org.hibernate.SQL - 
    drop table if exists reviews cascade 
2025-08-28 20:05:17 [SpringApplicationShutdownHook] DEBUG org.hibernate.SQL - 
    drop table if exists users cascade 
2025-08-28 20:05:17 [SpringApplicationShutdownHook] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Shutdown initiated...
2025-08-28 20:05:17 [SpringApplicationShutdownHook] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Shutdown completed.
2025-08-29 11:37:12 [main] INFO  c.l.m.LibraryManagementApplication - Starting LibraryManagementApplication using Java 24.0.2 with PID 10596 (C:\Users\c6-std14\Desktop\LMS 28\lms-backened-23\target\classes started by c6-std14 in C:\Users\c6-std14\Desktop\LMS 28\lms-backened-23)
2025-08-29 11:37:12 [main] DEBUG c.l.m.LibraryManagementApplication - Running with Spring Boot v3.5.4, Spring v6.2.9
2025-08-29 11:37:12 [main] INFO  c.l.m.LibraryManagementApplication - No active profile set, falling back to 1 default profile: "default"
2025-08-29 11:37:12 [main] INFO  c.l.m.LibraryManagementApplication - Starting LibraryManagementApplication using Java 24.0.2 with PID 5088 (C:\Users\c6-std14\Desktop\LMS 28\lms-backened-23\target\classes started by c6-std14 in C:\Users\c6-std14\Desktop\LMS 28\lms-backened-23)
2025-08-29 11:37:12 [main] DEBUG c.l.m.LibraryManagementApplication - Running with Spring Boot v3.5.4, Spring v6.2.9
2025-08-29 11:37:12 [main] INFO  c.l.m.LibraryManagementApplication - No active profile set, falling back to 1 default profile: "default"
2025-08-29 11:37:15 [main] INFO  c.l.m.LibraryManagementApplication - Starting LibraryManagementApplication using Java 24.0.2 with PID 5328 (C:\Users\c6-std14\Desktop\LMS 28\lms-backened-23\target\classes started by c6-std14 in C:\Users\c6-std14\Desktop\LMS 28\lms-backened-23)
2025-08-29 11:37:15 [main] DEBUG c.l.m.LibraryManagementApplication - Running with Spring Boot v3.5.4, Spring v6.2.9
2025-08-29 11:37:15 [main] INFO  c.l.m.LibraryManagementApplication - No active profile set, falling back to 1 default profile: "default"
2025-08-29 11:37:24 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Bootstrapping Spring Data JPA repositories in DEFAULT mode.
2025-08-29 11:37:24 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Bootstrapping Spring Data JPA repositories in DEFAULT mode.
2025-08-29 11:37:24 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Bootstrapping Spring Data JPA repositories in DEFAULT mode.
2025-08-29 11:37:24 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 404 ms. Found 9 JPA repository interfaces.
2025-08-29 11:37:24 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 461 ms. Found 9 JPA repository interfaces.
2025-08-29 11:37:24 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 537 ms. Found 9 JPA repository interfaces.
2025-08-29 11:37:34 [main] INFO  o.s.b.w.e.tomcat.TomcatWebServer - Tomcat initialized with port 8080 (http)
2025-08-29 11:37:34 [main] INFO  o.s.b.w.e.tomcat.TomcatWebServer - Tomcat initialized with port 8080 (http)
2025-08-29 11:37:34 [main] INFO  o.s.b.w.e.tomcat.TomcatWebServer - Tomcat initialized with port 8080 (http)
2025-08-29 11:37:34 [main] INFO  o.a.catalina.core.StandardService - Starting service [Tomcat]
2025-08-29 11:37:34 [main] INFO  o.a.catalina.core.StandardEngine - Starting Servlet engine: [Apache Tomcat/10.1.43]
2025-08-29 11:37:34 [main] INFO  o.a.catalina.core.StandardService - Starting service [Tomcat]
2025-08-29 11:37:34 [main] INFO  o.a.catalina.core.StandardEngine - Starting Servlet engine: [Apache Tomcat/10.1.43]
2025-08-29 11:37:34 [main] INFO  o.a.catalina.core.StandardService - Starting service [Tomcat]
2025-08-29 11:37:34 [main] INFO  o.a.catalina.core.StandardEngine - Starting Servlet engine: [Apache Tomcat/10.1.43]
2025-08-29 11:37:35 [main] INFO  o.a.c.c.C.[Tomcat].[localhost].[/] - Initializing Spring embedded WebApplicationContext
2025-08-29 11:37:35 [main] INFO  o.s.b.w.s.c.ServletWebServerApplicationContext - Root WebApplicationContext: initialization completed in 22652 ms
2025-08-29 11:37:35 [main] INFO  o.a.c.c.C.[Tomcat].[localhost].[/] - Initializing Spring embedded WebApplicationContext
2025-08-29 11:37:35 [main] INFO  o.s.b.w.s.c.ServletWebServerApplicationContext - Root WebApplicationContext: initialization completed in 22566 ms
2025-08-29 11:37:35 [main] INFO  o.a.c.c.C.[Tomcat].[localhost].[/] - Initializing Spring embedded WebApplicationContext
2025-08-29 11:37:35 [main] INFO  o.s.b.w.s.c.ServletWebServerApplicationContext - Root WebApplicationContext: initialization completed in 19961 ms
2025-08-29 11:37:42 [main] INFO  o.h.jpa.internal.util.LogHelper - HHH000204: Processing PersistenceUnitInfo [name: default]
2025-08-29 11:37:42 [main] INFO  o.h.jpa.internal.util.LogHelper - HHH000204: Processing PersistenceUnitInfo [name: default]
2025-08-29 11:37:42 [main] INFO  o.h.jpa.internal.util.LogHelper - HHH000204: Processing PersistenceUnitInfo [name: default]
2025-08-29 11:37:42 [main] INFO  org.hibernate.Version - HHH000412: Hibernate ORM core version 6.6.22.Final
2025-08-29 11:37:42 [main] INFO  org.hibernate.Version - HHH000412: Hibernate ORM core version 6.6.22.Final
2025-08-29 11:37:42 [main] INFO  org.hibernate.Version - HHH000412: Hibernate ORM core version 6.6.22.Final
2025-08-29 11:37:42 [main] INFO  o.h.c.i.RegionFactoryInitiator - HHH000026: Second-level cache disabled
2025-08-29 11:37:43 [main] INFO  o.h.c.i.RegionFactoryInitiator - HHH000026: Second-level cache disabled
2025-08-29 11:37:43 [main] INFO  o.h.c.i.RegionFactoryInitiator - HHH000026: Second-level cache disabled
2025-08-29 11:37:45 [main] INFO  o.s.o.j.p.SpringPersistenceUnitInfo - No LoadTimeWeaver setup: ignoring JPA class transformer
2025-08-29 11:37:45 [main] INFO  o.s.o.j.p.SpringPersistenceUnitInfo - No LoadTimeWeaver setup: ignoring JPA class transformer
2025-08-29 11:37:45 [main] INFO  o.s.o.j.p.SpringPersistenceUnitInfo - No LoadTimeWeaver setup: ignoring JPA class transformer
2025-08-29 11:37:46 [main] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Starting...
2025-08-29 11:37:46 [main] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Starting...
2025-08-29 11:37:46 [main] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Starting...
2025-08-29 11:37:47 [main] INFO  c.l.m.LibraryManagementApplication - Starting LibraryManagementApplication using Java 24.0.2 with PID 13596 (C:\Users\c6-std14\Desktop\LMS 28\lms-backened-23\target\classes started by c6-std14 in C:\Users\c6-std14\Desktop\LMS 28\lms-backened-23)
2025-08-29 11:37:47 [main] DEBUG c.l.m.LibraryManagementApplication - Running with Spring Boot v3.5.4, Spring v6.2.9
2025-08-29 11:37:47 [main] INFO  c.l.m.LibraryManagementApplication - No active profile set, falling back to 1 default profile: "default"
2025-08-29 11:37:47 [main] INFO  com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Added connection conn0: url=jdbc:h2:mem:testdb user=SA
2025-08-29 11:37:47 [main] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Start completed.
2025-08-29 11:37:47 [main] INFO  com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Added connection conn0: url=jdbc:h2:mem:testdb user=SA
2025-08-29 11:37:47 [main] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Start completed.
2025-08-29 11:37:47 [main] INFO  com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Added connection conn0: url=jdbc:h2:mem:testdb user=SA
2025-08-29 11:37:47 [main] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Start completed.
2025-08-29 11:37:48 [main] WARN  org.hibernate.orm.deprecation - HHH90000025: H2Dialect does not need to be specified explicitly using 'hibernate.dialect' (remove the property setting and it will be selected by default)
2025-08-29 11:37:48 [main] WARN  org.hibernate.orm.deprecation - HHH90000025: H2Dialect does not need to be specified explicitly using 'hibernate.dialect' (remove the property setting and it will be selected by default)
2025-08-29 11:37:48 [main] WARN  org.hibernate.orm.deprecation - HHH90000025: H2Dialect does not need to be specified explicitly using 'hibernate.dialect' (remove the property setting and it will be selected by default)
2025-08-29 11:37:48 [main] INFO  o.hibernate.orm.connections.pooling - HHH10001005: Database info:
	Database JDBC URL [Connecting through datasource 'HikariDataSource (HikariPool-1)']
	Database driver: undefined/unknown
	Database version: 2.3.232
	Autocommit mode: undefined/unknown
	Isolation level: undefined/unknown
	Minimum pool size: undefined/unknown
	Maximum pool size: undefined/unknown
2025-08-29 11:37:48 [main] INFO  o.hibernate.orm.connections.pooling - HHH10001005: Database info:
	Database JDBC URL [Connecting through datasource 'HikariDataSource (HikariPool-1)']
	Database driver: undefined/unknown
	Database version: 2.3.232
	Autocommit mode: undefined/unknown
	Isolation level: undefined/unknown
	Minimum pool size: undefined/unknown
	Maximum pool size: undefined/unknown
2025-08-29 11:37:48 [main] INFO  o.hibernate.orm.connections.pooling - HHH10001005: Database info:
	Database JDBC URL [Connecting through datasource 'HikariDataSource (HikariPool-1)']
	Database driver: undefined/unknown
	Database version: 2.3.232
	Autocommit mode: undefined/unknown
	Isolation level: undefined/unknown
	Minimum pool size: undefined/unknown
	Maximum pool size: undefined/unknown
2025-08-29 11:38:01 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Bootstrapping Spring Data JPA repositories in DEFAULT mode.
2025-08-29 11:38:01 [main] INFO  o.h.e.t.j.p.i.JtaPlatformInitiator - HHH000489: No JTA platform available (set 'hibernate.transaction.jta.platform' to enable JTA platform integration)
2025-08-29 11:38:01 [main] INFO  o.h.e.t.j.p.i.JtaPlatformInitiator - HHH000489: No JTA platform available (set 'hibernate.transaction.jta.platform' to enable JTA platform integration)
2025-08-29 11:38:01 [main] DEBUG org.hibernate.SQL - 
    drop table if exists admin_settings cascade 
2025-08-29 11:38:01 [main] DEBUG org.hibernate.SQL - 
    drop table if exists bookings cascade 
2025-08-29 11:38:01 [main] DEBUG org.hibernate.SQL - 
    drop table if exists books cascade 
2025-08-29 11:38:01 [main] DEBUG org.hibernate.SQL - 
    drop table if exists borrows cascade 
2025-08-29 11:38:01 [main] DEBUG org.hibernate.SQL - 
    drop table if exists categories cascade 
2025-08-29 11:38:01 [main] DEBUG org.hibernate.SQL - 
    drop table if exists donation_requests cascade 
2025-08-29 11:38:01 [main] DEBUG org.hibernate.SQL - 
    drop table if exists notifications cascade 
2025-08-29 11:38:01 [main] DEBUG org.hibernate.SQL - 
    drop table if exists reviews cascade 
2025-08-29 11:38:01 [main] DEBUG org.hibernate.SQL - 
    drop table if exists users cascade 
2025-08-29 11:38:01 [main] DEBUG org.hibernate.SQL - 
    drop table if exists admin_settings cascade 
2025-08-29 11:38:01 [main] DEBUG org.hibernate.SQL - 
    drop table if exists bookings cascade 
2025-08-29 11:38:01 [main] DEBUG org.hibernate.SQL - 
    drop table if exists books cascade 
2025-08-29 11:38:01 [main] DEBUG org.hibernate.SQL - 
    drop table if exists borrows cascade 
2025-08-29 11:38:01 [main] DEBUG org.hibernate.SQL - 
    drop table if exists categories cascade 
2025-08-29 11:38:01 [main] DEBUG org.hibernate.SQL - 
    drop table if exists donation_requests cascade 
2025-08-29 11:38:01 [main] DEBUG org.hibernate.SQL - 
    drop table if exists notifications cascade 
2025-08-29 11:38:01 [main] DEBUG org.hibernate.SQL - 
    drop table if exists reviews cascade 
2025-08-29 11:38:01 [main] DEBUG org.hibernate.SQL - 
    drop table if exists users cascade 
2025-08-29 11:38:01 [main] DEBUG org.hibernate.SQL - 
    create table admin_settings (
        booking_days_limit integer,
        borrow_book_limit integer,
        borrow_day_limit integer,
        borrow_extend_limit integer,
        created_at timestamp(6),
        id bigint generated by default as identity,
        updated_at timestamp(6),
        primary key (id)
    )
2025-08-29 11:38:01 [main] INFO  o.h.e.t.j.p.i.JtaPlatformInitiator - HHH000489: No JTA platform available (set 'hibernate.transaction.jta.platform' to enable JTA platform integration)
2025-08-29 11:38:01 [main] DEBUG org.hibernate.SQL - 
    create table admin_settings (
        booking_days_limit integer,
        borrow_book_limit integer,
        borrow_day_limit integer,
        borrow_extend_limit integer,
        created_at timestamp(6),
        id bigint generated by default as identity,
        updated_at timestamp(6),
        primary key (id)
    )
2025-08-29 11:38:01 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 653 ms. Found 9 JPA repository interfaces.
2025-08-29 11:38:01 [main] DEBUG org.hibernate.SQL - 
    create table bookings (
        booking_date date not null,
        expected_available_date date not null,
        book_id bigint not null,
        created_at timestamp(6),
        id bigint generated by default as identity,
        updated_at timestamp(6),
        user_id bigint not null,
        status enum ('CANCELLED','EXPIRED','FULFILLED','PENDING') not null,
        primary key (id)
    )
2025-08-29 11:38:01 [main] DEBUG org.hibernate.SQL - 
    create table books (
        available_copies integer not null,
        publication_year integer,
        total_copies integer not null,
        category_id bigint not null,
        created_at timestamp(6),
        id bigint generated by default as identity,
        updated_at timestamp(6),
        about TEXT,
        audio_file_url varchar(255),
        author varchar(255) not null,
        book_cover_url varchar(255),
        isbn varchar(255) unique,
        name varchar(255) not null,
        pdf_file_url varchar(255),
        short_details varchar(255),
        format enum ('AUDIO_BOOK','E_BOOK','HARD_COPY') not null,
        primary key (id)
    )
2025-08-29 11:38:01 [main] DEBUG org.hibernate.SQL - 
    create table borrows (
        borrow_date date not null,
        due_date date not null,
        extension_count integer,
        return_date date,
        book_id bigint not null,
        created_at timestamp(6),
        id bigint generated by default as identity,
        updated_at timestamp(6),
        user_id bigint not null,
        status enum ('ACCEPTED','ACTIVE','OVERDUE','REJECTED','REQUESTED','RETURNED') not null,
        primary key (id)
    )
2025-08-29 11:38:01 [main] DEBUG org.hibernate.SQL - 
    create table categories (
        created_at timestamp(6),
        id bigint generated by default as identity,
        updated_at timestamp(6),
        description varchar(255),
        name varchar(255) not null unique,
        primary key (id)
    )
2025-08-29 11:38:01 [main] DEBUG org.hibernate.SQL - 
    create table donation_requests (
        created_at timestamp(6),
        id bigint generated by default as identity,
        updated_at timestamp(6),
        user_id bigint not null,
        admin_notes TEXT,
        author varchar(255) not null,
        book_title varchar(255) not null,
        description TEXT,
        isbn varchar(255),
        status enum ('APPROVED','PENDING','RECEIVED','REJECTED') not null,
        primary key (id)
    )
2025-08-29 11:38:01 [main] DEBUG org.hibernate.SQL - 
    create table notifications (
        read boolean not null,
        id bigint generated by default as identity,
        timestamp timestamp(6),
        message varchar(255),
        recipient varchar(255),
        primary key (id)
    )
2025-08-29 11:38:01 [main] DEBUG org.hibernate.SQL - 
    create table bookings (
        booking_date date not null,
        expected_available_date date not null,
        book_id bigint not null,
        created_at timestamp(6),
        id bigint generated by default as identity,
        updated_at timestamp(6),
        user_id bigint not null,
        status enum ('CANCELLED','EXPIRED','FULFILLED','PENDING') not null,
        primary key (id)
    )
2025-08-29 11:38:01 [main] DEBUG org.hibernate.SQL - 
    create table reviews (
        rating integer not null,
        book_id bigint not null,
        created_at timestamp(6),
        id bigint generated by default as identity,
        updated_at timestamp(6),
        user_id bigint not null,
        comment TEXT,
        primary key (id)
    )
2025-08-29 11:38:01 [main] DEBUG org.hibernate.SQL - 
    drop table if exists admin_settings cascade 
2025-08-29 11:38:01 [main] DEBUG org.hibernate.SQL - 
    create table users (
        date_of_birth date,
        is_active boolean not null,
        created_at timestamp(6),
        id bigint generated by default as identity,
        updated_at timestamp(6),
        address varchar(255),
        email varchar(255) not null unique,
        name varchar(255) not null,
        password_hash varchar(255) not null,
        role varchar(255) not null,
        username varchar(255) not null unique,
        primary key (id)
    )
2025-08-29 11:38:01 [main] DEBUG org.hibernate.SQL - 
    create table books (
        available_copies integer not null,
        publication_year integer,
        total_copies integer not null,
        category_id bigint not null,
        created_at timestamp(6),
        id bigint generated by default as identity,
        updated_at timestamp(6),
        about TEXT,
        audio_file_url varchar(255),
        author varchar(255) not null,
        book_cover_url varchar(255),
        isbn varchar(255) unique,
        name varchar(255) not null,
        pdf_file_url varchar(255),
        short_details varchar(255),
        format enum ('AUDIO_BOOK','E_BOOK','HARD_COPY') not null,
        primary key (id)
    )
2025-08-29 11:38:01 [main] DEBUG org.hibernate.SQL - 
    create table borrows (
        borrow_date date not null,
        due_date date not null,
        extension_count integer,
        return_date date,
        book_id bigint not null,
        created_at timestamp(6),
        id bigint generated by default as identity,
        updated_at timestamp(6),
        user_id bigint not null,
        status enum ('ACCEPTED','ACTIVE','OVERDUE','REJECTED','REQUESTED','RETURNED') not null,
        primary key (id)
    )
2025-08-29 11:38:01 [main] DEBUG org.hibernate.SQL - 
    create table categories (
        created_at timestamp(6),
        id bigint generated by default as identity,
        updated_at timestamp(6),
        description varchar(255),
        name varchar(255) not null unique,
        primary key (id)
    )
2025-08-29 11:38:01 [main] DEBUG org.hibernate.SQL - 
    create table donation_requests (
        created_at timestamp(6),
        id bigint generated by default as identity,
        updated_at timestamp(6),
        user_id bigint not null,
        admin_notes TEXT,
        author varchar(255) not null,
        book_title varchar(255) not null,
        description TEXT,
        isbn varchar(255),
        status enum ('APPROVED','PENDING','RECEIVED','REJECTED') not null,
        primary key (id)
    )
2025-08-29 11:38:01 [main] DEBUG org.hibernate.SQL - 
    create table notifications (
        read boolean not null,
        id bigint generated by default as identity,
        timestamp timestamp(6),
        message varchar(255),
        recipient varchar(255),
        primary key (id)
    )
2025-08-29 11:38:01 [main] DEBUG org.hibernate.SQL - 
    create table reviews (
        rating integer not null,
        book_id bigint not null,
        created_at timestamp(6),
        id bigint generated by default as identity,
        updated_at timestamp(6),
        user_id bigint not null,
        comment TEXT,
        primary key (id)
    )
2025-08-29 11:38:01 [main] DEBUG org.hibernate.SQL - 
    create table users (
        date_of_birth date,
        is_active boolean not null,
        created_at timestamp(6),
        id bigint generated by default as identity,
        updated_at timestamp(6),
        address varchar(255),
        email varchar(255) not null unique,
        name varchar(255) not null,
        password_hash varchar(255) not null,
        role varchar(255) not null,
        username varchar(255) not null unique,
        primary key (id)
    )
2025-08-29 11:38:01 [main] DEBUG org.hibernate.SQL - 
    drop table if exists bookings cascade 
2025-08-29 11:38:01 [main] DEBUG org.hibernate.SQL - 
    drop table if exists books cascade 
2025-08-29 11:38:01 [main] DEBUG org.hibernate.SQL - 
    drop table if exists borrows cascade 
2025-08-29 11:38:01 [main] DEBUG org.hibernate.SQL - 
    drop table if exists categories cascade 
2025-08-29 11:38:01 [main] DEBUG org.hibernate.SQL - 
    drop table if exists donation_requests cascade 
2025-08-29 11:38:01 [main] DEBUG org.hibernate.SQL - 
    drop table if exists notifications cascade 
2025-08-29 11:38:01 [main] DEBUG org.hibernate.SQL - 
    drop table if exists reviews cascade 
2025-08-29 11:38:01 [main] DEBUG org.hibernate.SQL - 
    drop table if exists users cascade 
2025-08-29 11:38:01 [main] DEBUG org.hibernate.SQL - 
    alter table if exists bookings 
       add constraint FKm827phjjfy5m6q8vsjmi1gybv 
       foreign key (book_id) 
       references books
2025-08-29 11:38:01 [main] DEBUG org.hibernate.SQL - 
    create table admin_settings (
        booking_days_limit integer,
        borrow_book_limit integer,
        borrow_day_limit integer,
        borrow_extend_limit integer,
        created_at timestamp(6),
        id bigint generated by default as identity,
        updated_at timestamp(6),
        primary key (id)
    )
2025-08-29 11:38:01 [main] DEBUG org.hibernate.SQL - 
    alter table if exists bookings 
       add constraint FKm827phjjfy5m6q8vsjmi1gybv 
       foreign key (book_id) 
       references books
2025-08-29 11:38:02 [main] DEBUG org.hibernate.SQL - 
    alter table if exists bookings 
       add constraint FKeyog2oic85xg7hsu2je2lx3s6 
       foreign key (user_id) 
       references users
2025-08-29 11:38:02 [main] DEBUG org.hibernate.SQL - 
    alter table if exists bookings 
       add constraint FKeyog2oic85xg7hsu2je2lx3s6 
       foreign key (user_id) 
       references users
2025-08-29 11:38:02 [main] DEBUG org.hibernate.SQL - 
    alter table if exists books 
       add constraint FKleqa3hhc0uhfvurq6mil47xk0 
       foreign key (category_id) 
       references categories
2025-08-29 11:38:02 [main] DEBUG org.hibernate.SQL - 
    alter table if exists books 
       add constraint FKleqa3hhc0uhfvurq6mil47xk0 
       foreign key (category_id) 
       references categories
2025-08-29 11:38:02 [main] DEBUG org.hibernate.SQL - 
    alter table if exists borrows 
       add constraint FK8789wjikihu9ocbhamiw789y9 
       foreign key (book_id) 
       references books
2025-08-29 11:38:02 [main] DEBUG org.hibernate.SQL - 
    alter table if exists borrows 
       add constraint FK8789wjikihu9ocbhamiw789y9 
       foreign key (book_id) 
       references books
2025-08-29 11:38:02 [main] DEBUG org.hibernate.SQL - 
    alter table if exists borrows 
       add constraint FKd64ttskt7j96v1nqtpry3pp2a 
       foreign key (user_id) 
       references users
2025-08-29 11:38:02 [main] DEBUG org.hibernate.SQL - 
    alter table if exists donation_requests 
       add constraint FK42i2vj0hduc4jwntg1ute8v4g 
       foreign key (user_id) 
       references users
2025-08-29 11:38:02 [main] DEBUG org.hibernate.SQL - 
    alter table if exists borrows 
       add constraint FKd64ttskt7j96v1nqtpry3pp2a 
       foreign key (user_id) 
       references users
2025-08-29 11:38:02 [main] DEBUG org.hibernate.SQL - 
    alter table if exists reviews 
       add constraint FK6a9k6xvev80se5rreqvuqr7f9 
       foreign key (book_id) 
       references books
2025-08-29 11:38:02 [main] DEBUG org.hibernate.SQL - 
    alter table if exists reviews 
       add constraint FKcgy7qjc1r99dp117y9en6lxye 
       foreign key (user_id) 
       references users
2025-08-29 11:38:02 [main] INFO  o.s.o.j.LocalContainerEntityManagerFactoryBean - Initialized JPA EntityManagerFactory for persistence unit 'default'
2025-08-29 11:38:02 [main] DEBUG org.hibernate.SQL - 
    alter table if exists donation_requests 
       add constraint FK42i2vj0hduc4jwntg1ute8v4g 
       foreign key (user_id) 
       references users
2025-08-29 11:38:02 [main] DEBUG org.hibernate.SQL - 
    alter table if exists reviews 
       add constraint FK6a9k6xvev80se5rreqvuqr7f9 
       foreign key (book_id) 
       references books
2025-08-29 11:38:02 [main] DEBUG org.hibernate.SQL - 
    alter table if exists reviews 
       add constraint FKcgy7qjc1r99dp117y9en6lxye 
       foreign key (user_id) 
       references users
2025-08-29 11:38:02 [main] INFO  o.s.o.j.LocalContainerEntityManagerFactoryBean - Initialized JPA EntityManagerFactory for persistence unit 'default'
2025-08-29 11:38:02 [main] DEBUG org.hibernate.SQL - 
    create table bookings (
        booking_date date not null,
        expected_available_date date not null,
        book_id bigint not null,
        created_at timestamp(6),
        id bigint generated by default as identity,
        updated_at timestamp(6),
        user_id bigint not null,
        status enum ('CANCELLED','EXPIRED','FULFILLED','PENDING') not null,
        primary key (id)
    )
2025-08-29 11:38:02 [main] DEBUG org.hibernate.SQL - 
    create table books (
        available_copies integer not null,
        publication_year integer,
        total_copies integer not null,
        category_id bigint not null,
        created_at timestamp(6),
        id bigint generated by default as identity,
        updated_at timestamp(6),
        about TEXT,
        audio_file_url varchar(255),
        author varchar(255) not null,
        book_cover_url varchar(255),
        isbn varchar(255) unique,
        name varchar(255) not null,
        pdf_file_url varchar(255),
        short_details varchar(255),
        format enum ('AUDIO_BOOK','E_BOOK','HARD_COPY') not null,
        primary key (id)
    )
2025-08-29 11:38:02 [main] DEBUG org.hibernate.SQL - 
    create table borrows (
        borrow_date date not null,
        due_date date not null,
        extension_count integer,
        return_date date,
        book_id bigint not null,
        created_at timestamp(6),
        id bigint generated by default as identity,
        updated_at timestamp(6),
        user_id bigint not null,
        status enum ('ACCEPTED','ACTIVE','OVERDUE','REJECTED','REQUESTED','RETURNED') not null,
        primary key (id)
    )
2025-08-29 11:38:02 [main] DEBUG org.hibernate.SQL - 
    create table categories (
        created_at timestamp(6),
        id bigint generated by default as identity,
        updated_at timestamp(6),
        description varchar(255),
        name varchar(255) not null unique,
        primary key (id)
    )
2025-08-29 11:38:02 [main] DEBUG org.hibernate.SQL - 
    create table donation_requests (
        created_at timestamp(6),
        id bigint generated by default as identity,
        updated_at timestamp(6),
        user_id bigint not null,
        admin_notes TEXT,
        author varchar(255) not null,
        book_title varchar(255) not null,
        description TEXT,
        isbn varchar(255),
        status enum ('APPROVED','PENDING','RECEIVED','REJECTED') not null,
        primary key (id)
    )
2025-08-29 11:38:02 [main] DEBUG org.hibernate.SQL - 
    create table notifications (
        read boolean not null,
        id bigint generated by default as identity,
        timestamp timestamp(6),
        message varchar(255),
        recipient varchar(255),
        primary key (id)
    )
2025-08-29 11:38:02 [main] DEBUG org.hibernate.SQL - 
    create table reviews (
        rating integer not null,
        book_id bigint not null,
        created_at timestamp(6),
        id bigint generated by default as identity,
        updated_at timestamp(6),
        user_id bigint not null,
        comment TEXT,
        primary key (id)
    )
2025-08-29 11:38:02 [main] DEBUG org.hibernate.SQL - 
    create table users (
        date_of_birth date,
        is_active boolean not null,
        created_at timestamp(6),
        id bigint generated by default as identity,
        updated_at timestamp(6),
        address varchar(255),
        email varchar(255) not null unique,
        name varchar(255) not null,
        password_hash varchar(255) not null,
        role varchar(255) not null,
        username varchar(255) not null unique,
        primary key (id)
    )
2025-08-29 11:38:02 [main] DEBUG org.hibernate.SQL - 
    alter table if exists bookings 
       add constraint FKm827phjjfy5m6q8vsjmi1gybv 
       foreign key (book_id) 
       references books
2025-08-29 11:38:02 [main] DEBUG org.hibernate.SQL - 
    alter table if exists bookings 
       add constraint FKeyog2oic85xg7hsu2je2lx3s6 
       foreign key (user_id) 
       references users
2025-08-29 11:38:02 [main] DEBUG org.hibernate.SQL - 
    alter table if exists books 
       add constraint FKleqa3hhc0uhfvurq6mil47xk0 
       foreign key (category_id) 
       references categories
2025-08-29 11:38:02 [main] DEBUG org.hibernate.SQL - 
    alter table if exists borrows 
       add constraint FK8789wjikihu9ocbhamiw789y9 
       foreign key (book_id) 
       references books
2025-08-29 11:38:02 [main] DEBUG org.hibernate.SQL - 
    alter table if exists borrows 
       add constraint FKd64ttskt7j96v1nqtpry3pp2a 
       foreign key (user_id) 
       references users
2025-08-29 11:38:02 [main] DEBUG org.hibernate.SQL - 
    alter table if exists donation_requests 
       add constraint FK42i2vj0hduc4jwntg1ute8v4g 
       foreign key (user_id) 
       references users
2025-08-29 11:38:02 [main] DEBUG org.hibernate.SQL - 
    alter table if exists reviews 
       add constraint FK6a9k6xvev80se5rreqvuqr7f9 
       foreign key (book_id) 
       references books
2025-08-29 11:38:02 [main] DEBUG org.hibernate.SQL - 
    alter table if exists reviews 
       add constraint FKcgy7qjc1r99dp117y9en6lxye 
       foreign key (user_id) 
       references users
2025-08-29 11:38:02 [main] INFO  o.s.o.j.LocalContainerEntityManagerFactoryBean - Initialized JPA EntityManagerFactory for persistence unit 'default'
2025-08-29 11:38:07 [main] INFO  o.s.d.j.r.query.QueryEnhancerFactory - Hibernate is in classpath; If applicable, HQL parser will be used.
2025-08-29 11:38:07 [main] INFO  o.s.d.j.r.query.QueryEnhancerFactory - Hibernate is in classpath; If applicable, HQL parser will be used.
2025-08-29 11:38:08 [main] INFO  o.s.d.j.r.query.QueryEnhancerFactory - Hibernate is in classpath; If applicable, HQL parser will be used.
2025-08-29 11:38:12 [main] INFO  o.s.b.w.e.tomcat.TomcatWebServer - Tomcat initialized with port 8080 (http)
2025-08-29 11:38:12 [main] INFO  o.a.catalina.core.StandardService - Starting service [Tomcat]
2025-08-29 11:38:12 [main] INFO  o.a.catalina.core.StandardEngine - Starting Servlet engine: [Apache Tomcat/10.1.43]
2025-08-29 11:38:12 [main] INFO  o.a.c.c.C.[Tomcat].[localhost].[/] - Initializing Spring embedded WebApplicationContext
2025-08-29 11:38:12 [main] INFO  o.s.b.w.s.c.ServletWebServerApplicationContext - Root WebApplicationContext: initialization completed in 24898 ms
2025-08-29 11:38:15 [main] DEBUG c.l.m.s.JwtAuthenticationFilter - Filter 'jwtAuthenticationFilter' configured for use
2025-08-29 11:38:15 [main] DEBUG c.l.m.s.JwtAuthenticationFilter - Filter 'jwtAuthenticationFilter' configured for use
2025-08-29 11:38:15 [main] DEBUG c.l.m.s.JwtAuthenticationFilter - Filter 'jwtAuthenticationFilter' configured for use
2025-08-29 11:38:15 [main] INFO  o.h.jpa.internal.util.LogHelper - HHH000204: Processing PersistenceUnitInfo [name: default]
2025-08-29 11:38:15 [main] INFO  org.hibernate.Version - HHH000412: Hibernate ORM core version 6.6.22.Final
2025-08-29 11:38:16 [main] INFO  o.h.c.i.RegionFactoryInitiator - HHH000026: Second-level cache disabled
2025-08-29 11:38:17 [main] INFO  o.s.s.c.a.a.c.InitializeAuthenticationProviderBeanManagerConfigurer$InitializeAuthenticationProviderManagerConfigurer - Global AuthenticationManager configured with AuthenticationProvider bean with name authenticationProvider
2025-08-29 11:38:17 [main] WARN  o.s.s.c.a.a.c.InitializeUserDetailsBeanManagerConfigurer$InitializeUserDetailsManagerConfigurer - Global AuthenticationManager configured with an AuthenticationProvider bean. UserDetailsService beans will not be used by Spring Security for automatically configuring username/password login. Consider removing the AuthenticationProvider bean. Alternatively, consider using the UserDetailsService in a manually instantiated DaoAuthenticationProvider. If the current configuration is intentional, to turn off this warning, increase the logging level of 'org.springframework.security.config.annotation.authentication.configuration.InitializeUserDetailsBeanManagerConfigurer' to ERROR
2025-08-29 11:38:18 [main] INFO  o.s.o.j.p.SpringPersistenceUnitInfo - No LoadTimeWeaver setup: ignoring JPA class transformer
2025-08-29 11:38:18 [main] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Starting...
2025-08-29 11:38:18 [main] INFO  o.s.s.c.a.a.c.InitializeAuthenticationProviderBeanManagerConfigurer$InitializeAuthenticationProviderManagerConfigurer - Global AuthenticationManager configured with AuthenticationProvider bean with name authenticationProvider
2025-08-29 11:38:18 [main] WARN  o.s.s.c.a.a.c.InitializeUserDetailsBeanManagerConfigurer$InitializeUserDetailsManagerConfigurer - Global AuthenticationManager configured with an AuthenticationProvider bean. UserDetailsService beans will not be used by Spring Security for automatically configuring username/password login. Consider removing the AuthenticationProvider bean. Alternatively, consider using the UserDetailsService in a manually instantiated DaoAuthenticationProvider. If the current configuration is intentional, to turn off this warning, increase the logging level of 'org.springframework.security.config.annotation.authentication.configuration.InitializeUserDetailsBeanManagerConfigurer' to ERROR
2025-08-29 11:38:18 [main] INFO  o.s.s.c.a.a.c.InitializeAuthenticationProviderBeanManagerConfigurer$InitializeAuthenticationProviderManagerConfigurer - Global AuthenticationManager configured with AuthenticationProvider bean with name authenticationProvider
2025-08-29 11:38:18 [main] WARN  o.s.s.c.a.a.c.InitializeUserDetailsBeanManagerConfigurer$InitializeUserDetailsManagerConfigurer - Global AuthenticationManager configured with an AuthenticationProvider bean. UserDetailsService beans will not be used by Spring Security for automatically configuring username/password login. Consider removing the AuthenticationProvider bean. Alternatively, consider using the UserDetailsService in a manually instantiated DaoAuthenticationProvider. If the current configuration is intentional, to turn off this warning, increase the logging level of 'org.springframework.security.config.annotation.authentication.configuration.InitializeUserDetailsBeanManagerConfigurer' to ERROR
2025-08-29 11:38:20 [main] INFO  com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Added connection conn0: url=jdbc:h2:mem:testdb user=SA
2025-08-29 11:38:20 [main] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Start completed.
2025-08-29 11:38:20 [main] WARN  org.hibernate.orm.deprecation - HHH90000025: H2Dialect does not need to be specified explicitly using 'hibernate.dialect' (remove the property setting and it will be selected by default)
2025-08-29 11:38:20 [main] INFO  o.hibernate.orm.connections.pooling - HHH10001005: Database info:
	Database JDBC URL [Connecting through datasource 'HikariDataSource (HikariPool-1)']
	Database driver: undefined/unknown
	Database version: 2.3.232
	Autocommit mode: undefined/unknown
	Isolation level: undefined/unknown
	Minimum pool size: undefined/unknown
	Maximum pool size: undefined/unknown
2025-08-29 11:38:24 [main] INFO  o.s.b.a.e.web.EndpointLinksResolver - Exposing 2 endpoints beneath base path '/actuator'
2025-08-29 11:38:24 [main] WARN  o.s.b.a.o.j.JpaBaseConfiguration$JpaWebConfiguration - spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
2025-08-29 11:38:24 [main] INFO  o.s.b.a.e.web.EndpointLinksResolver - Exposing 2 endpoints beneath base path '/actuator'
2025-08-29 11:38:25 [main] WARN  o.s.b.a.o.j.JpaBaseConfiguration$JpaWebConfiguration - spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
2025-08-29 11:38:27 [main] INFO  o.s.b.a.e.web.EndpointLinksResolver - Exposing 2 endpoints beneath base path '/actuator'
2025-08-29 11:38:27 [main] WARN  o.s.b.a.o.j.JpaBaseConfiguration$JpaWebConfiguration - spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
2025-08-29 11:38:28 [main] INFO  o.s.b.a.h.H2ConsoleAutoConfiguration - H2 console available at '/h2-console'. Database available at 'jdbc:h2:mem:testdb'
2025-08-29 11:38:28 [main] INFO  o.s.b.a.h.H2ConsoleAutoConfiguration - H2 console available at '/h2-console'. Database available at 'jdbc:h2:mem:testdb'
2025-08-29 11:38:29 [main] INFO  o.s.b.w.e.tomcat.TomcatWebServer - Tomcat started on port 8080 (http) with context path '/'
2025-08-29 11:38:29 [main] INFO  c.l.m.LibraryManagementApplication - Started LibraryManagementApplication in 80.799 seconds (process running for 81.998)
2025-08-29 11:38:29 [main] WARN  o.s.b.w.s.c.AnnotationConfigServletWebServerApplicationContext - Exception encountered during context initialization - cancelling refresh attempt: org.springframework.context.ApplicationContextException: Failed to start bean 'webServerStartStop'
2025-08-29 11:38:29 [main] INFO  o.s.o.j.LocalContainerEntityManagerFactoryBean - Closing JPA EntityManagerFactory for persistence unit 'default'
2025-08-29 11:38:29 [main] DEBUG org.hibernate.SQL - 
    drop table if exists admin_settings cascade 
2025-08-29 11:38:29 [main] DEBUG org.hibernate.SQL - 
    drop table if exists bookings cascade 
2025-08-29 11:38:29 [main] DEBUG org.hibernate.SQL - 
    drop table if exists books cascade 
2025-08-29 11:38:29 [main] DEBUG org.hibernate.SQL - 
    drop table if exists borrows cascade 
2025-08-29 11:38:29 [main] DEBUG org.hibernate.SQL - 
    drop table if exists categories cascade 
2025-08-29 11:38:29 [main] DEBUG org.hibernate.SQL - 
    drop table if exists donation_requests cascade 
2025-08-29 11:38:29 [main] DEBUG org.hibernate.SQL - 
    drop table if exists notifications cascade 
2025-08-29 11:38:29 [main] DEBUG org.hibernate.SQL - 
    drop table if exists reviews cascade 
2025-08-29 11:38:29 [main] DEBUG org.hibernate.SQL - 
    drop table if exists users cascade 
2025-08-29 11:38:29 [main] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Shutdown initiated...
2025-08-29 11:38:29 [main] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Shutdown completed.
2025-08-29 11:38:29 [main] INFO  o.s.b.a.l.ConditionEvaluationReportLogger - 

Error starting ApplicationContext. To display the condition evaluation report re-run your application with 'debug' enabled.
2025-08-29 11:38:29 [main] ERROR o.s.b.d.LoggingFailureAnalysisReporter - 

***************************
APPLICATION FAILED TO START
***************************

Description:

Web server failed to start. Port 8080 was already in use.

Action:

Identify and stop the process that's listening on port 8080 or configure this application to listen on another port.

2025-08-29 11:38:30 [main] INFO  o.h.e.t.j.p.i.JtaPlatformInitiator - HHH000489: No JTA platform available (set 'hibernate.transaction.jta.platform' to enable JTA platform integration)
2025-08-29 11:38:30 [main] DEBUG org.hibernate.SQL - 
    drop table if exists admin_settings cascade 
2025-08-29 11:38:30 [main] DEBUG org.hibernate.SQL - 
    drop table if exists bookings cascade 
2025-08-29 11:38:30 [main] DEBUG org.hibernate.SQL - 
    drop table if exists books cascade 
2025-08-29 11:38:30 [main] DEBUG org.hibernate.SQL - 
    drop table if exists borrows cascade 
2025-08-29 11:38:30 [main] DEBUG org.hibernate.SQL - 
    drop table if exists categories cascade 
2025-08-29 11:38:30 [main] DEBUG org.hibernate.SQL - 
    drop table if exists donation_requests cascade 
2025-08-29 11:38:30 [main] DEBUG org.hibernate.SQL - 
    drop table if exists notifications cascade 
2025-08-29 11:38:30 [main] DEBUG org.hibernate.SQL - 
    drop table if exists reviews cascade 
2025-08-29 11:38:30 [main] DEBUG org.hibernate.SQL - 
    drop table if exists users cascade 
2025-08-29 11:38:30 [main] DEBUG org.hibernate.SQL - 
    create table admin_settings (
        booking_days_limit integer,
        borrow_book_limit integer,
        borrow_day_limit integer,
        borrow_extend_limit integer,
        created_at timestamp(6),
        id bigint generated by default as identity,
        updated_at timestamp(6),
        primary key (id)
    )
2025-08-29 11:38:30 [main] DEBUG org.hibernate.SQL - 
    create table bookings (
        booking_date date not null,
        expected_available_date date not null,
        book_id bigint not null,
        created_at timestamp(6),
        id bigint generated by default as identity,
        updated_at timestamp(6),
        user_id bigint not null,
        status enum ('CANCELLED','EXPIRED','FULFILLED','PENDING') not null,
        primary key (id)
    )
2025-08-29 11:38:30 [main] DEBUG org.hibernate.SQL - 
    create table books (
        available_copies integer not null,
        publication_year integer,
        total_copies integer not null,
        category_id bigint not null,
        created_at timestamp(6),
        id bigint generated by default as identity,
        updated_at timestamp(6),
        about TEXT,
        audio_file_url varchar(255),
        author varchar(255) not null,
        book_cover_url varchar(255),
        isbn varchar(255) unique,
        name varchar(255) not null,
        pdf_file_url varchar(255),
        short_details varchar(255),
        format enum ('AUDIO_BOOK','E_BOOK','HARD_COPY') not null,
        primary key (id)
    )
2025-08-29 11:38:30 [main] DEBUG org.hibernate.SQL - 
    create table borrows (
        borrow_date date not null,
        due_date date not null,
        extension_count integer,
        return_date date,
        book_id bigint not null,
        created_at timestamp(6),
        id bigint generated by default as identity,
        updated_at timestamp(6),
        user_id bigint not null,
        status enum ('ACCEPTED','ACTIVE','OVERDUE','REJECTED','REQUESTED','RETURNED') not null,
        primary key (id)
    )
2025-08-29 11:38:30 [main] DEBUG org.hibernate.SQL - 
    create table categories (
        created_at timestamp(6),
        id bigint generated by default as identity,
        updated_at timestamp(6),
        description varchar(255),
        name varchar(255) not null unique,
        primary key (id)
    )
2025-08-29 11:38:30 [main] DEBUG org.hibernate.SQL - 
    create table donation_requests (
        created_at timestamp(6),
        id bigint generated by default as identity,
        updated_at timestamp(6),
        user_id bigint not null,
        admin_notes TEXT,
        author varchar(255) not null,
        book_title varchar(255) not null,
        description TEXT,
        isbn varchar(255),
        status enum ('APPROVED','PENDING','RECEIVED','REJECTED') not null,
        primary key (id)
    )
2025-08-29 11:38:30 [main] DEBUG org.hibernate.SQL - 
    create table notifications (
        read boolean not null,
        id bigint generated by default as identity,
        timestamp timestamp(6),
        message varchar(255),
        recipient varchar(255),
        primary key (id)
    )
2025-08-29 11:38:30 [main] DEBUG org.hibernate.SQL - 
    create table reviews (
        rating integer not null,
        book_id bigint not null,
        created_at timestamp(6),
        id bigint generated by default as identity,
        updated_at timestamp(6),
        user_id bigint not null,
        comment TEXT,
        primary key (id)
    )
2025-08-29 11:38:30 [main] DEBUG org.hibernate.SQL - 
    create table users (
        date_of_birth date,
        is_active boolean not null,
        created_at timestamp(6),
        id bigint generated by default as identity,
        updated_at timestamp(6),
        address varchar(255),
        email varchar(255) not null unique,
        name varchar(255) not null,
        password_hash varchar(255) not null,
        role varchar(255) not null,
        username varchar(255) not null unique,
        primary key (id)
    )
2025-08-29 11:38:30 [main] DEBUG org.hibernate.SQL - 
    alter table if exists bookings 
       add constraint FKm827phjjfy5m6q8vsjmi1gybv 
       foreign key (book_id) 
       references books
2025-08-29 11:38:30 [main] DEBUG org.hibernate.SQL - 
    alter table if exists bookings 
       add constraint FKeyog2oic85xg7hsu2je2lx3s6 
       foreign key (user_id) 
       references users
2025-08-29 11:38:30 [main] DEBUG org.hibernate.SQL - 
    alter table if exists books 
       add constraint FKleqa3hhc0uhfvurq6mil47xk0 
       foreign key (category_id) 
       references categories
2025-08-29 11:38:30 [main] DEBUG org.hibernate.SQL - 
    alter table if exists borrows 
       add constraint FK8789wjikihu9ocbhamiw789y9 
       foreign key (book_id) 
       references books
2025-08-29 11:38:30 [main] DEBUG org.hibernate.SQL - 
    alter table if exists borrows 
       add constraint FKd64ttskt7j96v1nqtpry3pp2a 
       foreign key (user_id) 
       references users
2025-08-29 11:38:30 [main] DEBUG org.hibernate.SQL - 
    alter table if exists donation_requests 
       add constraint FK42i2vj0hduc4jwntg1ute8v4g 
       foreign key (user_id) 
       references users
2025-08-29 11:38:30 [main] DEBUG org.hibernate.SQL - 
    alter table if exists reviews 
       add constraint FK6a9k6xvev80se5rreqvuqr7f9 
       foreign key (book_id) 
       references books
2025-08-29 11:38:30 [main] DEBUG org.hibernate.SQL - 
    alter table if exists reviews 
       add constraint FKcgy7qjc1r99dp117y9en6lxye 
       foreign key (user_id) 
       references users
2025-08-29 11:38:30 [main] INFO  o.s.o.j.LocalContainerEntityManagerFactoryBean - Initialized JPA EntityManagerFactory for persistence unit 'default'
2025-08-29 11:38:31 [main] INFO  o.s.b.a.h.H2ConsoleAutoConfiguration - H2 console available at '/h2-console'. Database available at 'jdbc:h2:mem:testdb'
2025-08-29 11:38:31 [main] WARN  o.s.b.w.s.c.AnnotationConfigServletWebServerApplicationContext - Exception encountered during context initialization - cancelling refresh attempt: org.springframework.context.ApplicationContextException: Failed to start bean 'webServerStartStop'
2025-08-29 11:38:31 [main] INFO  o.s.o.j.LocalContainerEntityManagerFactoryBean - Closing JPA EntityManagerFactory for persistence unit 'default'
2025-08-29 11:38:31 [main] DEBUG org.hibernate.SQL - 
    drop table if exists admin_settings cascade 
2025-08-29 11:38:31 [main] DEBUG org.hibernate.SQL - 
    drop table if exists bookings cascade 
2025-08-29 11:38:31 [main] DEBUG org.hibernate.SQL - 
    drop table if exists books cascade 
2025-08-29 11:38:31 [main] DEBUG org.hibernate.SQL - 
    drop table if exists borrows cascade 
2025-08-29 11:38:31 [main] DEBUG org.hibernate.SQL - 
    drop table if exists categories cascade 
2025-08-29 11:38:31 [main] DEBUG org.hibernate.SQL - 
    drop table if exists donation_requests cascade 
2025-08-29 11:38:31 [main] DEBUG org.hibernate.SQL - 
    drop table if exists notifications cascade 
2025-08-29 11:38:31 [main] DEBUG org.hibernate.SQL - 
    drop table if exists reviews cascade 
2025-08-29 11:38:31 [main] DEBUG org.hibernate.SQL - 
    drop table if exists users cascade 
2025-08-29 11:38:31 [main] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Shutdown initiated...
2025-08-29 11:38:31 [main] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Shutdown completed.
2025-08-29 11:38:32 [main] INFO  o.s.b.a.l.ConditionEvaluationReportLogger - 

Error starting ApplicationContext. To display the condition evaluation report re-run your application with 'debug' enabled.
2025-08-29 11:38:32 [main] ERROR o.s.b.d.LoggingFailureAnalysisReporter - 

***************************
APPLICATION FAILED TO START
***************************

Description:

Web server failed to start. Port 8080 was already in use.

Action:

Identify and stop the process that's listening on port 8080 or configure this application to listen on another port.

2025-08-29 11:38:32 [main] INFO  o.s.d.j.r.query.QueryEnhancerFactory - Hibernate is in classpath; If applicable, HQL parser will be used.
2025-08-29 11:38:35 [main] DEBUG c.l.m.s.JwtAuthenticationFilter - Filter 'jwtAuthenticationFilter' configured for use
2025-08-29 11:38:35 [main] INFO  o.s.s.c.a.a.c.InitializeAuthenticationProviderBeanManagerConfigurer$InitializeAuthenticationProviderManagerConfigurer - Global AuthenticationManager configured with AuthenticationProvider bean with name authenticationProvider
2025-08-29 11:38:35 [main] WARN  o.s.s.c.a.a.c.InitializeUserDetailsBeanManagerConfigurer$InitializeUserDetailsManagerConfigurer - Global AuthenticationManager configured with an AuthenticationProvider bean. UserDetailsService beans will not be used by Spring Security for automatically configuring username/password login. Consider removing the AuthenticationProvider bean. Alternatively, consider using the UserDetailsService in a manually instantiated DaoAuthenticationProvider. If the current configuration is intentional, to turn off this warning, increase the logging level of 'org.springframework.security.config.annotation.authentication.configuration.InitializeUserDetailsBeanManagerConfigurer' to ERROR
2025-08-29 11:38:37 [main] INFO  o.s.b.a.e.web.EndpointLinksResolver - Exposing 2 endpoints beneath base path '/actuator'
2025-08-29 11:38:37 [main] WARN  o.s.b.a.o.j.JpaBaseConfiguration$JpaWebConfiguration - spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
2025-08-29 11:38:39 [main] INFO  o.s.b.a.h.H2ConsoleAutoConfiguration - H2 console available at '/h2-console'. Database available at 'jdbc:h2:mem:testdb'
2025-08-29 11:38:39 [main] WARN  o.s.b.w.s.c.AnnotationConfigServletWebServerApplicationContext - Exception encountered during context initialization - cancelling refresh attempt: org.springframework.context.ApplicationContextException: Failed to start bean 'webServerStartStop'
2025-08-29 11:38:39 [main] INFO  o.s.o.j.LocalContainerEntityManagerFactoryBean - Closing JPA EntityManagerFactory for persistence unit 'default'
2025-08-29 11:38:39 [main] DEBUG org.hibernate.SQL - 
    drop table if exists admin_settings cascade 
2025-08-29 11:38:39 [main] DEBUG org.hibernate.SQL - 
    drop table if exists bookings cascade 
2025-08-29 11:38:39 [main] DEBUG org.hibernate.SQL - 
    drop table if exists books cascade 
2025-08-29 11:38:39 [main] DEBUG org.hibernate.SQL - 
    drop table if exists borrows cascade 
2025-08-29 11:38:39 [main] DEBUG org.hibernate.SQL - 
    drop table if exists categories cascade 
2025-08-29 11:38:39 [main] DEBUG org.hibernate.SQL - 
    drop table if exists donation_requests cascade 
2025-08-29 11:38:39 [main] DEBUG org.hibernate.SQL - 
    drop table if exists notifications cascade 
2025-08-29 11:38:39 [main] DEBUG org.hibernate.SQL - 
    drop table if exists reviews cascade 
2025-08-29 11:38:39 [main] DEBUG org.hibernate.SQL - 
    drop table if exists users cascade 
2025-08-29 11:38:39 [main] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Shutdown initiated...
2025-08-29 11:38:39 [main] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Shutdown completed.
2025-08-29 11:38:39 [main] INFO  o.s.b.a.l.ConditionEvaluationReportLogger - 

Error starting ApplicationContext. To display the condition evaluation report re-run your application with 'debug' enabled.
2025-08-29 11:38:39 [main] ERROR o.s.b.d.LoggingFailureAnalysisReporter - 

***************************
APPLICATION FAILED TO START
***************************

Description:

Web server failed to start. Port 8080 was already in use.

Action:

Identify and stop the process that's listening on port 8080 or configure this application to listen on another port.

2025-08-29 11:39:22 [http-nio-8080-exec-1] INFO  o.a.c.c.C.[Tomcat].[localhost].[/] - Initializing Spring DispatcherServlet 'dispatcherServlet'
2025-08-29 11:39:22 [http-nio-8080-exec-1] INFO  o.s.web.servlet.DispatcherServlet - Initializing Servlet 'dispatcherServlet'
2025-08-29 11:39:22 [http-nio-8080-exec-1] INFO  o.s.web.servlet.DispatcherServlet - Completed initialization in 3 ms
2025-08-29 11:39:31 [http-nio-8080-exec-4] INFO  o.s.api.AbstractOpenApiResource - Init duration for springdoc-openapi is: 8470 ms
2025-08-29 11:58:38 [SpringApplicationShutdownHook] INFO  o.s.b.w.e.tomcat.GracefulShutdown - Commencing graceful shutdown. Waiting for active requests to complete
2025-08-29 11:58:38 [tomcat-shutdown] INFO  o.s.b.w.e.tomcat.GracefulShutdown - Graceful shutdown complete
2025-08-29 11:58:38 [SpringApplicationShutdownHook] INFO  o.s.o.j.LocalContainerEntityManagerFactoryBean - Closing JPA EntityManagerFactory for persistence unit 'default'
2025-08-29 11:58:38 [SpringApplicationShutdownHook] DEBUG org.hibernate.SQL - 
    drop table if exists admin_settings cascade 
2025-08-29 11:58:38 [SpringApplicationShutdownHook] DEBUG org.hibernate.SQL - 
    drop table if exists bookings cascade 
2025-08-29 11:58:38 [SpringApplicationShutdownHook] DEBUG org.hibernate.SQL - 
    drop table if exists books cascade 
2025-08-29 11:58:38 [SpringApplicationShutdownHook] DEBUG org.hibernate.SQL - 
    drop table if exists borrows cascade 
2025-08-29 11:58:38 [SpringApplicationShutdownHook] DEBUG org.hibernate.SQL - 
    drop table if exists categories cascade 
2025-08-29 11:58:38 [SpringApplicationShutdownHook] DEBUG org.hibernate.SQL - 
    drop table if exists donation_requests cascade 
2025-08-29 11:58:38 [SpringApplicationShutdownHook] DEBUG org.hibernate.SQL - 
    drop table if exists notifications cascade 
2025-08-29 11:58:38 [SpringApplicationShutdownHook] DEBUG org.hibernate.SQL - 
    drop table if exists reviews cascade 
2025-08-29 11:58:38 [SpringApplicationShutdownHook] DEBUG org.hibernate.SQL - 
    drop table if exists users cascade 
2025-08-29 11:58:38 [SpringApplicationShutdownHook] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Shutdown initiated...
2025-08-29 11:58:38 [SpringApplicationShutdownHook] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Shutdown completed.
2025-08-29 12:24:52 [main] INFO  c.l.m.LibraryManagementApplication - Starting LibraryManagementApplication using Java 24.0.2 with PID 2584 (C:\Users\c6-std14\Desktop\LMS 28\lms-backened-23\target\classes started by c6-std14 in C:\Users\c6-std14\Desktop\LMS 28\lms-backened-23)
2025-08-29 12:24:52 [main] DEBUG c.l.m.LibraryManagementApplication - Running with Spring Boot v3.5.4, Spring v6.2.9
2025-08-29 12:24:52 [main] INFO  c.l.m.LibraryManagementApplication - No active profile set, falling back to 1 default profile: "default"
2025-08-29 12:24:55 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Bootstrapping Spring Data JPA repositories in DEFAULT mode.
2025-08-29 12:24:56 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 161 ms. Found 9 JPA repository interfaces.
2025-08-29 12:24:57 [main] INFO  o.s.b.w.e.tomcat.TomcatWebServer - Tomcat initialized with port 8080 (http)
2025-08-29 12:24:57 [main] INFO  o.a.catalina.core.StandardService - Starting service [Tomcat]
2025-08-29 12:24:57 [main] INFO  o.a.catalina.core.StandardEngine - Starting Servlet engine: [Apache Tomcat/10.1.43]
2025-08-29 12:24:57 [main] INFO  o.a.c.c.C.[Tomcat].[localhost].[/] - Initializing Spring embedded WebApplicationContext
2025-08-29 12:24:57 [main] INFO  o.s.b.w.s.c.ServletWebServerApplicationContext - Root WebApplicationContext: initialization completed in 5018 ms
2025-08-29 12:24:58 [main] INFO  o.h.jpa.internal.util.LogHelper - HHH000204: Processing PersistenceUnitInfo [name: default]
2025-08-29 12:24:59 [main] INFO  org.hibernate.Version - HHH000412: Hibernate ORM core version 6.6.22.Final
2025-08-29 12:24:59 [main] INFO  o.h.c.i.RegionFactoryInitiator - HHH000026: Second-level cache disabled
2025-08-29 12:25:00 [main] INFO  o.s.o.j.p.SpringPersistenceUnitInfo - No LoadTimeWeaver setup: ignoring JPA class transformer
2025-08-29 12:25:00 [main] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Starting...
2025-08-29 12:25:01 [main] INFO  com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Added connection conn0: url=jdbc:h2:mem:testdb user=SA
2025-08-29 12:25:01 [main] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Start completed.
2025-08-29 12:25:01 [main] WARN  org.hibernate.orm.deprecation - HHH90000025: H2Dialect does not need to be specified explicitly using 'hibernate.dialect' (remove the property setting and it will be selected by default)
2025-08-29 12:25:01 [main] INFO  o.hibernate.orm.connections.pooling - HHH10001005: Database info:
	Database JDBC URL [Connecting through datasource 'HikariDataSource (HikariPool-1)']
	Database driver: undefined/unknown
	Database version: 2.3.232
	Autocommit mode: undefined/unknown
	Isolation level: undefined/unknown
	Minimum pool size: undefined/unknown
	Maximum pool size: undefined/unknown
2025-08-29 12:25:03 [main] INFO  o.h.e.t.j.p.i.JtaPlatformInitiator - HHH000489: No JTA platform available (set 'hibernate.transaction.jta.platform' to enable JTA platform integration)
2025-08-29 12:25:04 [main] DEBUG org.hibernate.SQL - 
    drop table if exists admin_settings cascade 
2025-08-29 12:25:04 [main] DEBUG org.hibernate.SQL - 
    drop table if exists bookings cascade 
2025-08-29 12:25:04 [main] DEBUG org.hibernate.SQL - 
    drop table if exists books cascade 
2025-08-29 12:25:04 [main] DEBUG org.hibernate.SQL - 
    drop table if exists borrows cascade 
2025-08-29 12:25:04 [main] DEBUG org.hibernate.SQL - 
    drop table if exists categories cascade 
2025-08-29 12:25:04 [main] DEBUG org.hibernate.SQL - 
    drop table if exists donation_requests cascade 
2025-08-29 12:25:04 [main] DEBUG org.hibernate.SQL - 
    drop table if exists notifications cascade 
2025-08-29 12:25:04 [main] DEBUG org.hibernate.SQL - 
    drop table if exists reviews cascade 
2025-08-29 12:25:04 [main] DEBUG org.hibernate.SQL - 
    drop table if exists users cascade 
2025-08-29 12:25:04 [main] DEBUG org.hibernate.SQL - 
    create table admin_settings (
        booking_days_limit integer,
        borrow_book_limit integer,
        borrow_day_limit integer,
        borrow_extend_limit integer,
        created_at timestamp(6),
        id bigint generated by default as identity,
        updated_at timestamp(6),
        primary key (id)
    )
2025-08-29 12:25:04 [main] DEBUG org.hibernate.SQL - 
    create table bookings (
        booking_date date not null,
        expected_available_date date not null,
        book_id bigint not null,
        created_at timestamp(6),
        id bigint generated by default as identity,
        updated_at timestamp(6),
        user_id bigint not null,
        status enum ('CANCELLED','EXPIRED','FULFILLED','PENDING') not null,
        primary key (id)
    )
2025-08-29 12:25:04 [main] DEBUG org.hibernate.SQL - 
    create table books (
        available_copies integer not null,
        publication_year integer,
        total_copies integer not null,
        category_id bigint not null,
        created_at timestamp(6),
        id bigint generated by default as identity,
        updated_at timestamp(6),
        about TEXT,
        audio_file_url varchar(255),
        author varchar(255) not null,
        book_cover_url varchar(255),
        isbn varchar(255) unique,
        name varchar(255) not null,
        pdf_file_url varchar(255),
        short_details varchar(255),
        format enum ('AUDIO_BOOK','E_BOOK','HARD_COPY') not null,
        primary key (id)
    )
2025-08-29 12:25:04 [main] DEBUG org.hibernate.SQL - 
    create table borrows (
        borrow_date date not null,
        due_date date not null,
        extension_count integer,
        return_date date,
        book_id bigint not null,
        created_at timestamp(6),
        id bigint generated by default as identity,
        updated_at timestamp(6),
        user_id bigint not null,
        status enum ('ACCEPTED','ACTIVE','OVERDUE','REJECTED','REQUESTED','RETURNED') not null,
        primary key (id)
    )
2025-08-29 12:25:04 [main] DEBUG org.hibernate.SQL - 
    create table categories (
        created_at timestamp(6),
        id bigint generated by default as identity,
        updated_at timestamp(6),
        description varchar(255),
        name varchar(255) not null unique,
        primary key (id)
    )
2025-08-29 12:25:04 [main] DEBUG org.hibernate.SQL - 
    create table donation_requests (
        created_at timestamp(6),
        id bigint generated by default as identity,
        updated_at timestamp(6),
        user_id bigint not null,
        admin_notes TEXT,
        author varchar(255) not null,
        book_title varchar(255) not null,
        description TEXT,
        isbn varchar(255),
        status enum ('APPROVED','PENDING','RECEIVED','REJECTED') not null,
        primary key (id)
    )
2025-08-29 12:25:04 [main] DEBUG org.hibernate.SQL - 
    create table notifications (
        read boolean not null,
        id bigint generated by default as identity,
        timestamp timestamp(6),
        message varchar(255),
        recipient varchar(255),
        primary key (id)
    )
2025-08-29 12:25:04 [main] DEBUG org.hibernate.SQL - 
    create table reviews (
        rating integer not null,
        book_id bigint not null,
        created_at timestamp(6),
        id bigint generated by default as identity,
        updated_at timestamp(6),
        user_id bigint not null,
        comment TEXT,
        primary key (id)
    )
2025-08-29 12:25:04 [main] DEBUG org.hibernate.SQL - 
    create table users (
        date_of_birth date,
        is_active boolean not null,
        created_at timestamp(6),
        id bigint generated by default as identity,
        updated_at timestamp(6),
        address varchar(255),
        email varchar(255) not null unique,
        name varchar(255) not null,
        password_hash varchar(255) not null,
        role varchar(255) not null,
        username varchar(255) not null unique,
        primary key (id)
    )
2025-08-29 12:25:04 [main] DEBUG org.hibernate.SQL - 
    alter table if exists bookings 
       add constraint FKm827phjjfy5m6q8vsjmi1gybv 
       foreign key (book_id) 
       references books
2025-08-29 12:25:04 [main] DEBUG org.hibernate.SQL - 
    alter table if exists bookings 
       add constraint FKeyog2oic85xg7hsu2je2lx3s6 
       foreign key (user_id) 
       references users
2025-08-29 12:25:04 [main] DEBUG org.hibernate.SQL - 
    alter table if exists books 
       add constraint FKleqa3hhc0uhfvurq6mil47xk0 
       foreign key (category_id) 
       references categories
2025-08-29 12:25:04 [main] DEBUG org.hibernate.SQL - 
    alter table if exists borrows 
       add constraint FK8789wjikihu9ocbhamiw789y9 
       foreign key (book_id) 
       references books
2025-08-29 12:25:04 [main] DEBUG org.hibernate.SQL - 
    alter table if exists borrows 
       add constraint FKd64ttskt7j96v1nqtpry3pp2a 
       foreign key (user_id) 
       references users
2025-08-29 12:25:04 [main] DEBUG org.hibernate.SQL - 
    alter table if exists donation_requests 
       add constraint FK42i2vj0hduc4jwntg1ute8v4g 
       foreign key (user_id) 
       references users
2025-08-29 12:25:04 [main] DEBUG org.hibernate.SQL - 
    alter table if exists reviews 
       add constraint FK6a9k6xvev80se5rreqvuqr7f9 
       foreign key (book_id) 
       references books
2025-08-29 12:25:04 [main] DEBUG org.hibernate.SQL - 
    alter table if exists reviews 
       add constraint FKcgy7qjc1r99dp117y9en6lxye 
       foreign key (user_id) 
       references users
2025-08-29 12:25:04 [main] INFO  o.s.o.j.LocalContainerEntityManagerFactoryBean - Initialized JPA EntityManagerFactory for persistence unit 'default'
2025-08-29 12:25:05 [main] INFO  o.s.d.j.r.query.QueryEnhancerFactory - Hibernate is in classpath; If applicable, HQL parser will be used.
2025-08-29 12:25:07 [main] DEBUG c.l.m.s.JwtAuthenticationFilter - Filter 'jwtAuthenticationFilter' configured for use
2025-08-29 12:25:07 [main] INFO  o.s.s.c.a.a.c.InitializeAuthenticationProviderBeanManagerConfigurer$InitializeAuthenticationProviderManagerConfigurer - Global AuthenticationManager configured with AuthenticationProvider bean with name authenticationProvider
2025-08-29 12:25:07 [main] WARN  o.s.s.c.a.a.c.InitializeUserDetailsBeanManagerConfigurer$InitializeUserDetailsManagerConfigurer - Global AuthenticationManager configured with an AuthenticationProvider bean. UserDetailsService beans will not be used by Spring Security for automatically configuring username/password login. Consider removing the AuthenticationProvider bean. Alternatively, consider using the UserDetailsService in a manually instantiated DaoAuthenticationProvider. If the current configuration is intentional, to turn off this warning, increase the logging level of 'org.springframework.security.config.annotation.authentication.configuration.InitializeUserDetailsBeanManagerConfigurer' to ERROR
2025-08-29 12:25:09 [main] INFO  o.s.b.a.e.web.EndpointLinksResolver - Exposing 2 endpoints beneath base path '/actuator'
2025-08-29 12:25:09 [main] WARN  o.s.b.a.o.j.JpaBaseConfiguration$JpaWebConfiguration - spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
2025-08-29 12:25:11 [main] INFO  o.s.b.a.h.H2ConsoleAutoConfiguration - H2 console available at '/h2-console'. Database available at 'jdbc:h2:mem:testdb'
2025-08-29 12:25:12 [main] INFO  o.s.b.w.e.tomcat.TomcatWebServer - Tomcat started on port 8080 (http) with context path '/'
2025-08-29 12:25:12 [main] INFO  c.l.m.LibraryManagementApplication - Started LibraryManagementApplication in 21.062 seconds (process running for 22.254)
2025-08-29 12:28:08 [http-nio-8080-exec-1] INFO  o.a.c.c.C.[Tomcat].[localhost].[/] - Initializing Spring DispatcherServlet 'dispatcherServlet'
2025-08-29 12:28:08 [http-nio-8080-exec-1] INFO  o.s.web.servlet.DispatcherServlet - Initializing Servlet 'dispatcherServlet'
2025-08-29 12:28:08 [http-nio-8080-exec-1] INFO  o.s.web.servlet.DispatcherServlet - Completed initialization in 2 ms
2025-08-29 12:28:18 [http-nio-8080-exec-4] INFO  o.s.api.AbstractOpenApiResource - Init duration for springdoc-openapi is: 8790 ms
2025-08-29 12:28:28 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.address,
        u1_0.created_at,
        u1_0.date_of_birth,
        u1_0.email,
        u1_0.is_active,
        u1_0.name,
        u1_0.password_hash,
        u1_0.role,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.email=?
2025-08-29 12:28:29 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.address,
        u1_0.created_at,
        u1_0.date_of_birth,
        u1_0.email,
        u1_0.is_active,
        u1_0.name,
        u1_0.password_hash,
        u1_0.role,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.username=?
2025-08-29 12:28:29 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    insert 
    into
        users
        (address, created_at, date_of_birth, email, is_active, name, password_hash, role, updated_at, username, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, default)
2025-08-29 12:29:04 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.address,
        u1_0.created_at,
        u1_0.date_of_birth,
        u1_0.email,
        u1_0.is_active,
        u1_0.name,
        u1_0.password_hash,
        u1_0.role,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.username=?
2025-08-29 12:29:04 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    select
        b1_0.id,
        b1_0.about,
        b1_0.audio_file_url,
        b1_0.author,
        b1_0.available_copies,
        b1_0.book_cover_url,
        b1_0.category_id,
        b1_0.created_at,
        b1_0.format,
        b1_0.isbn,
        b1_0.name,
        b1_0.pdf_file_url,
        b1_0.publication_year,
        b1_0.short_details,
        b1_0.total_copies,
        b1_0.updated_at 
    from
        books b1_0 
    offset
        ? rows 
    fetch
        first ? rows only
2025-08-29 12:29:04 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.created_at,
        c1_0.description,
        c1_0.name,
        c1_0.updated_at 
    from
        categories c1_0 
    where
        c1_0.id=?
2025-08-29 12:29:04 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    select
        b1_0.category_id,
        b1_0.id,
        b1_0.about,
        b1_0.audio_file_url,
        b1_0.author,
        b1_0.available_copies,
        b1_0.book_cover_url,
        b1_0.created_at,
        b1_0.format,
        b1_0.isbn,
        b1_0.name,
        b1_0.pdf_file_url,
        b1_0.publication_year,
        b1_0.short_details,
        b1_0.total_copies,
        b1_0.updated_at 
    from
        books b1_0 
    where
        b1_0.category_id=?
2025-08-29 12:29:04 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    select
        r1_0.book_id,
        r1_0.id,
        r1_0.comment,
        r1_0.created_at,
        r1_0.rating,
        r1_0.updated_at,
        r1_0.user_id 
    from
        reviews r1_0 
    where
        r1_0.book_id=?
2025-08-29 12:29:04 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    select
        r1_0.book_id,
        r1_0.id,
        r1_0.comment,
        r1_0.created_at,
        r1_0.rating,
        r1_0.updated_at,
        r1_0.user_id 
    from
        reviews r1_0 
    where
        r1_0.book_id=?
2025-08-29 12:29:04 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.created_at,
        c1_0.description,
        c1_0.name,
        c1_0.updated_at 
    from
        categories c1_0 
    where
        c1_0.id=?
2025-08-29 12:29:04 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    select
        b1_0.category_id,
        b1_0.id,
        b1_0.about,
        b1_0.audio_file_url,
        b1_0.author,
        b1_0.available_copies,
        b1_0.book_cover_url,
        b1_0.created_at,
        b1_0.format,
        b1_0.isbn,
        b1_0.name,
        b1_0.pdf_file_url,
        b1_0.publication_year,
        b1_0.short_details,
        b1_0.total_copies,
        b1_0.updated_at 
    from
        books b1_0 
    where
        b1_0.category_id=?
2025-08-29 12:29:04 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    select
        r1_0.book_id,
        r1_0.id,
        r1_0.comment,
        r1_0.created_at,
        r1_0.rating,
        r1_0.updated_at,
        r1_0.user_id 
    from
        reviews r1_0 
    where
        r1_0.book_id=?
2025-08-29 12:29:04 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.created_at,
        c1_0.description,
        c1_0.name,
        c1_0.updated_at 
    from
        categories c1_0 
    where
        c1_0.id=?
2025-08-29 12:29:04 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    select
        b1_0.category_id,
        b1_0.id,
        b1_0.about,
        b1_0.audio_file_url,
        b1_0.author,
        b1_0.available_copies,
        b1_0.book_cover_url,
        b1_0.created_at,
        b1_0.format,
        b1_0.isbn,
        b1_0.name,
        b1_0.pdf_file_url,
        b1_0.publication_year,
        b1_0.short_details,
        b1_0.total_copies,
        b1_0.updated_at 
    from
        books b1_0 
    where
        b1_0.category_id=?
2025-08-29 12:29:04 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    select
        r1_0.book_id,
        r1_0.id,
        r1_0.comment,
        r1_0.created_at,
        r1_0.rating,
        r1_0.updated_at,
        r1_0.user_id 
    from
        reviews r1_0 
    where
        r1_0.book_id=?
2025-08-29 12:29:04 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.created_at,
        c1_0.description,
        c1_0.name,
        c1_0.updated_at 
    from
        categories c1_0 
    where
        c1_0.id=?
2025-08-29 12:29:04 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    select
        b1_0.category_id,
        b1_0.id,
        b1_0.about,
        b1_0.audio_file_url,
        b1_0.author,
        b1_0.available_copies,
        b1_0.book_cover_url,
        b1_0.created_at,
        b1_0.format,
        b1_0.isbn,
        b1_0.name,
        b1_0.pdf_file_url,
        b1_0.publication_year,
        b1_0.short_details,
        b1_0.total_copies,
        b1_0.updated_at 
    from
        books b1_0 
    where
        b1_0.category_id=?
2025-08-29 12:29:04 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    select
        r1_0.book_id,
        r1_0.id,
        r1_0.comment,
        r1_0.created_at,
        r1_0.rating,
        r1_0.updated_at,
        r1_0.user_id 
    from
        reviews r1_0 
    where
        r1_0.book_id=?
2025-08-29 12:29:04 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.created_at,
        c1_0.description,
        c1_0.name,
        c1_0.updated_at 
    from
        categories c1_0 
    where
        c1_0.id=?
2025-08-29 12:29:04 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    select
        b1_0.category_id,
        b1_0.id,
        b1_0.about,
        b1_0.audio_file_url,
        b1_0.author,
        b1_0.available_copies,
        b1_0.book_cover_url,
        b1_0.created_at,
        b1_0.format,
        b1_0.isbn,
        b1_0.name,
        b1_0.pdf_file_url,
        b1_0.publication_year,
        b1_0.short_details,
        b1_0.total_copies,
        b1_0.updated_at 
    from
        books b1_0 
    where
        b1_0.category_id=?
2025-08-29 12:29:04 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    select
        r1_0.book_id,
        r1_0.id,
        r1_0.comment,
        r1_0.created_at,
        r1_0.rating,
        r1_0.updated_at,
        r1_0.user_id 
    from
        reviews r1_0 
    where
        r1_0.book_id=?
2025-08-29 12:29:04 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.created_at,
        c1_0.description,
        c1_0.name,
        c1_0.updated_at 
    from
        categories c1_0 
    where
        c1_0.id=?
2025-08-29 12:29:04 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    select
        b1_0.category_id,
        b1_0.id,
        b1_0.about,
        b1_0.audio_file_url,
        b1_0.author,
        b1_0.available_copies,
        b1_0.book_cover_url,
        b1_0.created_at,
        b1_0.format,
        b1_0.isbn,
        b1_0.name,
        b1_0.pdf_file_url,
        b1_0.publication_year,
        b1_0.short_details,
        b1_0.total_copies,
        b1_0.updated_at 
    from
        books b1_0 
    where
        b1_0.category_id=?
2025-08-29 12:29:04 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    select
        r1_0.book_id,
        r1_0.id,
        r1_0.comment,
        r1_0.created_at,
        r1_0.rating,
        r1_0.updated_at,
        r1_0.user_id 
    from
        reviews r1_0 
    where
        r1_0.book_id=?
2025-08-29 12:29:04 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    select
        r1_0.book_id,
        r1_0.id,
        r1_0.comment,
        r1_0.created_at,
        r1_0.rating,
        r1_0.updated_at,
        r1_0.user_id 
    from
        reviews r1_0 
    where
        r1_0.book_id=?
2025-08-29 12:29:04 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    select
        r1_0.book_id,
        r1_0.id,
        r1_0.comment,
        r1_0.created_at,
        r1_0.rating,
        r1_0.updated_at,
        r1_0.user_id 
    from
        reviews r1_0 
    where
        r1_0.book_id=?
2025-08-29 12:29:04 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    select
        r1_0.book_id,
        r1_0.id,
        r1_0.comment,
        r1_0.created_at,
        r1_0.rating,
        r1_0.updated_at,
        r1_0.user_id 
    from
        reviews r1_0 
    where
        r1_0.book_id=?
2025-08-29 12:29:04 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.created_at,
        c1_0.description,
        c1_0.name,
        c1_0.updated_at 
    from
        categories c1_0 
    where
        c1_0.id=?
2025-08-29 12:29:04 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    select
        b1_0.category_id,
        b1_0.id,
        b1_0.about,
        b1_0.audio_file_url,
        b1_0.author,
        b1_0.available_copies,
        b1_0.book_cover_url,
        b1_0.created_at,
        b1_0.format,
        b1_0.isbn,
        b1_0.name,
        b1_0.pdf_file_url,
        b1_0.publication_year,
        b1_0.short_details,
        b1_0.total_copies,
        b1_0.updated_at 
    from
        books b1_0 
    where
        b1_0.category_id=?
2025-08-29 12:29:04 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    select
        r1_0.book_id,
        r1_0.id,
        r1_0.comment,
        r1_0.created_at,
        r1_0.rating,
        r1_0.updated_at,
        r1_0.user_id 
    from
        reviews r1_0 
    where
        r1_0.book_id=?
2025-08-29 12:29:04 [http-nio-8080-exec-6] WARN  o.s.d.w.c.SpringDataJacksonConfiguration$PageModule$WarningLoggingModifier - Serializing PageImpl instances as-is is not supported, meaning that there is no guarantee about the stability of the resulting JSON structure!
	For a stable JSON structure, please use Spring Data's PagedModel (globally via @EnableSpringDataWebSupport(pageSerializationMode = VIA_DTO))
	or Spring HATEOAS and Spring Data's PagedResourcesAssembler as documented in https://docs.spring.io/spring-data/commons/reference/repositories/core-extensions.html#core.web.pageables.

2025-08-29 12:29:08 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.address,
        u1_0.created_at,
        u1_0.date_of_birth,
        u1_0.email,
        u1_0.is_active,
        u1_0.name,
        u1_0.password_hash,
        u1_0.role,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.username=?
2025-08-29 12:29:08 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    select
        b1_0.id,
        b1_0.about,
        b1_0.audio_file_url,
        b1_0.author,
        b1_0.available_copies,
        b1_0.book_cover_url,
        b1_0.category_id,
        b1_0.created_at,
        b1_0.format,
        b1_0.isbn,
        b1_0.name,
        b1_0.pdf_file_url,
        b1_0.publication_year,
        b1_0.short_details,
        b1_0.total_copies,
        b1_0.updated_at 
    from
        books b1_0 
    left join
        categories c1_0 
            on c1_0.id=b1_0.category_id 
    where
        c1_0.id=? 
    fetch
        first ? rows only
2025-08-29 12:29:08 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.created_at,
        c1_0.description,
        c1_0.name,
        c1_0.updated_at 
    from
        categories c1_0 
    where
        c1_0.id=?
2025-08-29 12:29:08 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    select
        b1_0.category_id,
        b1_0.id,
        b1_0.about,
        b1_0.audio_file_url,
        b1_0.author,
        b1_0.available_copies,
        b1_0.book_cover_url,
        b1_0.created_at,
        b1_0.format,
        b1_0.isbn,
        b1_0.name,
        b1_0.pdf_file_url,
        b1_0.publication_year,
        b1_0.short_details,
        b1_0.total_copies,
        b1_0.updated_at 
    from
        books b1_0 
    where
        b1_0.category_id=?
2025-08-29 12:29:08 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    select
        r1_0.book_id,
        r1_0.id,
        r1_0.comment,
        r1_0.created_at,
        r1_0.rating,
        r1_0.updated_at,
        r1_0.user_id 
    from
        reviews r1_0 
    where
        r1_0.book_id=?
2025-08-29 12:29:08 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    select
        r1_0.book_id,
        r1_0.id,
        r1_0.comment,
        r1_0.created_at,
        r1_0.rating,
        r1_0.updated_at,
        r1_0.user_id 
    from
        reviews r1_0 
    where
        r1_0.book_id=?
2025-08-29 12:29:08 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    select
        r1_0.book_id,
        r1_0.id,
        r1_0.comment,
        r1_0.created_at,
        r1_0.rating,
        r1_0.updated_at,
        r1_0.user_id 
    from
        reviews r1_0 
    where
        r1_0.book_id=?
2025-08-29 12:29:32 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.address,
        u1_0.created_at,
        u1_0.date_of_birth,
        u1_0.email,
        u1_0.is_active,
        u1_0.name,
        u1_0.password_hash,
        u1_0.role,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.username=?
2025-08-29 12:29:32 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        b1_0.id,
        b1_0.about,
        b1_0.audio_file_url,
        b1_0.author,
        b1_0.available_copies,
        b1_0.book_cover_url,
        b1_0.category_id,
        b1_0.created_at,
        b1_0.format,
        b1_0.isbn,
        b1_0.name,
        b1_0.pdf_file_url,
        b1_0.publication_year,
        b1_0.short_details,
        b1_0.total_copies,
        b1_0.updated_at 
    from
        books b1_0 
    where
        upper(b1_0.name) like upper(?) escape '\' 
        or upper(b1_0.author) like upper(?) escape '\' 
        or upper(b1_0.isbn) like upper(?) escape '\' 
    fetch
        first ? rows only
2025-08-29 12:29:44 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.address,
        u1_0.created_at,
        u1_0.date_of_birth,
        u1_0.email,
        u1_0.is_active,
        u1_0.name,
        u1_0.password_hash,
        u1_0.role,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.username=?
2025-08-29 12:29:44 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL - 
    select
        b1_0.id,
        b1_0.about,
        b1_0.audio_file_url,
        b1_0.author,
        b1_0.available_copies,
        b1_0.book_cover_url,
        b1_0.category_id,
        b1_0.created_at,
        b1_0.format,
        b1_0.isbn,
        b1_0.name,
        b1_0.pdf_file_url,
        b1_0.publication_year,
        b1_0.short_details,
        b1_0.total_copies,
        b1_0.updated_at 
    from
        books b1_0 
    where
        upper(b1_0.name) like upper(?) escape '\' 
        or upper(b1_0.author) like upper(?) escape '\' 
        or upper(b1_0.isbn) like upper(?) escape '\' 
    fetch
        first ? rows only
2025-08-29 12:29:44 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.created_at,
        c1_0.description,
        c1_0.name,
        c1_0.updated_at 
    from
        categories c1_0 
    where
        c1_0.id=?
2025-08-29 12:29:44 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL - 
    select
        b1_0.category_id,
        b1_0.id,
        b1_0.about,
        b1_0.audio_file_url,
        b1_0.author,
        b1_0.available_copies,
        b1_0.book_cover_url,
        b1_0.created_at,
        b1_0.format,
        b1_0.isbn,
        b1_0.name,
        b1_0.pdf_file_url,
        b1_0.publication_year,
        b1_0.short_details,
        b1_0.total_copies,
        b1_0.updated_at 
    from
        books b1_0 
    where
        b1_0.category_id=?
2025-08-29 12:29:44 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL - 
    select
        r1_0.book_id,
        r1_0.id,
        r1_0.comment,
        r1_0.created_at,
        r1_0.rating,
        r1_0.updated_at,
        r1_0.user_id 
    from
        reviews r1_0 
    where
        r1_0.book_id=?
2025-08-29 12:40:01 [SpringApplicationShutdownHook] INFO  o.s.b.w.e.tomcat.GracefulShutdown - Commencing graceful shutdown. Waiting for active requests to complete
2025-08-29 12:40:01 [tomcat-shutdown] INFO  o.s.b.w.e.tomcat.GracefulShutdown - Graceful shutdown complete
2025-08-29 12:40:01 [SpringApplicationShutdownHook] INFO  o.s.o.j.LocalContainerEntityManagerFactoryBean - Closing JPA EntityManagerFactory for persistence unit 'default'
2025-08-29 12:40:01 [SpringApplicationShutdownHook] DEBUG org.hibernate.SQL - 
    drop table if exists admin_settings cascade 
2025-08-29 12:40:01 [SpringApplicationShutdownHook] DEBUG org.hibernate.SQL - 
    drop table if exists bookings cascade 
2025-08-29 12:40:01 [SpringApplicationShutdownHook] DEBUG org.hibernate.SQL - 
    drop table if exists books cascade 
2025-08-29 12:40:01 [SpringApplicationShutdownHook] DEBUG org.hibernate.SQL - 
    drop table if exists borrows cascade 
2025-08-29 12:40:01 [SpringApplicationShutdownHook] DEBUG org.hibernate.SQL - 
    drop table if exists categories cascade 
2025-08-29 12:40:01 [SpringApplicationShutdownHook] DEBUG org.hibernate.SQL - 
    drop table if exists donation_requests cascade 
2025-08-29 12:40:01 [SpringApplicationShutdownHook] DEBUG org.hibernate.SQL - 
    drop table if exists notifications cascade 
2025-08-29 12:40:01 [SpringApplicationShutdownHook] DEBUG org.hibernate.SQL - 
    drop table if exists reviews cascade 
2025-08-29 12:40:01 [SpringApplicationShutdownHook] DEBUG org.hibernate.SQL - 
    drop table if exists users cascade 
2025-08-29 12:40:01 [SpringApplicationShutdownHook] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Shutdown initiated...
2025-08-29 12:40:01 [SpringApplicationShutdownHook] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Shutdown completed.
